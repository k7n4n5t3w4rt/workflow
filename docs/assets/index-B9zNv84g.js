function aR(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const i in s)if(i!=="default"&&!(i in n)){const r=Object.getOwnPropertyDescriptor(s,i);r&&Object.defineProperty(n,i,r.get?r:{enumerable:!0,get:()=>s[i]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();var Pm={};const Oc={set:(n,e,t)=>(typeof process>"u"||Pm.RUN_CONTEXT!=="testy")&&D().get("easyStorage")===!0?fetch(`https://easy-oe3ejk3kya-ts.a.run.app/set?sid=${n}&dkey=${e}&dvalue=${t}`,{method:"GET",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer"}).then(s=>s.json()).then(s=>s).catch(s=>{console.error(s)}):Promise.resolve(null),get:(n,e)=>(typeof process>"u"||Pm.RUN_CONTEXT!=="testy")&&D().get("easyStorage")===!0?fetch(`https://easy-oe3ejk3kya-ts.a.run.app/get?sid=${n}&dkey=${e}`,{method:"GET",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer"}).then(t=>t.json()).then(t=>t).catch(t=>{console.error(t)}):Promise.resolve(null),getAll:n=>(typeof process>"u"||Pm.RUN_CONTEXT!=="testy")&&D().get("easyStorage")===!0?fetch(`https://easy-oe3ejk3kya-ts.a.run.app/getall?sid=${n}`,{method:"GET",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer"}).then(e=>e.json()).then(e=>e).catch(e=>{console.error(e)}):Promise.resolve(null)},fn=n=>lR(n)||uR(n)||cR(n)||hR(n),lR=n=>{try{return typeof JSON.parse(n)=="number"}catch{return!1}},cR=n=>{if(n==null||typeof n!="string")return!1;const e=n.toLowerCase();return e==="true"||e==="false"},uR=n=>{try{const e=JSON.parse(n);return typeof e=="object"&&e!==null}catch{return!1}},hR=n=>{try{const e=JSON.parse(n);return Array.isArray(e)}catch{return!1}},dR=(n,e,t,s)=>Oc.get(n,s).then(i=>{if(i!=null&&i[s]!==void 0){const r=i[s],o=r.split("___")[0],a=r.split("___")[1];o!==void 0&&a!==void 0&&fn(o)&&fn(a)&&(e=parseInt(a,10),t=JSON.parse(o))}return{eSTimestamp:e,eSValue:t}}).catch(i=>(console.error(i.message),{eSTimestamp:e,eSValue:t})),Bo=(n,e,t)=>{let s=null;try{s=localStorage.getItem(t)}catch{}if(s!=null){const i=s.split("___")[0],r=s.split("___")[1];i!==void 0&&r!==void 0&&(n=JSON.parse(i),e=parseInt(r,10))}return{lSTimestamp:e,lSValue:n}},pR=()=>{let n="NOT SET";try{n=localStorage.getItem("sid")}catch{}return n},E=()=>(globalThis.gState===void 0&&(globalThis.gState=new D_),globalThis.gState),$p=()=>{const n=D().get("steps"),e={};n!==void 0?n.forEach((t,s)=>{e[s.toString()]=[]}):setTimeout(()=>{$p()},1e3),E().set("flwMap",e)},$_=()=>{try{localStorage.removeItem("sceneInitialized")}catch{}E().setSidButNotInLocalStore("workflowState"),E().set("started",!1),E().set("paused",!1),E().set("sceneInitialized",!1),E().set("sceneInitialized",!1),E().set("arrivalNumber",D().get("arrivalRate")),E().set("clckCbGroup",{}),E().set("clckCube",{}),E().set("clicks",0),E().set("endPosition",{}),E().set("expdtCount",D().get("expdtQueueLength")),E().set("flwItems",[]),E().set("flwItmsToMove",{}),E().set("flwItmTracker",{}),E().set("flwMap",{}),$p(),E().set("flwItmsPulledCount",0),E().set("scnData",{}),E().set("strtPosition",{}),E().set("vSphere",{}),E().set("isUpdtngCnfg",!1),E().set("tmBox",0),E().set("thrPutPerDay",0),E().set("thrPutExpPerDay",0),E().set("thrPut",0),E().set("flwTime",0),E().set("flwTmExp",0),E().set("wip",0),E().set("wipExp",0),E().set("value",0),E().set("started",0),E().set("vQueue",new ws),E().set("flwTmQueue",new ws),E().set("thrPtQueue",new ws),E().set("wipQueue",new ws),E().set("flwTmExpQueue",new ws),E().set("thrPtExpQueue",new ws),E().set("wipExpQueue",new ws)};function ws(){this.items={},this.headIndex=0,this.tailIndex=0,this.enqueue=n=>{this.items[this.tailIndex]=n,this.tailIndex++},this.dequeue=()=>{const n=this.items[this.headIndex];return delete this.items[this.headIndex],this.headIndex++,n},this.total=()=>{let n=0;for(const e in this.items)n+=this.items[e].reduce((t,s)=>t+s,0);return Math.round(n*100)/100},this.dailyMean=()=>{if(this.length()===0)return 0;let n=0,e=0;for(const s in this.items)e+=1,n+=this.items[s].reduce((i,r)=>r>0?i+r:i,0);if(e===0)return 0;const t=n/e;return Math.round(t*100)/100},this.flwItemMean=()=>{if(this.length()===0)return 0;let n=0,e=0;for(const s in this.items)n+=this.items[s].reduce((i,r)=>(e+=1,r>0?i+r:i),0);if(e===0)return 0;const t=n/e;return Math.round(t*100)/100},this.length=()=>this.tailIndex-this.headIndex}var fR={};function D_(){this.sid="workflow",this.setSid=n=>{this.sid=n;try{localStorage.setItem("sid",n)}catch{}return this},this.setSidButNotInLocalStore=n=>(this.sid=n,this),this.setSidIfNotInLocalStore=n=>{let e="NOT SET 3";try{e=pR()}catch{}if(e!=null&&e!=="NOT SET 3")this.sid=e;else{this.sid=n;try{localStorage.setItem("sid",n)}catch{}}return this},this.getSid=()=>this.sid,this.keyValuePairs={},this.get=n=>{let e=this.keyValuePairs[n],t="NOT SET 6",s=0;return{lSTimestamp:s,lSValue:t}=Bo(t,s,n),t!=="NOT SET 6"&&(e=t),fn(e)&&(e=JSON.parse(e)),e},this.clear=()=>(this.keyValuePairs=[],this),this.getAllKeyValuePairsDeepCopy=()=>JSON.parse(JSON.stringify(this.keyValuePairs)),this.setAllKeyValuePairsWithFreshQueues=n=>(Object.keys(n).forEach(e=>{e!=="vQueue"&&e!=="flwTmExpQueue"&&e!=="flwTmQueue"&&e!=="thrPtExpQueue"&&e!=="thrPtQueue"&&e!=="wipExpQueue"&&e!=="wipQueue"&&this.set(e,n[e])}),this.set("flwTmExpQueue",new ws),this.set("flwTmQueue",new ws),this.set("thrPtExpQueue",new ws),this.set("thrPtQueue",new ws),this.set("vQueue",new ws),this.set("wipExpQueue",new ws),this.set("wipQueue",new ws),this),this.set=(n,e)=>{if(this.keyValuePairs[n]=e,this.sid==="workflowState")return e;const t=e,s=JSON.stringify(e)+"___"+Date.now().toString();try{localStorage.setItem(n,s)}catch{}return typeof process<"u"&&fR.RUN_CONTEXT==="testy"||this.keyValuePairs.easyStorage===!0&&Oc.set(this.sid,n,s),t},this.setIfNotCached=async(n,e)=>{if(this.sid==="workflowState")return e;let t="NOT SET 4",s=0;if(this.keyValuePairs.easyStorage===!0){const o=await dR(this.sid,s,t,n);s=o.eSTimestamp,t=o.eSValue}let i="NOT SET 5",r=0;if({lSTimestamp:r,lSValue:i}=Bo(i,r,n),s>r){this.keyValuePairs[n]=t;const o=JSON.stringify(t)+"___"+s.toString();try{localStorage.setItem(n,o)}catch{}return fn(e)&&(e=JSON.parse(e)),e}if(r>s){this.keyValuePairs[n]=i,e=i;const o=JSON.stringify(e)+"___"+r.toString();return this.keyValuePairs.easyStorage===!0&&Oc.set(this.sid,n,o),fn(e)&&(e=JSON.parse(e)),e}if(s>0&&r>0&&r===s)return this.keyValuePairs[n]=i,fn(i)&&(i=JSON.parse(i)),i;if(r===0&&s===0){this.keyValuePairs[n]=e;const o=JSON.stringify(e)+"___"+Date.now().toString();this.keyValuePairs.easyStorage===!0&&Oc.set(this.sid,n,o);try{localStorage.setItem(n,o)}catch{}return fn(e)&&(e=JSON.parse(e)),e}return fn(e)&&(e=JSON.parse(e)),e},this.setNoCache=(n,e)=>{if(this.keyValuePairs[n]=e,this.sid==="workflowState")return e;let t="NOT SET 1",s=0;({lSTimestamp:s,lSValue:t}=Bo(t,s,"autoMode"));const i=JSON.stringify(e)+"___"+Date.now().toString();try{localStorage.setItem(n,i)}catch{}return fn(e)&&(e=JSON.parse(e)),e},this.setNoCacheIfNotInLocalStorageAddToLocalStorage=(n,e)=>{if(this.keyValuePairs[n]=e,this.sid==="workflowState")return e;let t="NOT SET 2",s=0;if({lSTimestamp:s,lSValue:t}=Bo(t,s,n),t==="NOT SET 2"){const i=JSON.stringify(e)+"___"+Date.now().toString();try{localStorage.setItem(n,i)}catch{}}return fn(e)&&(e=JSON.parse(e)),e}}const D=()=>(globalThis.gSttngs===void 0&&(globalThis.gSttngs=new D_),globalThis.gSttngs),mR=()=>{try{Oc.getAll(D().getSid()).then(n=>{if(n!=null){Object.keys(D().keyValuePairs).forEach(s=>{if(n[s]===void 0)return;let i="NOT SET IN EASY",r=0,o="NOT SET IN LOCAL",a=0;const l=n[s],c=l.split("___")[0],u=l.split("___")[1];c!==void 0&&u!==void 0&&(r=parseInt(u,10),i=c,fn(c)&&(i=JSON.parse(c))),{lSTimestamp:a,lSValue:o}=Bo(o,a,s),r>a&&D().set(s,i),a>=r&&D().setNoCacheIfNotInLocalStorageAddToLocalStorage(s,o)});let e=0,t="NOT SET";({lSTimestamp:e,lSValue:t}=Bo(t,e,"autoMode")),t!=="NOT SET"&&e>0&&D().setNoCacheIfNotInLocalStorageAddToLocalStorage("autoMode",t),e=0,t="NOT SET",{lSTimestamp:e,lSValue:t}=Bo(t,e,"easyStorage"),t!=="NOT SET"&&e>0&&D().setNoCache("easyStorage",t)}})}catch(n){console.error(n)}},Wv=n=>Math.round(n*100)/100,Gd=()=>D().get("steps")===void 0?0:D().get("steps").reduce((n,e)=>e.status==="touch"?n+e.movingDevUnits:n,0),L_=()=>{const n=D().get("steps");return n!==void 0?n.reduce((e,t)=>t.status==="touch"?e+t.limit:e,0):(setTimeout(L_,1e3),0)},Dp=()=>D().get("steps").reduce((n,e)=>e.status==="touch"?n+1:n,0),gR=()=>{const n=Dp(),t=Gd()/n;let r=L_()/n/t;return r===0&&(r=1),r*D().get("devPowerFix")},xR=async()=>{D().setIfNotCached("autoMode",!1),D().setIfNotCached("easyStorage",!1),await D().setIfNotCached("devPowerFix",1),await D().setIfNotCached("targetFlowTime",10),await D().setIfNotCached("drag",0),await D().setIfNotCached("dragPoint",.5),await D().setIfNotCached("paretoPoint",.8),await D().setIfNotCached("arrivalRate",1),await D().setIfNotCached("flwTimeMin",1),await D().setIfNotCached("timeBox",10),await D().setIfNotCached("expdtQueueLength",0),await D().setIfNotCached("expdtDvUnitsFactor",1),await D().setIfNotCached("flwItmSizeLimit",1),await D().setIfNotCached("numberOfSteps",6),await D().setIfNotCached("rangeMax",10),await D().setIfNotCached("rangeIncreaseRate",.1),await D().setIfNotCached("rangeMidpoint",.1),await D().setIfNotCached("fps",1),await D().setIfNotCached("showMetrics",!0),D().set("colorGold","f6ba00"),D().set("colorGrey","808080"),D().set("colorGreen","00ff00"),D().set("colorBlue","1d2570"),D().setIfNotCached("paramsMaxWip",20);const n=await D().setIfNotCached("scaleCm",7),e=D().set("scale",n/100);D().set("x",e),D().set("y",e),D().set("z",e),D().set("step",Wv(e*5)),D().set("yOffset",Wv(e*10)),D().setIfNotCached("sid","FlwAttractor_v0.1.0"),D().setIfNotCached("devUnitsTerm","Devs"),D().setIfNotCached("displayName","FlowAttractor_v0.1.0"),D().setIfNotCached("devUnitsMoveToWork",!1),await D().setIfNotCached("staggeredStart",!0),await D().setIfNotCached("death",0),await D().setIfNotCached("backlogDeath",0)},yR=async()=>{await D().setIfNotCached("steps",[{name:"Open",status:"backlog",limit:10,movingLimit:10},{name:"Ready",status:"wait",limit:10,movingLimit:10},{name:"In Progress",status:"touch",limit:10,movingLimit:10,devUnits:5,movingDevUnits:5,flwTimeAtStart:5,actualFlwTime:5},{name:"Ready for Test",status:"wait",limit:0,movingLimit:0},{name:"In Test",status:"touch",limit:10,movingLimit:10,devUnits:5,movingDevUnits:5,flwTimeAtStart:5,actualFlwTime:7.5},{name:"Done",status:"done",limit:0,movingLimit:0}])},bR=async()=>{await D().setIfNotCached("devPowerFixParam",!1),await D().setIfNotCached("dragParam",!1),await D().setIfNotCached("dragPointParam",!1),await D().setIfNotCached("paretoPointParam",!0),await D().setIfNotCached("arrivalRateParam",!1),await D().setIfNotCached("flwTimeMinParam",!0),await D().setIfNotCached("timeBoxParam",!1),await D().setIfNotCached("expdtQueueLengthParam",!1),await D().setIfNotCached("expdtDvUnitsFactorParam",!1),await D().setIfNotCached("flwItmSizeLimitParam",!0),await D().setIfNotCached("backlogDeathParam",!1),await D().setIfNotCached("movingWipLimitsParam",!1),await D().setIfNotCached("movingDevUnitsParam",!1),await D().setIfNotCached("devUnitsMoveToWorkParam",!1),await D().setIfNotCached("staggeredStartParam",!1),await D().setIfNotCached("fpsParam",!1)};var gu,qt,F_,Fo,Gv,P_,O_,z_,s0,Wg,Gg,B_,qc={},V_=[],vR=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,xu=Array.isArray;function Vi(n,e){for(var t in e)n[t]=e[t];return n}function i0(n){n&&n.parentNode&&n.parentNode.removeChild(n)}function Lp(n,e,t){var s,i,r,o={};for(r in e)r=="key"?s=e[r]:r=="ref"?i=e[r]:o[r]=e[r];if(arguments.length>2&&(o.children=arguments.length>3?gu.call(arguments,2):t),typeof n=="function"&&n.defaultProps!=null)for(r in n.defaultProps)o[r]===void 0&&(o[r]=n.defaultProps[r]);return zc(n,o,s,i,null)}function zc(n,e,t,s,i){var r={type:n,props:e,key:t,ref:s,__k:null,__:null,__b:0,__e:null,__c:null,constructor:void 0,__v:i??++F_,__i:-1,__u:0};return i==null&&qt.vnode!=null&&qt.vnode(r),r}function Fp(n){return n.children}function Bc(n,e){this.props=n,this.context=e}function vl(n,e){if(e==null)return n.__?vl(n.__,n.__i+1):null;for(var t;e<n.__k.length;e++)if((t=n.__k[e])!=null&&t.__e!=null)return t.__e;return typeof n.type=="function"?vl(n):null}function U_(n){var e,t;if((n=n.__)!=null&&n.__c!=null){for(n.__e=n.__c.base=null,e=0;e<n.__k.length;e++)if((t=n.__k[e])!=null&&t.__e!=null){n.__e=n.__c.base=t.__e;break}return U_(n)}}function Hg(n){(!n.__d&&(n.__d=!0)&&Fo.push(n)&&!Hd.__r++||Gv!=qt.debounceRendering)&&((Gv=qt.debounceRendering)||P_)(Hd)}function Hd(){for(var n,e,t,s,i,r,o,a=1;Fo.length;)Fo.length>a&&Fo.sort(O_),n=Fo.shift(),a=Fo.length,n.__d&&(t=void 0,i=(s=(e=n).__v).__e,r=[],o=[],e.__P&&((t=Vi({},s)).__v=s.__v+1,qt.vnode&&qt.vnode(t),r0(e.__P,t,s,e.__n,e.__P.namespaceURI,32&s.__u?[i]:null,r,i??vl(s),!!(32&s.__u),o),t.__v=s.__v,t.__.__k[t.__i]=t,H_(r,t,o),t.__e!=i&&U_(t)));Hd.__r=0}function W_(n,e,t,s,i,r,o,a,l,c,u){var h,d,p,f,g,y,m=s&&s.__k||V_,x=e.length;for(l=wR(t,e,m,l,x),h=0;h<x;h++)(p=t.__k[h])!=null&&(d=p.__i==-1?qc:m[p.__i]||qc,p.__i=h,y=r0(n,p,d,i,r,o,a,l,c,u),f=p.__e,p.ref&&d.ref!=p.ref&&(d.ref&&o0(d.ref,null,p),u.push(p.ref,p.__c||f,p)),g==null&&f!=null&&(g=f),4&p.__u||d.__k===p.__k?l=G_(p,l,n):typeof p.type=="function"&&y!==void 0?l=y:f&&(l=f.nextSibling),p.__u&=-7);return t.__e=g,l}function wR(n,e,t,s,i){var r,o,a,l,c,u=t.length,h=u,d=0;for(n.__k=new Array(i),r=0;r<i;r++)(o=e[r])!=null&&typeof o!="boolean"&&typeof o!="function"?(l=r+d,(o=n.__k[r]=typeof o=="string"||typeof o=="number"||typeof o=="bigint"||o.constructor==String?zc(null,o,null,null,null):xu(o)?zc(Fp,{children:o},null,null,null):o.constructor==null&&o.__b>0?zc(o.type,o.props,o.key,o.ref?o.ref:null,o.__v):o).__=n,o.__b=n.__b+1,a=null,(c=o.__i=SR(o,t,l,h))!=-1&&(h--,(a=t[c])&&(a.__u|=2)),a==null||a.__v==null?(c==-1&&(i>u?d--:i<u&&d++),typeof o.type!="function"&&(o.__u|=4)):c!=l&&(c==l-1?d--:c==l+1?d++:(c>l?d--:d++,o.__u|=4))):n.__k[r]=null;if(h)for(r=0;r<u;r++)(a=t[r])!=null&&!(2&a.__u)&&(a.__e==s&&(s=vl(a)),X_(a,a));return s}function G_(n,e,t){var s,i;if(typeof n.type=="function"){for(s=n.__k,i=0;s&&i<s.length;i++)s[i]&&(s[i].__=n,e=G_(s[i],e,t));return e}n.__e!=e&&(e&&n.type&&!t.contains(e)&&(e=vl(n)),t.insertBefore(n.__e,e||null),e=n.__e);do e=e&&e.nextSibling;while(e!=null&&e.nodeType==8);return e}function jg(n,e){return e=e||[],n==null||typeof n=="boolean"||(xu(n)?n.some(function(t){jg(t,e)}):e.push(n)),e}function SR(n,e,t,s){var i,r,o=n.key,a=n.type,l=e[t];if(l===null&&n.key==null||l&&o==l.key&&a==l.type&&!(2&l.__u))return t;if(s>(l!=null&&!(2&l.__u)?1:0))for(i=t-1,r=t+1;i>=0||r<e.length;){if(i>=0){if((l=e[i])&&!(2&l.__u)&&o==l.key&&a==l.type)return i;i--}if(r<e.length){if((l=e[r])&&!(2&l.__u)&&o==l.key&&a==l.type)return r;r++}}return-1}function Hv(n,e,t){e[0]=="-"?n.setProperty(e,t??""):n[e]=t==null?"":typeof t!="number"||vR.test(e)?t:t+"px"}function Hh(n,e,t,s,i){var r,o;e:if(e=="style")if(typeof t=="string")n.style.cssText=t;else{if(typeof s=="string"&&(n.style.cssText=s=""),s)for(e in s)t&&e in t||Hv(n.style,e,"");if(t)for(e in t)s&&t[e]==s[e]||Hv(n.style,e,t[e])}else if(e[0]=="o"&&e[1]=="n")r=e!=(e=e.replace(z_,"$1")),o=e.toLowerCase(),e=o in n||e=="onFocusOut"||e=="onFocusIn"?o.slice(2):e.slice(2),n.l||(n.l={}),n.l[e+r]=t,t?s?t.u=s.u:(t.u=s0,n.addEventListener(e,r?Gg:Wg,r)):n.removeEventListener(e,r?Gg:Wg,r);else{if(i=="http://www.w3.org/2000/svg")e=e.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(e!="width"&&e!="height"&&e!="href"&&e!="list"&&e!="form"&&e!="tabIndex"&&e!="download"&&e!="rowSpan"&&e!="colSpan"&&e!="role"&&e!="popover"&&e in n)try{n[e]=t??"";break e}catch{}typeof t=="function"||(t==null||t===!1&&e[4]!="-"?n.removeAttribute(e):n.setAttribute(e,e=="popover"&&t==1?"":t))}}function jv(n){return function(e){if(this.l){var t=this.l[e.type+n];if(e.t==null)e.t=s0++;else if(e.t<t.u)return;return t(qt.event?qt.event(e):e)}}}function r0(n,e,t,s,i,r,o,a,l,c){var u,h,d,p,f,g,y,m,x,v,b,w,S,_,I,N,k,M=e.type;if(e.constructor!=null)return null;128&t.__u&&(l=!!(32&t.__u),r=[a=e.__e=t.__e]),(u=qt.__b)&&u(e);e:if(typeof M=="function")try{if(m=e.props,x="prototype"in M&&M.prototype.render,v=(u=M.contextType)&&s[u.__c],b=u?v?v.props.value:u.__:s,t.__c?y=(h=e.__c=t.__c).__=h.__E:(x?e.__c=h=new M(m,b):(e.__c=h=new Bc(m,b),h.constructor=M,h.render=CR),v&&v.sub(h),h.props=m,h.state||(h.state={}),h.context=b,h.__n=s,d=h.__d=!0,h.__h=[],h._sb=[]),x&&h.__s==null&&(h.__s=h.state),x&&M.getDerivedStateFromProps!=null&&(h.__s==h.state&&(h.__s=Vi({},h.__s)),Vi(h.__s,M.getDerivedStateFromProps(m,h.__s))),p=h.props,f=h.state,h.__v=e,d)x&&M.getDerivedStateFromProps==null&&h.componentWillMount!=null&&h.componentWillMount(),x&&h.componentDidMount!=null&&h.__h.push(h.componentDidMount);else{if(x&&M.getDerivedStateFromProps==null&&m!==p&&h.componentWillReceiveProps!=null&&h.componentWillReceiveProps(m,b),!h.__e&&h.shouldComponentUpdate!=null&&h.shouldComponentUpdate(m,h.__s,b)===!1||e.__v==t.__v){for(e.__v!=t.__v&&(h.props=m,h.state=h.__s,h.__d=!1),e.__e=t.__e,e.__k=t.__k,e.__k.some(function(T){T&&(T.__=e)}),w=0;w<h._sb.length;w++)h.__h.push(h._sb[w]);h._sb=[],h.__h.length&&o.push(h);break e}h.componentWillUpdate!=null&&h.componentWillUpdate(m,h.__s,b),x&&h.componentDidUpdate!=null&&h.__h.push(function(){h.componentDidUpdate(p,f,g)})}if(h.context=b,h.props=m,h.__P=n,h.__e=!1,S=qt.__r,_=0,x){for(h.state=h.__s,h.__d=!1,S&&S(e),u=h.render(h.props,h.state,h.context),I=0;I<h._sb.length;I++)h.__h.push(h._sb[I]);h._sb=[]}else do h.__d=!1,S&&S(e),u=h.render(h.props,h.state,h.context),h.state=h.__s;while(h.__d&&++_<25);h.state=h.__s,h.getChildContext!=null&&(s=Vi(Vi({},s),h.getChildContext())),x&&!d&&h.getSnapshotBeforeUpdate!=null&&(g=h.getSnapshotBeforeUpdate(p,f)),N=u,u!=null&&u.type===Fp&&u.key==null&&(N=j_(u.props.children)),a=W_(n,xu(N)?N:[N],e,t,s,i,r,o,a,l,c),h.base=e.__e,e.__u&=-161,h.__h.length&&o.push(h),y&&(h.__E=h.__=null)}catch(T){if(e.__v=null,l||r!=null)if(T.then){for(e.__u|=l?160:128;a&&a.nodeType==8&&a.nextSibling;)a=a.nextSibling;r[r.indexOf(a)]=null,e.__e=a}else for(k=r.length;k--;)i0(r[k]);else e.__e=t.__e,e.__k=t.__k;qt.__e(T,e,t)}else r==null&&e.__v==t.__v?(e.__k=t.__k,e.__e=t.__e):a=e.__e=_R(t.__e,e,t,s,i,r,o,l,c);return(u=qt.diffed)&&u(e),128&e.__u?void 0:a}function H_(n,e,t){for(var s=0;s<t.length;s++)o0(t[s],t[++s],t[++s]);qt.__c&&qt.__c(e,n),n.some(function(i){try{n=i.__h,i.__h=[],n.some(function(r){r.call(i)})}catch(r){qt.__e(r,i.__v)}})}function j_(n){return typeof n!="object"||n==null||n.__b&&n.__b>0?n:xu(n)?n.map(j_):Vi({},n)}function _R(n,e,t,s,i,r,o,a,l){var c,u,h,d,p,f,g,y=t.props,m=e.props,x=e.type;if(x=="svg"?i="http://www.w3.org/2000/svg":x=="math"?i="http://www.w3.org/1998/Math/MathML":i||(i="http://www.w3.org/1999/xhtml"),r!=null){for(c=0;c<r.length;c++)if((p=r[c])&&"setAttribute"in p==!!x&&(x?p.localName==x:p.nodeType==3)){n=p,r[c]=null;break}}if(n==null){if(x==null)return document.createTextNode(m);n=document.createElementNS(i,x,m.is&&m),a&&(qt.__m&&qt.__m(e,r),a=!1),r=null}if(x==null)y===m||a&&n.data==m||(n.data=m);else{if(r=r&&gu.call(n.childNodes),y=t.props||qc,!a&&r!=null)for(y={},c=0;c<n.attributes.length;c++)y[(p=n.attributes[c]).name]=p.value;for(c in y)if(p=y[c],c!="children"){if(c=="dangerouslySetInnerHTML")h=p;else if(!(c in m)){if(c=="value"&&"defaultValue"in m||c=="checked"&&"defaultChecked"in m)continue;Hh(n,c,null,p,i)}}for(c in m)p=m[c],c=="children"?d=p:c=="dangerouslySetInnerHTML"?u=p:c=="value"?f=p:c=="checked"?g=p:a&&typeof p!="function"||y[c]===p||Hh(n,c,p,y[c],i);if(u)a||h&&(u.__html==h.__html||u.__html==n.innerHTML)||(n.innerHTML=u.__html),e.__k=[];else if(h&&(n.innerHTML=""),W_(e.type=="template"?n.content:n,xu(d)?d:[d],e,t,s,x=="foreignObject"?"http://www.w3.org/1999/xhtml":i,r,o,r?r[0]:t.__k&&vl(t,0),a,l),r!=null)for(c=r.length;c--;)i0(r[c]);a||(c="value",x=="progress"&&f==null?n.removeAttribute("value"):f!=null&&(f!==n[c]||x=="progress"&&!f||x=="option"&&f!=y[c])&&Hh(n,c,f,y[c],i),c="checked",g!=null&&g!=n[c]&&Hh(n,c,g,y[c],i))}return n}function o0(n,e,t){try{if(typeof n=="function"){var s=typeof n.__u=="function";s&&n.__u(),s&&e==null||(n.__u=n(e))}else n.current=e}catch(i){qt.__e(i,t)}}function X_(n,e,t){var s,i;if(qt.unmount&&qt.unmount(n),(s=n.ref)&&(s.current&&s.current!=n.__e||o0(s,null,e)),(s=n.__c)!=null){if(s.componentWillUnmount)try{s.componentWillUnmount()}catch(r){qt.__e(r,e)}s.base=s.__P=null}if(s=n.__k)for(i=0;i<s.length;i++)s[i]&&X_(s[i],e,t||typeof n.type!="function");t||i0(n.__e),n.__c=n.__=n.__e=void 0}function CR(n,e,t){return this.constructor(n,t)}function TR(n,e,t){var s,i,r,o;e==document&&(e=document.documentElement),qt.__&&qt.__(n,e),i=(s=!1)?null:e.__k,r=[],o=[],r0(e,n=e.__k=Lp(Fp,null,[n]),i||qc,qc,e.namespaceURI,i?null:e.firstChild?gu.call(e.childNodes):null,r,i?i.__e:e.firstChild,s,o),H_(r,n,o)}function IR(n,e,t){var s,i,r,o,a=Vi({},n.props);for(r in n.type&&n.type.defaultProps&&(o=n.type.defaultProps),e)r=="key"?s=e[r]:r=="ref"?i=e[r]:a[r]=e[r]===void 0&&o!=null?o[r]:e[r];return arguments.length>2&&(a.children=arguments.length>3?gu.call(arguments,2):t),zc(n.type,a,s||n.key,i||n.ref,null)}function ER(n){function e(t){var s,i;return this.getChildContext||(s=new Set,(i={})[e.__c]=this,this.getChildContext=function(){return i},this.componentWillUnmount=function(){s=null},this.shouldComponentUpdate=function(r){this.props.value!=r.value&&s.forEach(function(o){o.__e=!0,Hg(o)})},this.sub=function(r){s.add(r);var o=r.componentWillUnmount;r.componentWillUnmount=function(){s&&s.delete(r),o&&o.call(r)}}),t.children}return e.__c="__cC"+B_++,e.__=n,e.Provider=e.__l=(e.Consumer=function(t,s){return t.children(s)}).contextType=e,e}gu=V_.slice,qt={__e:function(n,e,t,s){for(var i,r,o;e=e.__;)if((i=e.__c)&&!i.__)try{if((r=i.constructor)&&r.getDerivedStateFromError!=null&&(i.setState(r.getDerivedStateFromError(n)),o=i.__d),i.componentDidCatch!=null&&(i.componentDidCatch(n,s||{}),o=i.__d),o)return i.__E=i}catch(a){n=a}throw n}},F_=0,Bc.prototype.setState=function(n,e){var t;t=this.__s!=null&&this.__s!=this.state?this.__s:this.__s=Vi({},this.state),typeof n=="function"&&(n=n(Vi({},t),this.props)),n&&Vi(t,n),n!=null&&this.__v&&(e&&this._sb.push(e),Hg(this))},Bc.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),Hg(this))},Bc.prototype.render=Fp,Fo=[],P_=typeof Promise=="function"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,O_=function(n,e){return n.__v.__b-e.__v.__b},Hd.__r=0,z_=/(PointerCapture)$|Capture$/i,s0=0,Wg=jv(!1),Gg=jv(!0),B_=0;var MR={};function q_(n,e){for(var t in e)n[t]=e[t];return n}function Z_(n,e,t){var s=/(?:\?([^#]*))?(#.*)?$/,i=n.match(s),r={},o;if(i&&i[1])for(var a=i[1].split("&"),l=0;l<a.length;l++){var c=a[l].split("=");r[decodeURIComponent(c[0])]=decodeURIComponent(c.slice(1).join("="))}n=Xg(n.replace(s,"")),e=Xg(e||"");for(var u=Math.max(n.length,e.length),h=0;h<u;h++)if(e[h]&&e[h].charAt(0)===":"){var d=e[h].replace(/(^:|[+*?]+$)/g,""),p=(e[h].match(/[+*?]+$/)||MR)[0]||"",f=~p.indexOf("+"),g=~p.indexOf("*"),y=n[h]||"";if(!y&&!g&&(p.indexOf("?")<0||f)){o=!1;break}if(r[d]=decodeURIComponent(y),f||g){r[d]=n.slice(h).map(decodeURIComponent).join("/");break}}else if(e[h]!==n[h]){o=!1;break}return t.default!==!0&&o===!1?!1:r}function kR(n,e){return n.rank<e.rank?1:n.rank>e.rank?-1:n.index-e.index}function NR(n,e){return n.index=e,n.rank=$R(n),n.props}function Xg(n){return n.replace(/(^\/+|\/+$)/g,"").split("/")}function AR(n){return n.charAt(0)==":"?1+"*+?".indexOf(n.charAt(n.length-1))||4:5}function RR(n){return Xg(n).map(AR).join("")}function $R(n){return n.props.default?0:RR(n.props.path)}var $s=null,Go=[],qg=[],DR={};function LR(n,e){e===void 0&&(e="push"),$s&&$s[e]?$s[e](n):typeof history<"u"&&history[e+"State"]&&history[e+"State"](null,null,n)}function a0(){var n;return $s&&$s.location?n=$s.location:$s&&$s.getCurrentLocation?n=$s.getCurrentLocation():n=typeof location<"u"?location:DR,""+(n.pathname||"")+(n.search||"")}function Pp(n,e){return e===void 0&&(e=!1),typeof n!="string"&&n.url&&(e=n.replace,n=n.url),FR(n)&&LR(n,e?"replace":"push"),Y_(n)}function FR(n){for(var e=Go.length;e--;)if(Go[e].canRoute(n))return!0;return!1}function Y_(n){for(var e=!1,t=0;t<Go.length;t++)Go[t].routeTo(n)===!0&&(e=!0);for(var s=qg.length;s--;)qg[s](n);return e}function J_(n){if(!(!n||!n.getAttribute)){var e=n.getAttribute("href"),t=n.getAttribute("target");if(!(!e||!e.match(/^\//g)||t&&!t.match(/^_?self$/i)))return Pp(e)}}function PR(n){if(!(n.ctrlKey||n.metaKey||n.altKey||n.shiftKey||n.button!==0))return J_(n.currentTarget||n.target||this),K_(n)}function K_(n){return n&&(n.stopImmediatePropagation&&n.stopImmediatePropagation(),n.stopPropagation&&n.stopPropagation(),n.preventDefault()),!1}function OR(n){if(!(n.ctrlKey||n.metaKey||n.altKey||n.shiftKey||n.button!==0)){var e=n.target;do if(String(e.nodeName).toUpperCase()==="A"&&e.getAttribute("href")){if(e.hasAttribute("native"))return;if(J_(e))return K_(n)}while(e=e.parentNode)}}var Xv=!1;function zR(){Xv||(typeof addEventListener=="function"&&($s||addEventListener("popstate",function(){Y_(a0())}),addEventListener("click",OR)),Xv=!0)}var Ji=function(n){function e(t){n.call(this,t),t.history&&($s=t.history),this.state={url:t.url||a0()},zR()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.shouldComponentUpdate=function(s){return s.static!==!0?!0:s.url!==this.props.url||s.onChange!==this.props.onChange},e.prototype.canRoute=function(s){var i=jg(this.props.children);return this.getMatchingChildren(i,s,!1).length>0},e.prototype.routeTo=function(s){this.setState({url:s});var i=this.canRoute(s);return this.updating||this.forceUpdate(),i},e.prototype.componentWillMount=function(){Go.push(this),this.updating=!0},e.prototype.componentDidMount=function(){var s=this;$s&&(this.unlisten=$s.listen(function(i){s.routeTo(""+(i.pathname||"")+(i.search||""))})),this.updating=!1},e.prototype.componentWillUnmount=function(){typeof this.unlisten=="function"&&this.unlisten(),Go.splice(Go.indexOf(this),1)},e.prototype.componentWillUpdate=function(){this.updating=!0},e.prototype.componentDidUpdate=function(){this.updating=!1},e.prototype.getMatchingChildren=function(s,i,r){return s.filter(NR).sort(kR).map(function(o){var a=Z_(i,o.props.path,o.props);if(a){if(r!==!1){var l={url:i,matches:a};return q_(l,a),delete l.ref,delete l.key,IR(o,l)}return o}}).filter(Boolean)},e.prototype.render=function(s,i){var r=s.children,o=s.onChange,a=i.url,l=this.getMatchingChildren(jg(r),a,!0),c=l[0]||null,u=this.previousUrl;return a!==u&&(this.previousUrl=a,typeof o=="function"&&o({router:this,url:a,previous:u,active:l,current:c})),c},e}(Bc),BR=function(n){return Lp("a",q_({onClick:PR},n))},VR=function(n){return Lp(n.component,n)};Ji.subscribers=qg;Ji.getCurrentUrl=a0;Ji.route=Pp;Ji.Router=Ji;Ji.Route=VR;Ji.Link=BR;Ji.exec=Z_;var Q_=function(n,e,t,s){var i;e[0]=0;for(var r=1;r<e.length;r++){var o=e[r++],a=e[r]?(e[0]|=o?1:2,t[e[r++]]):e[++r];o===3?s[0]=a:o===4?s[1]=Object.assign(s[1]||{},a):o===5?(s[1]=s[1]||{})[e[++r]]=a:o===6?s[1][e[++r]]+=a+"":o?(i=n.apply(a,Q_(n,a,t,["",null])),s.push(i),a[0]?e[0]|=2:(e[r-2]=0,e[r]=i)):s.push(a)}return s},qv=new Map;function UR(n){var e=qv.get(this);return e||(e=new Map,qv.set(this,e)),(e=Q_(this,e.get(n)||(e.set(n,e=function(t){for(var s,i,r=1,o="",a="",l=[0],c=function(d){r===1&&(d||(o=o.replace(/^\s*\n\s*|\s*\n\s*$/g,"")))?l.push(0,d,o):r===3&&(d||o)?(l.push(3,d,o),r=2):r===2&&o==="..."&&d?l.push(4,d,0):r===2&&o&&!d?l.push(5,0,!0,o):r>=5&&((o||!d&&r===5)&&(l.push(r,0,o,i),r=6),d&&(l.push(r,d,0,i),r=6)),o=""},u=0;u<t.length;u++){u&&(r===1&&c(),c(u));for(var h=0;h<t[u].length;h++)s=t[u][h],r===1?s==="<"?(c(),l=[l],r=3):o+=s:r===4?o==="--"&&s===">"?(r=1,o=""):o=s+o[0]:a?s===a?a="":o+=s:s==='"'||s==="'"?a=s:s===">"?(c(),r=1):r&&(s==="="?(r=5,i=o,o=""):s==="/"&&(r<5||t[u][h+1]===">")?(c(),r===3&&(l=l[0]),r=l,(l=l[0]).push(2,0,r),r=0):s===" "||s==="	"||s===`
`||s==="\r"?(c(),r=2):o+=s),r===3&&o==="!--"&&(r=4,l=l[0])}return c(),l}(n)),e),arguments,[])).length>1?e:e[0]}var Fe=UR.bind(Lp),Zc,sn,Om,Zv,Zg=0,eC=[],yn=qt,Yv=yn.__b,Jv=yn.__r,Kv=yn.diffed,Qv=yn.__c,ew=yn.unmount,tw=yn.__;function l0(n,e){yn.__h&&yn.__h(sn,n,Zg||e),Zg=0;var t=sn.__H||(sn.__H={__:[],__h:[]});return n>=t.__.length&&t.__.push({}),t.__[n]}function Kt(n){return Zg=1,tC(nC,n)}function tC(n,e,t){var s=l0(Zc++,2);if(s.t=n,!s.__c&&(s.__=[nC(void 0,e),function(a){var l=s.__N?s.__N[0]:s.__[0],c=s.t(l,a);l!==c&&(s.__N=[c,s.__[1]],s.__c.setState({}))}],s.__c=sn,!sn.__f)){var i=function(a,l,c){if(!s.__c.__H)return!0;var u=s.__c.__H.__.filter(function(d){return!!d.__c});if(u.every(function(d){return!d.__N}))return!r||r.call(this,a,l,c);var h=s.__c.props!==a;return u.forEach(function(d){if(d.__N){var p=d.__[0];d.__=d.__N,d.__N=void 0,p!==d.__[0]&&(h=!0)}}),r&&r.call(this,a,l,c)||h};sn.__f=!0;var r=sn.shouldComponentUpdate,o=sn.componentWillUpdate;sn.componentWillUpdate=function(a,l,c){if(this.__e){var u=r;r=void 0,i(a,l,c),r=u}o&&o.call(this,a,l,c)},sn.shouldComponentUpdate=i}return s.__N||s.__}function Bt(n,e){var t=l0(Zc++,3);!yn.__s&&HR(t.__H,e)&&(t.__=n,t.u=e,sn.__H.__h.push(t))}function Ol(n){var e=sn.context[n.__c],t=l0(Zc++,9);return t.c=n,e?(t.__==null&&(t.__=!0,e.sub(sn)),e.props.value):n.__}function WR(){for(var n;n=eC.shift();)if(n.__P&&n.__H)try{n.__H.__h.forEach(Pd),n.__H.__h.forEach(Yg),n.__H.__h=[]}catch(e){n.__H.__h=[],yn.__e(e,n.__v)}}yn.__b=function(n){sn=null,Yv&&Yv(n)},yn.__=function(n,e){n&&e.__k&&e.__k.__m&&(n.__m=e.__k.__m),tw&&tw(n,e)},yn.__r=function(n){Jv&&Jv(n),Zc=0;var e=(sn=n.__c).__H;e&&(Om===sn?(e.__h=[],sn.__h=[],e.__.forEach(function(t){t.__N&&(t.__=t.__N),t.u=t.__N=void 0})):(e.__h.forEach(Pd),e.__h.forEach(Yg),e.__h=[],Zc=0)),Om=sn},yn.diffed=function(n){Kv&&Kv(n);var e=n.__c;e&&e.__H&&(e.__H.__h.length&&(eC.push(e)!==1&&Zv===yn.requestAnimationFrame||((Zv=yn.requestAnimationFrame)||GR)(WR)),e.__H.__.forEach(function(t){t.u&&(t.__H=t.u),t.u=void 0})),Om=sn=null},yn.__c=function(n,e){e.some(function(t){try{t.__h.forEach(Pd),t.__h=t.__h.filter(function(s){return!s.__||Yg(s)})}catch(s){e.some(function(i){i.__h&&(i.__h=[])}),e=[],yn.__e(s,t.__v)}}),Qv&&Qv(n,e)},yn.unmount=function(n){ew&&ew(n);var e,t=n.__c;t&&t.__H&&(t.__H.__.forEach(function(s){try{Pd(s)}catch(i){e=i}}),t.__H=void 0,e&&yn.__e(e,t.__v))};var nw=typeof requestAnimationFrame=="function";function GR(n){var e,t=function(){clearTimeout(s),nw&&cancelAnimationFrame(e),setTimeout(n)},s=setTimeout(t,35);nw&&(e=requestAnimationFrame(t))}function Pd(n){var e=sn,t=n.__c;typeof t=="function"&&(n.__c=void 0,t()),sn=e}function Yg(n){var e=sn;n.__c=n.__(),sn=e}function HR(n,e){return!n||n.length!==e.length||e.some(function(t,s){return t!==n[s]})}function nC(n,e){return typeof e=="function"?e(n):e}const jR=(n,e)=>{switch(e.type){case"SET":const{key:t,value:s}=e.payload;return{...n,[t]:s};default:return n}},io=ER([{},()=>{}]),sw=n=>{const e={...D().keyValuePairs,...E().keyValuePairs},[t,s]=tC(jR,e);return Bt(()=>{const i=()=>{E().get("isUpdtngCnfg")!==!0&&(Object.keys(D().keyValuePairs).forEach(o=>{const a=D().get(o);if(o==="staggeredStart")try{const l=localStorage.getItem("staggeredStart");if(l){const c=l.split("___")[0];if(c){const u=JSON.parse(c);s({type:"SET",payload:{key:o,value:u}});return}}}catch(l){console.error("Error reading staggeredStart in AppContext:",l)}s({type:"SET",payload:{key:o,value:a}})}),Object.keys(E().keyValuePairs).forEach(o=>{const a=E().get(o);s({type:"SET",payload:{key:o,value:a}})})),setTimeout(i,300)};i()},[]),Fe`
      <${io.Provider} value=${[t,s]}>
				${n.children}
      </${io.Provider}>
  `};/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const c0="136",Ra={ROTATE:0,DOLLY:1,PAN:2},$a={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},XR=0,iw=1,qR=2,sC=1,ZR=2,Nc=3,wl=0,En=1,Sr=2,iC=1,Zr=0,Vc=1,rw=2,ow=3,aw=4,YR=5,tl=100,JR=101,KR=102,lw=103,cw=104,QR=200,e$=201,t$=202,n$=203,rC=204,oC=205,s$=206,i$=207,r$=208,o$=209,a$=210,l$=0,c$=1,u$=2,Jg=3,h$=4,d$=5,p$=6,f$=7,Op=0,m$=1,g$=2,Yr=0,x$=1,y$=2,b$=3,v$=4,w$=5,aC=300,yu=301,bu=302,Kg=303,Qg=304,zp=306,u0=307,ex=1e3,Ds=1001,tx=1002,Mn=1003,uw=1004,hw=1005,fs=1006,S$=1007,Bp=1008,yr=1009,_$=1010,C$=1011,Yc=1012,T$=1013,Od=1014,Gr=1015,Ho=1016,I$=1017,E$=1018,M$=1019,ul=1020,k$=1021,jo=1022,Pn=1023,N$=1024,A$=1025,Xo=1026,Sl=1027,R$=1028,$$=1029,D$=1030,L$=1031,F$=1032,P$=1033,dw=33776,pw=33777,fw=33778,mw=33779,gw=35840,xw=35841,yw=35842,bw=35843,O$=36196,vw=37492,ww=37496,z$=37808,B$=37809,V$=37810,U$=37811,W$=37812,G$=37813,H$=37814,j$=37815,X$=37816,q$=37817,Z$=37818,Y$=37819,J$=37820,K$=37821,Q$=36492,eD=37840,tD=37841,nD=37842,sD=37843,iD=37844,rD=37845,oD=37846,aD=37847,lD=37848,cD=37849,uD=37850,hD=37851,dD=37852,pD=37853,fD=2200,mD=2201,gD=2202,jd=2300,Xd=2301,zm=2302,rl=2400,ol=2401,qd=2402,h0=2500,lC=2501,xD=0,yi=3e3,zl=3001,yD=3200,bD=3201,Bl=0,vD=1,Bm=7680,wD=519,Jc=35044,Zd=35048,Sw="300 es";class fo{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const s=this._listeners;s[e]===void 0&&(s[e]=[]),s[e].indexOf(t)===-1&&s[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const s=this._listeners;return s[e]!==void 0&&s[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const s=this._listeners[e.type];if(s!==void 0){e.target=this;const i=s.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const Wn=[];for(let n=0;n<256;n++)Wn[n]=(n<16?"0":"")+n.toString(16);const Vm=Math.PI/180,nx=180/Math.PI;function Hi(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,s=Math.random()*4294967295|0;return(Wn[n&255]+Wn[n>>8&255]+Wn[n>>16&255]+Wn[n>>24&255]+"-"+Wn[e&255]+Wn[e>>8&255]+"-"+Wn[e>>16&15|64]+Wn[e>>24&255]+"-"+Wn[t&63|128]+Wn[t>>8&255]+"-"+Wn[t>>16&255]+Wn[t>>24&255]+Wn[s&255]+Wn[s>>8&255]+Wn[s>>16&255]+Wn[s>>24&255]).toUpperCase()}function Ss(n,e,t){return Math.max(e,Math.min(t,n))}function SD(n,e){return(n%e+e)%e}function Um(n,e,t){return(1-t)*n+t*e}function _w(n){return(n&n-1)===0&&n!==0}function _D(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}class Ie{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,s=this.y,i=e.elements;return this.x=i[0]*t+i[3]*s+i[6],this.y=i[1]*t+i[4]*s+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(e,Math.min(t,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,s=this.y-e.y;return t*t+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,s){return s!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const s=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*s-o*i+e.x,this.y=r*i+o*s+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}Ie.prototype.isVector2=!0;class Gn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,s,i,r,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=r,u[5]=l,u[6]=s,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,s=e.elements;return t[0]=s[0],t[1]=s[1],t[2]=s[2],t[3]=s[3],t[4]=s[4],t[5]=s[5],t[6]=s[6],t[7]=s[7],t[8]=s[8],this}extractBasis(e,t,s){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),s.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const s=e.elements,i=t.elements,r=this.elements,o=s[0],a=s[3],l=s[6],c=s[1],u=s[4],h=s[7],d=s[2],p=s[5],f=s[8],g=i[0],y=i[3],m=i[6],x=i[1],v=i[4],b=i[7],w=i[2],S=i[5],_=i[8];return r[0]=o*g+a*x+l*w,r[3]=o*y+a*v+l*S,r[6]=o*m+a*b+l*_,r[1]=c*g+u*x+h*w,r[4]=c*y+u*v+h*S,r[7]=c*m+u*b+h*_,r[2]=d*g+p*x+f*w,r[5]=d*y+p*v+f*S,r[8]=d*m+p*b+f*_,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],s=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-s*r*u+s*a*l+i*r*c-i*o*l}invert(){const e=this.elements,t=e[0],s=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,d=a*l-u*r,p=c*r-o*l,f=t*h+s*d+i*p;if(f===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/f;return e[0]=h*g,e[1]=(i*c-u*s)*g,e[2]=(a*s-i*o)*g,e[3]=d*g,e[4]=(u*t-i*l)*g,e[5]=(i*r-a*t)*g,e[6]=p*g,e[7]=(s*l-c*t)*g,e[8]=(o*t-s*r)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,s,i,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(s*l,s*c,-s*(l*o+c*a)+o+e,-i*c,i*l,-i*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const s=this.elements;return s[0]*=e,s[3]*=e,s[6]*=e,s[1]*=t,s[4]*=t,s[7]*=t,this}rotate(e){const t=Math.cos(e),s=Math.sin(e),i=this.elements,r=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=t*r+s*l,i[3]=t*o+s*c,i[6]=t*a+s*u,i[1]=-s*r+t*l,i[4]=-s*o+t*c,i[7]=-s*a+t*u,this}translate(e,t){const s=this.elements;return s[0]+=e*s[2],s[3]+=e*s[5],s[6]+=e*s[8],s[1]+=t*s[2],s[4]+=t*s[5],s[7]+=t*s[8],this}equals(e){const t=this.elements,s=e.elements;for(let i=0;i<9;i++)if(t[i]!==s[i])return!1;return!0}fromArray(e,t=0){for(let s=0;s<9;s++)this.elements[s]=e[s+t];return this}toArray(e=[],t=0){const s=this.elements;return e[t]=s[0],e[t+1]=s[1],e[t+2]=s[2],e[t+3]=s[3],e[t+4]=s[4],e[t+5]=s[5],e[t+6]=s[6],e[t+7]=s[7],e[t+8]=s[8],e}clone(){return new this.constructor().fromArray(this.elements)}}Gn.prototype.isMatrix3=!0;function cC(n){if(n.length===0)return-1/0;let e=n[0];for(let t=1,s=n.length;t<s;++t)n[t]>e&&(e=n[t]);return e}function Vp(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}let Da;class Vl{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Da===void 0&&(Da=Vp("canvas")),Da.width=e.width,Da.height=e.height;const s=Da.getContext("2d");e instanceof ImageData?s.putImageData(e,0,0):s.drawImage(e,0,0,e.width,e.height),t=Da}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let CD=0;class zn extends fo{constructor(e=zn.DEFAULT_IMAGE,t=zn.DEFAULT_MAPPING,s=Ds,i=Ds,r=fs,o=Bp,a=Pn,l=yr,c=1,u=yi){super(),Object.defineProperty(this,"id",{value:CD++}),this.uuid=Hi(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=s,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Ie(0,0),this.repeat=new Ie(1,1),this.center=new Ie(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Gn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const s={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=Hi()),!t&&e.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(Wm(i[o].image)):r.push(Wm(i[o]))}else r=Wm(i);e.images[i.uuid]={uuid:i.uuid,url:r}}s.image=i.uuid}return JSON.stringify(this.userData)!=="{}"&&(s.userData=this.userData),t||(e.textures[this.uuid]=s),s}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==aC)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ex:e.x=e.x-Math.floor(e.x);break;case Ds:e.x=e.x<0?0:1;break;case tx:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ex:e.y=e.y-Math.floor(e.y);break;case Ds:e.y=e.y<0?0:1;break;case tx:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&this.version++}}zn.DEFAULT_IMAGE=void 0;zn.DEFAULT_MAPPING=aC;zn.prototype.isTexture=!0;function Wm(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?Vl.getDataURL(n):n.data?{data:Array.prototype.slice.call(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class Vt{constructor(e=0,t=0,s=0,i=1){this.x=e,this.y=t,this.z=s,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,s,i){return this.x=e,this.y=t,this.z=s,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,s=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*s+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*s+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*s+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*s+o[11]*i+o[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,s,i,r;const l=e.elements,c=l[0],u=l[4],h=l[8],d=l[1],p=l[5],f=l[9],g=l[2],y=l[6],m=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-g)<.01&&Math.abs(f-y)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+g)<.1&&Math.abs(f+y)<.1&&Math.abs(c+p+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const v=(c+1)/2,b=(p+1)/2,w=(m+1)/2,S=(u+d)/4,_=(h+g)/4,I=(f+y)/4;return v>b&&v>w?v<.01?(s=0,i=.707106781,r=.707106781):(s=Math.sqrt(v),i=S/s,r=_/s):b>w?b<.01?(s=.707106781,i=0,r=.707106781):(i=Math.sqrt(b),s=S/i,r=I/i):w<.01?(s=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),s=_/r,i=I/r),this.set(s,i,r,t),this}let x=Math.sqrt((y-f)*(y-f)+(h-g)*(h-g)+(d-u)*(d-u));return Math.abs(x)<.001&&(x=1),this.x=(y-f)/x,this.y=(h-g)/x,this.z=(d-u)/x,this.w=Math.acos((c+p+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(e,Math.min(t,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this.z=e.z+(t.z-e.z)*s,this.w=e.w+(t.w-e.w)*s,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,s){return s!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Vt.prototype.isVector4=!0;class Js extends fo{constructor(e,t,s={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Vt(0,0,e,t),this.scissorTest=!1,this.viewport=new Vt(0,0,e,t),this.texture=new zn(void 0,s.mapping,s.wrapS,s.wrapT,s.magFilter,s.minFilter,s.format,s.type,s.anisotropy,s.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=s.generateMipmaps!==void 0?s.generateMipmaps:!1,this.texture.internalFormat=s.internalFormat!==void 0?s.internalFormat:null,this.texture.minFilter=s.minFilter!==void 0?s.minFilter:fs,this.depthBuffer=s.depthBuffer!==void 0?s.depthBuffer:!0,this.stencilBuffer=s.stencilBuffer!==void 0?s.stencilBuffer:!1,this.depthTexture=s.depthTexture!==void 0?s.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,s=1){(this.width!==e||this.height!==t||this.depth!==s)&&(this.width=e,this.height=t,this.depth=s,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=s,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Js.prototype.isWebGLRenderTarget=!0;class TD extends Js{constructor(e,t,s){super(e,t);const i=this.texture;this.texture=[];for(let r=0;r<s;r++)this.texture[r]=i.clone()}setSize(e,t,s=1){if(this.width!==e||this.height!==t||this.depth!==s){this.width=e,this.height=t,this.depth=s;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=s;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,s=e.texture.length;t<s;t++)this.texture[t]=e.texture[t].clone();return this}}TD.prototype.isWebGLMultipleRenderTargets=!0;class d0 extends Js{constructor(e,t,s={}){super(e,t,s),this.samples=4,this.ignoreDepthForMultisampleCopy=s.ignoreDepth!==void 0?s.ignoreDepth:!0,this.useRenderToTexture=s.useRenderToTexture!==void 0?s.useRenderToTexture:!1,this.useRenderbuffer=this.useRenderToTexture===!1}copy(e){return super.copy.call(this,e),this.samples=e.samples,this.useRenderToTexture=e.useRenderToTexture,this.useRenderbuffer=e.useRenderbuffer,this}}d0.prototype.isWebGLMultisampleRenderTarget=!0;class is{constructor(e=0,t=0,s=0,i=1){this._x=e,this._y=t,this._z=s,this._w=i}static slerp(e,t,s,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),s.slerpQuaternions(e,t,i)}static slerpFlat(e,t,s,i,r,o,a){let l=s[i+0],c=s[i+1],u=s[i+2],h=s[i+3];const d=r[o+0],p=r[o+1],f=r[o+2],g=r[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=d,e[t+1]=p,e[t+2]=f,e[t+3]=g;return}if(h!==g||l!==d||c!==p||u!==f){let y=1-a;const m=l*d+c*p+u*f+h*g,x=m>=0?1:-1,v=1-m*m;if(v>Number.EPSILON){const w=Math.sqrt(v),S=Math.atan2(w,m*x);y=Math.sin(y*S)/w,a=Math.sin(a*S)/w}const b=a*x;if(l=l*y+d*b,c=c*y+p*b,u=u*y+f*b,h=h*y+g*b,y===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=w,c*=w,u*=w,h*=w}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,s,i,r,o){const a=s[i],l=s[i+1],c=s[i+2],u=s[i+3],h=r[o],d=r[o+1],p=r[o+2],f=r[o+3];return e[t]=a*f+u*h+l*p-c*d,e[t+1]=l*f+u*d+c*h-a*p,e[t+2]=c*f+u*p+a*d-l*h,e[t+3]=u*f-a*h-l*d-c*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,s,i){return this._x=e,this._y=t,this._z=s,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const s=e._x,i=e._y,r=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(s/2),u=a(i/2),h=a(r/2),d=l(s/2),p=l(i/2),f=l(r/2);switch(o){case"XYZ":this._x=d*u*h+c*p*f,this._y=c*p*h-d*u*f,this._z=c*u*f+d*p*h,this._w=c*u*h-d*p*f;break;case"YXZ":this._x=d*u*h+c*p*f,this._y=c*p*h-d*u*f,this._z=c*u*f-d*p*h,this._w=c*u*h+d*p*f;break;case"ZXY":this._x=d*u*h-c*p*f,this._y=c*p*h+d*u*f,this._z=c*u*f+d*p*h,this._w=c*u*h-d*p*f;break;case"ZYX":this._x=d*u*h-c*p*f,this._y=c*p*h+d*u*f,this._z=c*u*f-d*p*h,this._w=c*u*h+d*p*f;break;case"YZX":this._x=d*u*h+c*p*f,this._y=c*p*h+d*u*f,this._z=c*u*f-d*p*h,this._w=c*u*h-d*p*f;break;case"XZY":this._x=d*u*h-c*p*f,this._y=c*p*h-d*u*f,this._z=c*u*f+d*p*h,this._w=c*u*h+d*p*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const s=t/2,i=Math.sin(s);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(s),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,s=t[0],i=t[4],r=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],d=s+a+h;if(d>0){const p=.5/Math.sqrt(d+1);this._w=.25/p,this._x=(u-l)*p,this._y=(r-c)*p,this._z=(o-i)*p}else if(s>a&&s>h){const p=2*Math.sqrt(1+s-a-h);this._w=(u-l)/p,this._x=.25*p,this._y=(i+o)/p,this._z=(r+c)/p}else if(a>h){const p=2*Math.sqrt(1+a-s-h);this._w=(r-c)/p,this._x=(i+o)/p,this._y=.25*p,this._z=(l+u)/p}else{const p=2*Math.sqrt(1+h-s-a);this._w=(o-i)/p,this._x=(r+c)/p,this._y=(l+u)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let s=e.dot(t)+1;return s<Number.EPSILON?(s=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=s):(this._x=0,this._y=-e.z,this._z=e.y,this._w=s)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=s),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ss(this.dot(e),-1,1)))}rotateTowards(e,t){const s=this.angleTo(e);if(s===0)return this;const i=Math.min(1,t/s);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const s=e._x,i=e._y,r=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=s*u+o*a+i*c-r*l,this._y=i*u+o*l+r*a-s*c,this._z=r*u+o*c+s*l-i*a,this._w=o*u-s*a-i*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const s=this._x,i=this._y,r=this._z,o=this._w;let a=o*e._w+s*e._x+i*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=s,this._y=i,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const p=1-t;return this._w=p*o+t*this._w,this._x=p*s+t*this._x,this._y=p*i+t*this._y,this._z=p*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=o*h+this._w*d,this._x=s*h+this._x*d,this._y=i*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,s){this.copy(e).slerp(t,s)}random(){const e=Math.random(),t=Math.sqrt(1-e),s=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),s*Math.sin(r),s*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}is.prototype.isQuaternion=!0;class V{constructor(e=0,t=0,s=0){this.x=e,this.y=t,this.z=s}set(e,t,s){return s===void 0&&(s=this.z),this.x=e,this.y=t,this.z=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Cw.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Cw.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,s=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*s+r[6]*i,this.y=r[1]*t+r[4]*s+r[7]*i,this.z=r[2]*t+r[5]*s+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,s=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*s+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*s+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*s+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*s+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,s=this.y,i=this.z,r=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*i-a*s,u=l*s+a*t-r*i,h=l*i+r*s-o*t,d=-r*t-o*s-a*i;return this.x=c*l+d*-r+u*-a-h*-o,this.y=u*l+d*-o+h*-r-c*-a,this.z=h*l+d*-a+c*-o-u*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,s=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*s+r[8]*i,this.y=r[1]*t+r[5]*s+r[9]*i,this.z=r[2]*t+r[6]*s+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(e,Math.min(t,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this.z=e.z+(t.z-e.z)*s,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const s=e.x,i=e.y,r=e.z,o=t.x,a=t.y,l=t.z;return this.x=i*l-r*a,this.y=r*o-s*l,this.z=s*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const s=e.dot(this)/t;return this.copy(e).multiplyScalar(s)}projectOnPlane(e){return Gm.copy(this).projectOnVector(e),this.sub(Gm)}reflect(e){return this.sub(Gm.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const s=this.dot(e)/t;return Math.acos(Ss(s,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,s=this.y-e.y,i=this.z-e.z;return t*t+s*s+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,s){const i=Math.sin(t)*e;return this.x=i*Math.sin(s),this.y=Math.cos(t)*e,this.z=i*Math.cos(s),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,s){return this.x=e*Math.sin(t),this.y=s,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),s=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=s,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,s){return s!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,s=Math.sqrt(1-e**2);return this.x=s*Math.cos(t),this.y=s*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}V.prototype.isVector3=!0;const Gm=new V,Cw=new is;class Ci{constructor(e=new V(1/0,1/0,1/0),t=new V(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,s=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],h=e[l+1],d=e[l+2];u<t&&(t=u),h<s&&(s=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(t,s,i),this.max.set(r,o,a),this}setFromBufferAttribute(e){let t=1/0,s=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),h=e.getY(l),d=e.getZ(l);u<t&&(t=u),h<s&&(s=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(t,s,i),this.max.set(r,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,s=e.length;t<s;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const s=gc.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(s),this.max.copy(e).add(s),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),Hm.copy(t.boundingBox),Hm.applyMatrix4(e.matrixWorld),this.union(Hm));const s=e.children;for(let i=0,r=s.length;i<r;i++)this.expandByObject(s[i]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,gc),gc.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,s;return e.normal.x>0?(t=e.normal.x*this.min.x,s=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,s=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,s+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,s+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,s+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,s+=e.normal.z*this.min.z),t<=-e.constant&&s>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(xc),jh.subVectors(this.max,xc),La.subVectors(e.a,xc),Fa.subVectors(e.b,xc),Pa.subVectors(e.c,xc),Dr.subVectors(Fa,La),Lr.subVectors(Pa,Fa),Mo.subVectors(La,Pa);let t=[0,-Dr.z,Dr.y,0,-Lr.z,Lr.y,0,-Mo.z,Mo.y,Dr.z,0,-Dr.x,Lr.z,0,-Lr.x,Mo.z,0,-Mo.x,-Dr.y,Dr.x,0,-Lr.y,Lr.x,0,-Mo.y,Mo.x,0];return!jm(t,La,Fa,Pa,jh)||(t=[1,0,0,0,1,0,0,0,1],!jm(t,La,Fa,Pa,jh))?!1:(Xh.crossVectors(Dr,Lr),t=[Xh.x,Xh.y,Xh.z],jm(t,La,Fa,Pa,jh))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return gc.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(gc).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(ar[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ar[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ar[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ar[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ar[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ar[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ar[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ar[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ar),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Ci.prototype.isBox3=!0;const ar=[new V,new V,new V,new V,new V,new V,new V,new V],gc=new V,Hm=new Ci,La=new V,Fa=new V,Pa=new V,Dr=new V,Lr=new V,Mo=new V,xc=new V,jh=new V,Xh=new V,ko=new V;function jm(n,e,t,s,i){for(let r=0,o=n.length-3;r<=o;r+=3){ko.fromArray(n,r);const a=i.x*Math.abs(ko.x)+i.y*Math.abs(ko.y)+i.z*Math.abs(ko.z),l=e.dot(ko),c=t.dot(ko),u=s.dot(ko);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const ID=new Ci,Tw=new V,qh=new V,Xm=new V;class Ul{constructor(e=new V,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const s=this.center;t!==void 0?s.copy(t):ID.setFromPoints(e).getCenter(s);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,s.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const s=this.center.distanceToSquared(e);return t.copy(e),s>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Xm.subVectors(e,this.center);const t=Xm.lengthSq();if(t>this.radius*this.radius){const s=Math.sqrt(t),i=(s-this.radius)*.5;this.center.add(Xm.multiplyScalar(i/s)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?qh.set(0,0,1).multiplyScalar(e.radius):qh.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Tw.copy(e.center).add(qh)),this.expandByPoint(Tw.copy(e.center).sub(qh)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const lr=new V,qm=new V,Zh=new V,Fr=new V,Zm=new V,Yh=new V,Ym=new V;class Wl{constructor(e=new V,t=new V(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,lr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const s=t.dot(this.direction);return s<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(s).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=lr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(lr.copy(this.direction).multiplyScalar(t).add(this.origin),lr.distanceToSquared(e))}distanceSqToSegment(e,t,s,i){qm.copy(e).add(t).multiplyScalar(.5),Zh.copy(t).sub(e).normalize(),Fr.copy(this.origin).sub(qm);const r=e.distanceTo(t)*.5,o=-this.direction.dot(Zh),a=Fr.dot(this.direction),l=-Fr.dot(Zh),c=Fr.lengthSq(),u=Math.abs(1-o*o);let h,d,p,f;if(u>0)if(h=o*l-a,d=o*a-l,f=r*u,h>=0)if(d>=-f)if(d<=f){const g=1/u;h*=g,d*=g,p=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=r,h=Math.max(0,-(o*d+a)),p=-h*h+d*(d+2*l)+c;else d=-r,h=Math.max(0,-(o*d+a)),p=-h*h+d*(d+2*l)+c;else d<=-f?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-l),r),p=-h*h+d*(d+2*l)+c):d<=f?(h=0,d=Math.min(Math.max(-r,-l),r),p=d*(d+2*l)+c):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-l),r),p=-h*h+d*(d+2*l)+c);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),p=-h*h+d*(d+2*l)+c;return s&&s.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Zh).multiplyScalar(d).add(qm),p}intersectSphere(e,t){lr.subVectors(e.center,this.origin);const s=lr.dot(this.direction),i=lr.dot(lr)-s*s,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=s-o,l=s+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const s=-(this.origin.dot(e.normal)+e.constant)/t;return s>=0?s:null}intersectPlane(e,t){const s=this.distanceToPlane(e);return s===null?null:this.at(s,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let s,i,r,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(s=(e.min.x-d.x)*c,i=(e.max.x-d.x)*c):(s=(e.max.x-d.x)*c,i=(e.min.x-d.x)*c),u>=0?(r=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(r=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),s>o||r>i||((r>s||s!==s)&&(s=r),(o<i||i!==i)&&(i=o),h>=0?(a=(e.min.z-d.z)*h,l=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,l=(e.min.z-d.z)*h),s>l||a>i)||((a>s||s!==s)&&(s=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(s>=0?s:i,t)}intersectsBox(e){return this.intersectBox(e,lr)!==null}intersectTriangle(e,t,s,i,r){Zm.subVectors(t,e),Yh.subVectors(s,e),Ym.crossVectors(Zm,Yh);let o=this.direction.dot(Ym),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Fr.subVectors(this.origin,e);const l=a*this.direction.dot(Yh.crossVectors(Fr,Yh));if(l<0)return null;const c=a*this.direction.dot(Zm.cross(Fr));if(c<0||l+c>o)return null;const u=-a*Fr.dot(Ym);return u<0?null:this.at(u/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Qe{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,s,i,r,o,a,l,c,u,h,d,p,f,g,y){const m=this.elements;return m[0]=e,m[4]=t,m[8]=s,m[12]=i,m[1]=r,m[5]=o,m[9]=a,m[13]=l,m[2]=c,m[6]=u,m[10]=h,m[14]=d,m[3]=p,m[7]=f,m[11]=g,m[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Qe().fromArray(this.elements)}copy(e){const t=this.elements,s=e.elements;return t[0]=s[0],t[1]=s[1],t[2]=s[2],t[3]=s[3],t[4]=s[4],t[5]=s[5],t[6]=s[6],t[7]=s[7],t[8]=s[8],t[9]=s[9],t[10]=s[10],t[11]=s[11],t[12]=s[12],t[13]=s[13],t[14]=s[14],t[15]=s[15],this}copyPosition(e){const t=this.elements,s=e.elements;return t[12]=s[12],t[13]=s[13],t[14]=s[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,s){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),s.setFromMatrixColumn(this,2),this}makeBasis(e,t,s){return this.set(e.x,t.x,s.x,0,e.y,t.y,s.y,0,e.z,t.z,s.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,s=e.elements,i=1/Oa.setFromMatrixColumn(e,0).length(),r=1/Oa.setFromMatrixColumn(e,1).length(),o=1/Oa.setFromMatrixColumn(e,2).length();return t[0]=s[0]*i,t[1]=s[1]*i,t[2]=s[2]*i,t[3]=0,t[4]=s[4]*r,t[5]=s[5]*r,t[6]=s[6]*r,t[7]=0,t[8]=s[8]*o,t[9]=s[9]*o,t[10]=s[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,s=e.x,i=e.y,r=e.z,o=Math.cos(s),a=Math.sin(s),l=Math.cos(i),c=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const d=o*u,p=o*h,f=a*u,g=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=p+f*c,t[5]=d-g*c,t[9]=-a*l,t[2]=g-d*c,t[6]=f+p*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*u,p=l*h,f=c*u,g=c*h;t[0]=d+g*a,t[4]=f*a-p,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=p*a-f,t[6]=g+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*u,p=l*h,f=c*u,g=c*h;t[0]=d-g*a,t[4]=-o*h,t[8]=f+p*a,t[1]=p+f*a,t[5]=o*u,t[9]=g-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*u,p=o*h,f=a*u,g=a*h;t[0]=l*u,t[4]=f*c-p,t[8]=d*c+g,t[1]=l*h,t[5]=g*c+d,t[9]=p*c-f,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,p=o*c,f=a*l,g=a*c;t[0]=l*u,t[4]=g-d*h,t[8]=f*h+p,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=p*h+f,t[10]=d-g*h}else if(e.order==="XZY"){const d=o*l,p=o*c,f=a*l,g=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=d*h+g,t[5]=o*u,t[9]=p*h-f,t[2]=f*h-p,t[6]=a*u,t[10]=g*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ED,e,MD)}lookAt(e,t,s){const i=this.elements;return Ns.subVectors(e,t),Ns.lengthSq()===0&&(Ns.z=1),Ns.normalize(),Pr.crossVectors(s,Ns),Pr.lengthSq()===0&&(Math.abs(s.z)===1?Ns.x+=1e-4:Ns.z+=1e-4,Ns.normalize(),Pr.crossVectors(s,Ns)),Pr.normalize(),Jh.crossVectors(Ns,Pr),i[0]=Pr.x,i[4]=Jh.x,i[8]=Ns.x,i[1]=Pr.y,i[5]=Jh.y,i[9]=Ns.y,i[2]=Pr.z,i[6]=Jh.z,i[10]=Ns.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const s=e.elements,i=t.elements,r=this.elements,o=s[0],a=s[4],l=s[8],c=s[12],u=s[1],h=s[5],d=s[9],p=s[13],f=s[2],g=s[6],y=s[10],m=s[14],x=s[3],v=s[7],b=s[11],w=s[15],S=i[0],_=i[4],I=i[8],N=i[12],k=i[1],M=i[5],T=i[9],C=i[13],R=i[2],L=i[6],$=i[10],O=i[14],G=i[3],Z=i[7],H=i[11],j=i[15];return r[0]=o*S+a*k+l*R+c*G,r[4]=o*_+a*M+l*L+c*Z,r[8]=o*I+a*T+l*$+c*H,r[12]=o*N+a*C+l*O+c*j,r[1]=u*S+h*k+d*R+p*G,r[5]=u*_+h*M+d*L+p*Z,r[9]=u*I+h*T+d*$+p*H,r[13]=u*N+h*C+d*O+p*j,r[2]=f*S+g*k+y*R+m*G,r[6]=f*_+g*M+y*L+m*Z,r[10]=f*I+g*T+y*$+m*H,r[14]=f*N+g*C+y*O+m*j,r[3]=x*S+v*k+b*R+w*G,r[7]=x*_+v*M+b*L+w*Z,r[11]=x*I+v*T+b*$+w*H,r[15]=x*N+v*C+b*O+w*j,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],s=e[4],i=e[8],r=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],d=e[10],p=e[14],f=e[3],g=e[7],y=e[11],m=e[15];return f*(+r*l*h-i*c*h-r*a*d+s*c*d+i*a*p-s*l*p)+g*(+t*l*p-t*c*d+r*o*d-i*o*p+i*c*u-r*l*u)+y*(+t*c*h-t*a*p-r*o*h+s*o*p+r*a*u-s*c*u)+m*(-i*a*u-t*l*h+t*a*d+i*o*h-s*o*d+s*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,s){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=s),this}invert(){const e=this.elements,t=e[0],s=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],p=e[11],f=e[12],g=e[13],y=e[14],m=e[15],x=h*y*c-g*d*c+g*l*p-a*y*p-h*l*m+a*d*m,v=f*d*c-u*y*c-f*l*p+o*y*p+u*l*m-o*d*m,b=u*g*c-f*h*c+f*a*p-o*g*p-u*a*m+o*h*m,w=f*h*l-u*g*l-f*a*d+o*g*d+u*a*y-o*h*y,S=t*x+s*v+i*b+r*w;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/S;return e[0]=x*_,e[1]=(g*d*r-h*y*r-g*i*p+s*y*p+h*i*m-s*d*m)*_,e[2]=(a*y*r-g*l*r+g*i*c-s*y*c-a*i*m+s*l*m)*_,e[3]=(h*l*r-a*d*r-h*i*c+s*d*c+a*i*p-s*l*p)*_,e[4]=v*_,e[5]=(u*y*r-f*d*r+f*i*p-t*y*p-u*i*m+t*d*m)*_,e[6]=(f*l*r-o*y*r-f*i*c+t*y*c+o*i*m-t*l*m)*_,e[7]=(o*d*r-u*l*r+u*i*c-t*d*c-o*i*p+t*l*p)*_,e[8]=b*_,e[9]=(f*h*r-u*g*r-f*s*p+t*g*p+u*s*m-t*h*m)*_,e[10]=(o*g*r-f*a*r+f*s*c-t*g*c-o*s*m+t*a*m)*_,e[11]=(u*a*r-o*h*r-u*s*c+t*h*c+o*s*p-t*a*p)*_,e[12]=w*_,e[13]=(u*g*i-f*h*i+f*s*d-t*g*d-u*s*y+t*h*y)*_,e[14]=(f*a*i-o*g*i-f*s*l+t*g*l+o*s*y-t*a*y)*_,e[15]=(o*h*i-u*a*i+u*s*l-t*h*l-o*s*d+t*a*d)*_,this}scale(e){const t=this.elements,s=e.x,i=e.y,r=e.z;return t[0]*=s,t[4]*=i,t[8]*=r,t[1]*=s,t[5]*=i,t[9]*=r,t[2]*=s,t[6]*=i,t[10]*=r,t[3]*=s,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],s=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,s,i))}makeTranslation(e,t,s){return this.set(1,0,0,e,0,1,0,t,0,0,1,s,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),s=Math.sin(e);return this.set(1,0,0,0,0,t,-s,0,0,s,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),s=Math.sin(e);return this.set(t,0,s,0,0,1,0,0,-s,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),s=Math.sin(e);return this.set(t,-s,0,0,s,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const s=Math.cos(t),i=Math.sin(t),r=1-s,o=e.x,a=e.y,l=e.z,c=r*o,u=r*a;return this.set(c*o+s,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+s,u*l-i*o,0,c*l-i*a,u*l+i*o,r*l*l+s,0,0,0,0,1),this}makeScale(e,t,s){return this.set(e,0,0,0,0,t,0,0,0,0,s,0,0,0,0,1),this}makeShear(e,t,s,i,r,o){return this.set(1,s,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,s){const i=this.elements,r=t._x,o=t._y,a=t._z,l=t._w,c=r+r,u=o+o,h=a+a,d=r*c,p=r*u,f=r*h,g=o*u,y=o*h,m=a*h,x=l*c,v=l*u,b=l*h,w=s.x,S=s.y,_=s.z;return i[0]=(1-(g+m))*w,i[1]=(p+b)*w,i[2]=(f-v)*w,i[3]=0,i[4]=(p-b)*S,i[5]=(1-(d+m))*S,i[6]=(y+x)*S,i[7]=0,i[8]=(f+v)*_,i[9]=(y-x)*_,i[10]=(1-(d+g))*_,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,s){const i=this.elements;let r=Oa.set(i[0],i[1],i[2]).length();const o=Oa.set(i[4],i[5],i[6]).length(),a=Oa.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],ri.copy(this);const c=1/r,u=1/o,h=1/a;return ri.elements[0]*=c,ri.elements[1]*=c,ri.elements[2]*=c,ri.elements[4]*=u,ri.elements[5]*=u,ri.elements[6]*=u,ri.elements[8]*=h,ri.elements[9]*=h,ri.elements[10]*=h,t.setFromRotationMatrix(ri),s.x=r,s.y=o,s.z=a,this}makePerspective(e,t,s,i,r,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,l=2*r/(t-e),c=2*r/(s-i),u=(t+e)/(t-e),h=(s+i)/(s-i),d=-(o+r)/(o-r),p=-2*o*r/(o-r);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,s,i,r,o){const a=this.elements,l=1/(t-e),c=1/(s-i),u=1/(o-r),h=(t+e)*l,d=(s+i)*c,p=(o+r)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,s=e.elements;for(let i=0;i<16;i++)if(t[i]!==s[i])return!1;return!0}fromArray(e,t=0){for(let s=0;s<16;s++)this.elements[s]=e[s+t];return this}toArray(e=[],t=0){const s=this.elements;return e[t]=s[0],e[t+1]=s[1],e[t+2]=s[2],e[t+3]=s[3],e[t+4]=s[4],e[t+5]=s[5],e[t+6]=s[6],e[t+7]=s[7],e[t+8]=s[8],e[t+9]=s[9],e[t+10]=s[10],e[t+11]=s[11],e[t+12]=s[12],e[t+13]=s[13],e[t+14]=s[14],e[t+15]=s[15],e}}Qe.prototype.isMatrix4=!0;const Oa=new V,ri=new Qe,ED=new V(0,0,0),MD=new V(1,1,1),Pr=new V,Jh=new V,Ns=new V,Iw=new Qe,Ew=new is;class Gl{constructor(e=0,t=0,s=0,i=Gl.DefaultOrder){this._x=e,this._y=t,this._z=s,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,s,i=this._order){return this._x=e,this._y=t,this._z=s,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,s=!0){const i=e.elements,r=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],p=i[10];switch(t){case"XYZ":this._y=Math.asin(Ss(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ss(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(Ss(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,p),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Ss(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Ss(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-Ss(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,s===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,s){return Iw.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Iw,t,s)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Ew.setFromEuler(this),this.setFromQuaternion(Ew,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new V(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Gl.prototype.isEuler=!0;Gl.DefaultOrder="XYZ";Gl.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class uC{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let kD=0;const Mw=new V,za=new is,cr=new Qe,Kh=new V,yc=new V,ND=new V,AD=new is,kw=new V(1,0,0),Nw=new V(0,1,0),Aw=new V(0,0,1),RD={type:"added"},Rw={type:"removed"};class Nt extends fo{constructor(){super(),Object.defineProperty(this,"id",{value:kD++}),this.uuid=Hi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Nt.DefaultUp.clone();const e=new V,t=new Gl,s=new is,i=new V(1,1,1);function r(){s.setFromEuler(t,!1)}function o(){t.setFromQuaternion(s,void 0,!1)}t._onChange(r),s._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:s},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Qe},normalMatrix:{value:new Gn}}),this.matrix=new Qe,this.matrixWorld=new Qe,this.matrixAutoUpdate=Nt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new uC,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return za.setFromAxisAngle(e,t),this.quaternion.multiply(za),this}rotateOnWorldAxis(e,t){return za.setFromAxisAngle(e,t),this.quaternion.premultiply(za),this}rotateX(e){return this.rotateOnAxis(kw,e)}rotateY(e){return this.rotateOnAxis(Nw,e)}rotateZ(e){return this.rotateOnAxis(Aw,e)}translateOnAxis(e,t){return Mw.copy(e).applyQuaternion(this.quaternion),this.position.add(Mw.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(kw,e)}translateY(e){return this.translateOnAxis(Nw,e)}translateZ(e){return this.translateOnAxis(Aw,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(cr.copy(this.matrixWorld).invert())}lookAt(e,t,s){e.isVector3?Kh.copy(e):Kh.set(e,t,s);const i=this.parent;this.updateWorldMatrix(!0,!1),yc.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?cr.lookAt(yc,Kh,this.up):cr.lookAt(Kh,yc,this.up),this.quaternion.setFromRotationMatrix(cr),i&&(cr.extractRotation(i.matrixWorld),za.setFromRotationMatrix(cr),this.quaternion.premultiply(za.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(RD)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let s=0;s<arguments.length;s++)this.remove(arguments[s]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Rw)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Rw)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),cr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),cr.multiply(e.parent.matrixWorld)),e.applyMatrix4(cr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let s=0,i=this.children.length;s<i;s++){const o=this.children[s].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yc,e,ND),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yc,AD,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let s=0,i=t.length;s<i;s++)t[s].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let s=0,i=t.length;s<i;s++)t[s].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let s=0,i=t.length;s<i;s++)t[s].updateMatrixWorld(e)}updateWorldMatrix(e,t){const s=this.parent;if(e===!0&&s!==null&&s.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",s={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},s.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];r(e.shapes,h)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(e.materials,this.material[l]));i.material=a}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),p=o(e.animations);a.length>0&&(s.geometries=a),l.length>0&&(s.materials=l),c.length>0&&(s.textures=c),u.length>0&&(s.images=u),h.length>0&&(s.shapes=h),d.length>0&&(s.skeletons=d),p.length>0&&(s.animations=p)}return s.object=i,s;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let s=0;s<e.children.length;s++){const i=e.children[s];this.add(i.clone())}return this}}Nt.DefaultUp=new V(0,1,0);Nt.DefaultMatrixAutoUpdate=!0;Nt.prototype.isObject3D=!0;const oi=new V,ur=new V,Jm=new V,hr=new V,Ba=new V,Va=new V,$w=new V,Km=new V,Qm=new V,eg=new V;class Nn{constructor(e=new V,t=new V,s=new V){this.a=e,this.b=t,this.c=s}static getNormal(e,t,s,i){i.subVectors(s,t),oi.subVectors(e,t),i.cross(oi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,s,i,r){oi.subVectors(i,t),ur.subVectors(s,t),Jm.subVectors(e,t);const o=oi.dot(oi),a=oi.dot(ur),l=oi.dot(Jm),c=ur.dot(ur),u=ur.dot(Jm),h=o*c-a*a;if(h===0)return r.set(-2,-1,-1);const d=1/h,p=(c*l-a*u)*d,f=(o*u-a*l)*d;return r.set(1-p-f,f,p)}static containsPoint(e,t,s,i){return this.getBarycoord(e,t,s,i,hr),hr.x>=0&&hr.y>=0&&hr.x+hr.y<=1}static getUV(e,t,s,i,r,o,a,l){return this.getBarycoord(e,t,s,i,hr),l.set(0,0),l.addScaledVector(r,hr.x),l.addScaledVector(o,hr.y),l.addScaledVector(a,hr.z),l}static isFrontFacing(e,t,s,i){return oi.subVectors(s,t),ur.subVectors(e,t),oi.cross(ur).dot(i)<0}set(e,t,s){return this.a.copy(e),this.b.copy(t),this.c.copy(s),this}setFromPointsAndIndices(e,t,s,i){return this.a.copy(e[t]),this.b.copy(e[s]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,s,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,s),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return oi.subVectors(this.c,this.b),ur.subVectors(this.a,this.b),oi.cross(ur).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Nn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Nn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,s,i,r){return Nn.getUV(e,this.a,this.b,this.c,t,s,i,r)}containsPoint(e){return Nn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Nn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const s=this.a,i=this.b,r=this.c;let o,a;Ba.subVectors(i,s),Va.subVectors(r,s),Km.subVectors(e,s);const l=Ba.dot(Km),c=Va.dot(Km);if(l<=0&&c<=0)return t.copy(s);Qm.subVectors(e,i);const u=Ba.dot(Qm),h=Va.dot(Qm);if(u>=0&&h<=u)return t.copy(i);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(s).addScaledVector(Ba,o);eg.subVectors(e,r);const p=Ba.dot(eg),f=Va.dot(eg);if(f>=0&&p<=f)return t.copy(r);const g=p*c-l*f;if(g<=0&&c>=0&&f<=0)return a=c/(c-f),t.copy(s).addScaledVector(Va,a);const y=u*f-p*h;if(y<=0&&h-u>=0&&p-f>=0)return $w.subVectors(r,i),a=(h-u)/(h-u+(p-f)),t.copy(i).addScaledVector($w,a);const m=1/(y+g+d);return o=g*m,a=d*m,t.copy(s).addScaledVector(Ba,o).addScaledVector(Va,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let $D=0;class ls extends fo{constructor(){super(),Object.defineProperty(this,"id",{value:$D++}),this.uuid=Hi(),this.name="",this.type="Material",this.fog=!0,this.blending=Vc,this.side=wl,this.vertexColors=!1,this.opacity=1,this.format=Pn,this.transparent=!1,this.blendSrc=rC,this.blendDst=oC,this.blendEquation=tl,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Jg,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=wD,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Bm,this.stencilZFail=Bm,this.stencilZPass=Bm,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const s=e[t];if(s===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=s===iC;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(s):i&&i.isVector3&&s&&s.isVector3?i.copy(s):this[t]=s}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const s={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.color&&this.color.isColor&&(s.color=this.color.getHex()),this.roughness!==void 0&&(s.roughness=this.roughness),this.metalness!==void 0&&(s.metalness=this.metalness),this.sheen!==void 0&&(s.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(s.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(s.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(s.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(s.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(s.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(s.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(s.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(s.shininess=this.shininess),this.clearcoat!==void 0&&(s.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(s.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(s.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(s.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(s.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,s.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(s.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(s.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(s.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(s.lightMap=this.lightMap.toJSON(e).uuid,s.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(s.aoMap=this.aoMap.toJSON(e).uuid,s.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(s.bumpMap=this.bumpMap.toJSON(e).uuid,s.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(s.normalMap=this.normalMap.toJSON(e).uuid,s.normalMapType=this.normalMapType,s.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(s.displacementMap=this.displacementMap.toJSON(e).uuid,s.displacementScale=this.displacementScale,s.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(s.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(s.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(s.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(s.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(s.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(s.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(s.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(s.combine=this.combine)),this.envMapIntensity!==void 0&&(s.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(s.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(s.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(s.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(s.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(s.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(s.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(s.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(s.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(s.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(s.size=this.size),this.shadowSide!==null&&(s.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(s.sizeAttenuation=this.sizeAttenuation),this.blending!==Vc&&(s.blending=this.blending),this.side!==wl&&(s.side=this.side),this.vertexColors&&(s.vertexColors=!0),this.opacity<1&&(s.opacity=this.opacity),this.format!==Pn&&(s.format=this.format),this.transparent===!0&&(s.transparent=this.transparent),s.depthFunc=this.depthFunc,s.depthTest=this.depthTest,s.depthWrite=this.depthWrite,s.colorWrite=this.colorWrite,s.stencilWrite=this.stencilWrite,s.stencilWriteMask=this.stencilWriteMask,s.stencilFunc=this.stencilFunc,s.stencilRef=this.stencilRef,s.stencilFuncMask=this.stencilFuncMask,s.stencilFail=this.stencilFail,s.stencilZFail=this.stencilZFail,s.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(s.rotation=this.rotation),this.polygonOffset===!0&&(s.polygonOffset=!0),this.polygonOffsetFactor!==0&&(s.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(s.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(s.linewidth=this.linewidth),this.dashSize!==void 0&&(s.dashSize=this.dashSize),this.gapSize!==void 0&&(s.gapSize=this.gapSize),this.scale!==void 0&&(s.scale=this.scale),this.dithering===!0&&(s.dithering=!0),this.alphaTest>0&&(s.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(s.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(s.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(s.wireframe=this.wireframe),this.wireframeLinewidth>1&&(s.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(s.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(s.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(s.flatShading=this.flatShading),this.visible===!1&&(s.visible=!1),this.toneMapped===!1&&(s.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(s.userData=this.userData);function i(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(s.textures=r),o.length>0&&(s.images=o)}return s}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let s=null;if(t!==null){const i=t.length;s=new Array(i);for(let r=0;r!==i;++r)s[r]=t[r].clone()}return this.clippingPlanes=s,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}ls.prototype.isMaterial=!0;const hC={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ai={h:0,s:0,l:0},Qh={h:0,s:0,l:0};function tg(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}function ng(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function sg(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}class Xe{constructor(e,t,s){return t===void 0&&s===void 0?this.set(e):this.setRGB(e,t,s)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,t,s){return this.r=e,this.g=t,this.b=s,this}setHSL(e,t,s){if(e=SD(e,1),t=Ss(t,0,1),s=Ss(s,0,1),t===0)this.r=this.g=this.b=s;else{const i=s<=.5?s*(1+t):s+t-s*t,r=2*s-i;this.r=tg(r,i,e+1/3),this.g=tg(r,i,e),this.b=tg(r,i,e-1/3)}return this}setStyle(e){function t(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let i;const r=s[1],o=s[2];switch(r){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,t(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,t(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const a=parseFloat(i[1])/360,l=parseInt(i[2],10)/100,c=parseInt(i[3],10)/100;return t(i[4]),this.setHSL(a,l,c)}break}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const i=s[1],r=i.length;if(r===3)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(r===6)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=hC[e.toLowerCase()];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ng(e.r),this.g=ng(e.g),this.b=ng(e.b),this}copyLinearToSRGB(e){return this.r=sg(e.r),this.g=sg(e.g),this.b=sg(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){const t=this.r,s=this.g,i=this.b,r=Math.max(t,s,i),o=Math.min(t,s,i);let a,l;const c=(o+r)/2;if(o===r)a=0,l=0;else{const u=r-o;switch(l=c<=.5?u/(r+o):u/(2-r-o),r){case t:a=(s-i)/u+(s<i?6:0);break;case s:a=(i-t)/u+2;break;case i:a=(t-s)/u+4;break}a/=6}return e.h=a,e.s=l,e.l=c,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,s){return this.getHSL(ai),ai.h+=e,ai.s+=t,ai.l+=s,this.setHSL(ai.h,ai.s,ai.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,s){return this.r=e.r+(t.r-e.r)*s,this.g=e.g+(t.g-e.g)*s,this.b=e.b+(t.b-e.b)*s,this}lerpHSL(e,t){this.getHSL(ai),e.getHSL(Qh);const s=Um(ai.h,Qh.h,t),i=Um(ai.s,Qh.s,t),r=Um(ai.l,Qh.l,t);return this.setHSL(s,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Xe.NAMES=hC;Xe.prototype.isColor=!0;Xe.prototype.r=1;Xe.prototype.g=1;Xe.prototype.b=1;class fa extends ls{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Xe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Op,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}fa.prototype.isMeshBasicMaterial=!0;const Wt=new V,ed=new Ie;class $n{constructor(e,t,s){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=s===!0,this.usage=Jc,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,s){e*=this.itemSize,s*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[s+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let s=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new Xe),t[s++]=o.r,t[s++]=o.g,t[s++]=o.b}return this}copyVector2sArray(e){const t=this.array;let s=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new Ie),t[s++]=o.x,t[s++]=o.y}return this}copyVector3sArray(e){const t=this.array;let s=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new V),t[s++]=o.x,t[s++]=o.y,t[s++]=o.z}return this}copyVector4sArray(e){const t=this.array;let s=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new Vt),t[s++]=o.x,t[s++]=o.y,t[s++]=o.z,t[s++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,s=this.count;t<s;t++)ed.fromBufferAttribute(this,t),ed.applyMatrix3(e),this.setXY(t,ed.x,ed.y);else if(this.itemSize===3)for(let t=0,s=this.count;t<s;t++)Wt.fromBufferAttribute(this,t),Wt.applyMatrix3(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}applyMatrix4(e){for(let t=0,s=this.count;t<s;t++)Wt.x=this.getX(t),Wt.y=this.getY(t),Wt.z=this.getZ(t),Wt.applyMatrix4(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}applyNormalMatrix(e){for(let t=0,s=this.count;t<s;t++)Wt.x=this.getX(t),Wt.y=this.getY(t),Wt.z=this.getZ(t),Wt.applyNormalMatrix(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}transformDirection(e){for(let t=0,s=this.count;t<s;t++)Wt.x=this.getX(t),Wt.y=this.getY(t),Wt.z=this.getZ(t),Wt.transformDirection(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=s,this}setXYZ(e,t,s,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=s,this.array[e+2]=i,this}setXYZW(e,t,s,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=s,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Jc&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}$n.prototype.isBufferAttribute=!0;class dC extends $n{constructor(e,t,s){super(new Uint16Array(e),t,s)}}class pC extends $n{constructor(e,t,s){super(new Uint32Array(e),t,s)}}class DD extends $n{constructor(e,t,s){super(new Uint16Array(e),t,s)}}DD.prototype.isFloat16BufferAttribute=!0;class tn extends $n{constructor(e,t,s){super(new Float32Array(e),t,s)}}let LD=0;const Vs=new Qe,ig=new Nt,Ua=new V,As=new Ci,bc=new Ci,Ln=new V;class Xt extends fo{constructor(){super(),Object.defineProperty(this,"id",{value:LD++}),this.uuid=Hi(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(cC(e)>65535?pC:dC)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,s=0){this.groups.push({start:e,count:t,materialIndex:s})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const s=this.attributes.normal;if(s!==void 0){const r=new Gn().getNormalMatrix(e);s.applyNormalMatrix(r),s.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Vs.makeRotationFromQuaternion(e),this.applyMatrix4(Vs),this}rotateX(e){return Vs.makeRotationX(e),this.applyMatrix4(Vs),this}rotateY(e){return Vs.makeRotationY(e),this.applyMatrix4(Vs),this}rotateZ(e){return Vs.makeRotationZ(e),this.applyMatrix4(Vs),this}translate(e,t,s){return Vs.makeTranslation(e,t,s),this.applyMatrix4(Vs),this}scale(e,t,s){return Vs.makeScale(e,t,s),this.applyMatrix4(Vs),this}lookAt(e){return ig.lookAt(e),ig.updateMatrix(),this.applyMatrix4(ig.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ua).negate(),this.translate(Ua.x,Ua.y,Ua.z),this}setFromPoints(e){const t=[];for(let s=0,i=e.length;s<i;s++){const r=e[s];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new tn(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Ci);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new V(-1/0,-1/0,-1/0),new V(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let s=0,i=t.length;s<i;s++){const r=t[s];As.setFromBufferAttribute(r),this.morphTargetsRelative?(Ln.addVectors(this.boundingBox.min,As.min),this.boundingBox.expandByPoint(Ln),Ln.addVectors(this.boundingBox.max,As.max),this.boundingBox.expandByPoint(Ln)):(this.boundingBox.expandByPoint(As.min),this.boundingBox.expandByPoint(As.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ul);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new V,1/0);return}if(e){const s=this.boundingSphere.center;if(As.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];bc.setFromBufferAttribute(a),this.morphTargetsRelative?(Ln.addVectors(As.min,bc.min),As.expandByPoint(Ln),Ln.addVectors(As.max,bc.max),As.expandByPoint(Ln)):(As.expandByPoint(bc.min),As.expandByPoint(bc.max))}As.getCenter(s);let i=0;for(let r=0,o=e.count;r<o;r++)Ln.fromBufferAttribute(e,r),i=Math.max(i,s.distanceToSquared(Ln));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Ln.fromBufferAttribute(a,c),l&&(Ua.fromBufferAttribute(e,c),Ln.add(Ua)),i=Math.max(i,s.distanceToSquared(Ln))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const s=e.array,i=t.position.array,r=t.normal.array,o=t.uv.array,a=i.length/3;t.tangent===void 0&&this.setAttribute("tangent",new $n(new Float32Array(4*a),4));const l=t.tangent.array,c=[],u=[];for(let k=0;k<a;k++)c[k]=new V,u[k]=new V;const h=new V,d=new V,p=new V,f=new Ie,g=new Ie,y=new Ie,m=new V,x=new V;function v(k,M,T){h.fromArray(i,k*3),d.fromArray(i,M*3),p.fromArray(i,T*3),f.fromArray(o,k*2),g.fromArray(o,M*2),y.fromArray(o,T*2),d.sub(h),p.sub(h),g.sub(f),y.sub(f);const C=1/(g.x*y.y-y.x*g.y);isFinite(C)&&(m.copy(d).multiplyScalar(y.y).addScaledVector(p,-g.y).multiplyScalar(C),x.copy(p).multiplyScalar(g.x).addScaledVector(d,-y.x).multiplyScalar(C),c[k].add(m),c[M].add(m),c[T].add(m),u[k].add(x),u[M].add(x),u[T].add(x))}let b=this.groups;b.length===0&&(b=[{start:0,count:s.length}]);for(let k=0,M=b.length;k<M;++k){const T=b[k],C=T.start,R=T.count;for(let L=C,$=C+R;L<$;L+=3)v(s[L+0],s[L+1],s[L+2])}const w=new V,S=new V,_=new V,I=new V;function N(k){_.fromArray(r,k*3),I.copy(_);const M=c[k];w.copy(M),w.sub(_.multiplyScalar(_.dot(M))).normalize(),S.crossVectors(I,M);const C=S.dot(u[k])<0?-1:1;l[k*4]=w.x,l[k*4+1]=w.y,l[k*4+2]=w.z,l[k*4+3]=C}for(let k=0,M=b.length;k<M;++k){const T=b[k],C=T.start,R=T.count;for(let L=C,$=C+R;L<$;L+=3)N(s[L+0]),N(s[L+1]),N(s[L+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let s=this.getAttribute("normal");if(s===void 0)s=new $n(new Float32Array(t.count*3),3),this.setAttribute("normal",s);else for(let d=0,p=s.count;d<p;d++)s.setXYZ(d,0,0,0);const i=new V,r=new V,o=new V,a=new V,l=new V,c=new V,u=new V,h=new V;if(e)for(let d=0,p=e.count;d<p;d+=3){const f=e.getX(d+0),g=e.getX(d+1),y=e.getX(d+2);i.fromBufferAttribute(t,f),r.fromBufferAttribute(t,g),o.fromBufferAttribute(t,y),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),a.fromBufferAttribute(s,f),l.fromBufferAttribute(s,g),c.fromBufferAttribute(s,y),a.add(u),l.add(u),c.add(u),s.setXYZ(f,a.x,a.y,a.z),s.setXYZ(g,l.x,l.y,l.z),s.setXYZ(y,c.x,c.y,c.z)}else for(let d=0,p=t.count;d<p;d+=3)i.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),s.setXYZ(d+0,u.x,u.y,u.z),s.setXYZ(d+1,u.x,u.y,u.z),s.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),s.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const s=this.attributes;for(const i in s){if(e.attributes[i]===void 0)continue;const o=s[i].array,a=e.attributes[i],l=a.array,c=a.itemSize*t,u=Math.min(l.length,o.length-c);for(let h=0,d=c;h<u;h++,d++)o[d]=l[h]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,s=e.count;t<s;t++)Ln.fromBufferAttribute(e,t),Ln.normalize(),e.setXYZ(t,Ln.x,Ln.y,Ln.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let p=0,f=0;for(let g=0,y=l.length;g<y;g++){a.isInterleavedBufferAttribute?p=l[g]*a.data.stride+a.offset:p=l[g]*u;for(let m=0;m<u;m++)d[f++]=c[p++]}return new $n(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Xt,s=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=e(l,s);t.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let u=0,h=c.length;u<h;u++){const d=c[u],p=e(d,s);l.push(p)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const s=this.attributes;for(const l in s){const c=s[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const p=c[h];u.push(p.toJSON(e.data))}u.length>0&&(i[l]=u,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const s=e.index;s!==null&&this.setIndex(s.clone(t));const i=e.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(t))}const r=e.morphAttributes;for(const c in r){const u=[],h=r[c];for(let d=0,p=h.length;d<p;d++)u.push(h[d].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Xt.prototype.isBufferGeometry=!0;const Dw=new Qe,Wa=new Wl,rg=new Ul,Or=new V,zr=new V,Br=new V,og=new V,ag=new V,lg=new V,td=new V,nd=new V,sd=new V,id=new Ie,rd=new Ie,od=new Ie,cg=new V,ad=new V;class gn extends Nt{constructor(e=new Xt,t=new fa){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,s=Object.keys(t);if(s.length>0){const i=t[s[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const s=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(s.boundingSphere===null&&s.computeBoundingSphere(),rg.copy(s.boundingSphere),rg.applyMatrix4(r),e.ray.intersectsSphere(rg)===!1)||(Dw.copy(r).invert(),Wa.copy(e.ray).applyMatrix4(Dw),s.boundingBox!==null&&Wa.intersectsBox(s.boundingBox)===!1))return;let o;if(s.isBufferGeometry){const a=s.index,l=s.attributes.position,c=s.morphAttributes.position,u=s.morphTargetsRelative,h=s.attributes.uv,d=s.attributes.uv2,p=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(i))for(let g=0,y=p.length;g<y;g++){const m=p[g],x=i[m.materialIndex],v=Math.max(m.start,f.start),b=Math.min(a.count,Math.min(m.start+m.count,f.start+f.count));for(let w=v,S=b;w<S;w+=3){const _=a.getX(w),I=a.getX(w+1),N=a.getX(w+2);o=ld(this,x,e,Wa,l,c,u,h,d,_,I,N),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=m.materialIndex,t.push(o))}}else{const g=Math.max(0,f.start),y=Math.min(a.count,f.start+f.count);for(let m=g,x=y;m<x;m+=3){const v=a.getX(m),b=a.getX(m+1),w=a.getX(m+2);o=ld(this,i,e,Wa,l,c,u,h,d,v,b,w),o&&(o.faceIndex=Math.floor(m/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,y=p.length;g<y;g++){const m=p[g],x=i[m.materialIndex],v=Math.max(m.start,f.start),b=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let w=v,S=b;w<S;w+=3){const _=w,I=w+1,N=w+2;o=ld(this,x,e,Wa,l,c,u,h,d,_,I,N),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=m.materialIndex,t.push(o))}}else{const g=Math.max(0,f.start),y=Math.min(l.count,f.start+f.count);for(let m=g,x=y;m<x;m+=3){const v=m,b=m+1,w=m+2;o=ld(this,i,e,Wa,l,c,u,h,d,v,b,w),o&&(o.faceIndex=Math.floor(m/3),t.push(o))}}}else s.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}gn.prototype.isMesh=!0;function FD(n,e,t,s,i,r,o,a){let l;if(e.side===En?l=s.intersectTriangle(o,r,i,!0,a):l=s.intersectTriangle(i,r,o,e.side!==Sr,a),l===null)return null;ad.copy(a),ad.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(ad);return c<t.near||c>t.far?null:{distance:c,point:ad.clone(),object:n}}function ld(n,e,t,s,i,r,o,a,l,c,u,h){Or.fromBufferAttribute(i,c),zr.fromBufferAttribute(i,u),Br.fromBufferAttribute(i,h);const d=n.morphTargetInfluences;if(r&&d){td.set(0,0,0),nd.set(0,0,0),sd.set(0,0,0);for(let f=0,g=r.length;f<g;f++){const y=d[f],m=r[f];y!==0&&(og.fromBufferAttribute(m,c),ag.fromBufferAttribute(m,u),lg.fromBufferAttribute(m,h),o?(td.addScaledVector(og,y),nd.addScaledVector(ag,y),sd.addScaledVector(lg,y)):(td.addScaledVector(og.sub(Or),y),nd.addScaledVector(ag.sub(zr),y),sd.addScaledVector(lg.sub(Br),y)))}Or.add(td),zr.add(nd),Br.add(sd)}n.isSkinnedMesh&&(n.boneTransform(c,Or),n.boneTransform(u,zr),n.boneTransform(h,Br));const p=FD(n,e,t,s,Or,zr,Br,cg);if(p){a&&(id.fromBufferAttribute(a,c),rd.fromBufferAttribute(a,u),od.fromBufferAttribute(a,h),p.uv=Nn.getUV(cg,Or,zr,Br,id,rd,od,new Ie)),l&&(id.fromBufferAttribute(l,c),rd.fromBufferAttribute(l,u),od.fromBufferAttribute(l,h),p.uv2=Nn.getUV(cg,Or,zr,Br,id,rd,od,new Ie));const f={a:c,b:u,c:h,normal:new V,materialIndex:0};Nn.getNormal(Or,zr,Br,f.normal),p.face=f}return p}class ma extends Xt{constructor(e=1,t=1,s=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:s,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,p=0;f("z","y","x",-1,-1,s,t,e,o,r,0),f("z","y","x",1,-1,s,t,-e,o,r,1),f("x","z","y",1,1,e,s,t,i,o,2),f("x","z","y",1,-1,e,s,-t,i,o,3),f("x","y","z",1,-1,e,t,s,i,r,4),f("x","y","z",-1,-1,e,t,-s,i,r,5),this.setIndex(l),this.setAttribute("position",new tn(c,3)),this.setAttribute("normal",new tn(u,3)),this.setAttribute("uv",new tn(h,2));function f(g,y,m,x,v,b,w,S,_,I,N){const k=b/_,M=w/I,T=b/2,C=w/2,R=S/2,L=_+1,$=I+1;let O=0,G=0;const Z=new V;for(let H=0;H<$;H++){const j=H*M-C;for(let ne=0;ne<L;ne++){const ee=ne*k-T;Z[g]=ee*x,Z[y]=j*v,Z[m]=R,c.push(Z.x,Z.y,Z.z),Z[g]=0,Z[y]=0,Z[m]=S>0?1:-1,u.push(Z.x,Z.y,Z.z),h.push(ne/_),h.push(1-H/I),O+=1}}for(let H=0;H<I;H++)for(let j=0;j<_;j++){const ne=d+j+L*H,ee=d+j+L*(H+1),oe=d+(j+1)+L*(H+1),ue=d+(j+1)+L*H;l.push(ne,ee,ue),l.push(ee,oe,ue),G+=6}a.addGroup(p,G,N),p+=G,d+=O}}static fromJSON(e){return new ma(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function _l(n){const e={};for(const t in n){e[t]={};for(const s in n[t]){const i=n[t][s];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][s]=i.clone():Array.isArray(i)?e[t][s]=i.slice():e[t][s]=i}}return e}function Kn(n){const e={};for(let t=0;t<n.length;t++){const s=_l(n[t]);for(const i in s)e[i]=s[i]}return e}const PD={clone:_l,merge:Kn};var OD=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,zD=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Qo extends ls{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=OD,this.fragmentShader=zD,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=_l(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const s={};for(const i in this.extensions)this.extensions[i]===!0&&(s[i]=!0);return Object.keys(s).length>0&&(t.extensions=s),t}}Qo.prototype.isShaderMaterial=!0;class p0 extends Nt{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Qe,this.projectionMatrix=new Qe,this.projectionMatrixInverse=new Qe}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}p0.prototype.isCamera=!0;class ts extends p0{constructor(e=50,t=1,s=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=s,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=nx*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Vm*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return nx*2*Math.atan(Math.tan(Vm*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,s,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=s,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Vm*.5*this.fov)/this.zoom,s=2*t,i=this.aspect*s,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/l,t-=o.offsetY*s/c,i*=o.width/l,s*=o.height/c}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-s,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}ts.prototype.isPerspectiveCamera=!0;const Ga=90,Ha=1;class f0 extends Nt{constructor(e,t,s){if(super(),this.type="CubeCamera",s.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=s;const i=new ts(Ga,Ha,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new V(1,0,0)),this.add(i);const r=new ts(Ga,Ha,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new V(-1,0,0)),this.add(r);const o=new ts(Ga,Ha,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new V(0,1,0)),this.add(o);const a=new ts(Ga,Ha,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new V(0,-1,0)),this.add(a);const l=new ts(Ga,Ha,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new V(0,0,1)),this.add(l);const c=new ts(Ga,Ha,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new V(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const s=this.renderTarget,[i,r,o,a,l,c]=this.children,u=e.xr.enabled,h=e.getRenderTarget();e.xr.enabled=!1;const d=s.texture.generateMipmaps;s.texture.generateMipmaps=!1,e.setRenderTarget(s,0),e.render(t,i),e.setRenderTarget(s,1),e.render(t,r),e.setRenderTarget(s,2),e.render(t,o),e.setRenderTarget(s,3),e.render(t,a),e.setRenderTarget(s,4),e.render(t,l),s.texture.generateMipmaps=d,e.setRenderTarget(s,5),e.render(t,c),e.setRenderTarget(h),e.xr.enabled=u}}class Up extends zn{constructor(e,t,s,i,r,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:yu,super(e,t,s,i,r,o,a,l,c,u),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Up.prototype.isCubeTexture=!0;class fC extends Js{constructor(e,t,s){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=s),super(e,e,t),t=t||{},this.texture=new Up(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:fs,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=Pn,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const s={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ma(5,5,5),r=new Qo({name:"CubemapFromEquirect",uniforms:_l(s.uniforms),vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,side:En,blending:Zr});r.uniforms.tEquirect.value=t;const o=new gn(i,r),a=t.minFilter;return t.minFilter===Bp&&(t.minFilter=fs),new f0(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,s,i){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,s,i);e.setRenderTarget(r)}}fC.prototype.isWebGLCubeRenderTarget=!0;const ug=new V,BD=new V,VD=new Gn;class pr{constructor(e=new V(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,s,i){return this.normal.set(e,t,s),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,s){const i=ug.subVectors(s,t).cross(BD.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const s=e.delta(ug),i=this.normal.dot(s);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(s).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),s=this.distanceToPoint(e.end);return t<0&&s>0||s<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const s=t||VD.getNormalMatrix(e),i=this.coplanarPoint(ug).applyMatrix4(e),r=this.normal.applyMatrix3(s).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}pr.prototype.isPlane=!0;const ja=new Ul,cd=new V;class Wp{constructor(e=new pr,t=new pr,s=new pr,i=new pr,r=new pr,o=new pr){this.planes=[e,t,s,i,r,o]}set(e,t,s,i,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(s),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let s=0;s<6;s++)t[s].copy(e.planes[s]);return this}setFromProjectionMatrix(e){const t=this.planes,s=e.elements,i=s[0],r=s[1],o=s[2],a=s[3],l=s[4],c=s[5],u=s[6],h=s[7],d=s[8],p=s[9],f=s[10],g=s[11],y=s[12],m=s[13],x=s[14],v=s[15];return t[0].setComponents(a-i,h-l,g-d,v-y).normalize(),t[1].setComponents(a+i,h+l,g+d,v+y).normalize(),t[2].setComponents(a+r,h+c,g+p,v+m).normalize(),t[3].setComponents(a-r,h-c,g-p,v-m).normalize(),t[4].setComponents(a-o,h-u,g-f,v-x).normalize(),t[5].setComponents(a+o,h+u,g+f,v+x).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),ja.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(ja)}intersectsSprite(e){return ja.center.set(0,0,0),ja.radius=.7071067811865476,ja.applyMatrix4(e.matrixWorld),this.intersectsSphere(ja)}intersectsSphere(e){const t=this.planes,s=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(s)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let s=0;s<6;s++){const i=t[s];if(cd.x=i.normal.x>0?e.max.x:e.min.x,cd.y=i.normal.y>0?e.max.y:e.min.y,cd.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(cd)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let s=0;s<6;s++)if(t[s].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function mC(){let n=null,e=!1,t=null,s=null;function i(r,o){t(r,o),s=n.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(s=n.requestAnimationFrame(i),e=!0)},stop:function(){n.cancelAnimationFrame(s),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){n=r}}}function UD(n,e){const t=e.isWebGL2,s=new WeakMap;function i(c,u){const h=c.array,d=c.usage,p=n.createBuffer();n.bindBuffer(u,p),n.bufferData(u,h,d),c.onUploadCallback();let f=5126;return h instanceof Float32Array?f=5126:h instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):h instanceof Uint16Array?c.isFloat16BufferAttribute?t?f=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):f=5123:h instanceof Int16Array?f=5122:h instanceof Uint32Array?f=5125:h instanceof Int32Array?f=5124:h instanceof Int8Array?f=5120:(h instanceof Uint8Array||h instanceof Uint8ClampedArray)&&(f=5121),{buffer:p,type:f,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,u,h){const d=u.array,p=u.updateRange;n.bindBuffer(h,c),p.count===-1?n.bufferSubData(h,0,d):(t?n.bufferSubData(h,p.offset*d.BYTES_PER_ELEMENT,d,p.offset,p.count):n.bufferSubData(h,p.offset*d.BYTES_PER_ELEMENT,d.subarray(p.offset,p.offset+p.count)),p.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),s.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=s.get(c);u&&(n.deleteBuffer(u.buffer),s.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=s.get(c);(!d||d.version<c.version)&&s.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=s.get(c);h===void 0?s.set(c,i(c,u)):h.version<c.version&&(r(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class Hl extends Xt{constructor(e=1,t=1,s=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:s,heightSegments:i};const r=e/2,o=t/2,a=Math.floor(s),l=Math.floor(i),c=a+1,u=l+1,h=e/a,d=t/l,p=[],f=[],g=[],y=[];for(let m=0;m<u;m++){const x=m*d-o;for(let v=0;v<c;v++){const b=v*h-r;f.push(b,-x,0),g.push(0,0,1),y.push(v/a),y.push(1-m/l)}}for(let m=0;m<l;m++)for(let x=0;x<a;x++){const v=x+c*m,b=x+c*(m+1),w=x+1+c*(m+1),S=x+1+c*m;p.push(v,b,S),p.push(b,w,S)}this.setIndex(p),this.setAttribute("position",new tn(f,3)),this.setAttribute("normal",new tn(g,3)),this.setAttribute("uv",new tn(y,2))}static fromJSON(e){return new Hl(e.width,e.height,e.widthSegments,e.heightSegments)}}var WD=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,GD=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,HD=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,jD=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,XD=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,qD=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,ZD="vec3 transformed = vec3( position );",YD=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,JD=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,KD=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,QD=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,eL=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,tL=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,nL=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,sL=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,iL=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,rL=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,oL=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,aL=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,lL=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		return texture2D( envMap, uv ).rgb;
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,cL=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,uL=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,hL=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,dL=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,pL=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,fL="gl_FragColor = linearToOutputTexel( gl_FragColor );",mL=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,gL=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
		envColor = envMapTexelToLinear( envColor );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,xL=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,yL=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,bL=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,vL=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,wL=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,SL=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,_L=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,CL=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,TL=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,IL=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,EL=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,ML=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,kL=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,NL=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,AL=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,RL=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,$L=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,DL=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,LL=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,FL=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,PL=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,OL=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,zL=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,BL=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,VL=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,UL=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,WL=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,GL=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,HL=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,jL=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,XL=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,qL=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,ZL=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,YL=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,JL=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,KL=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,QL=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,eF=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,tF=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,nF=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,sF=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,iF=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,rF=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,oF=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,aF=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,lF=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,cF=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,uF=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,hF=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dF=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,pF=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,fF=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,mF=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,gF=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,xF=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,yF=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,bF=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,vF=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,wF=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,SF=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,_F=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,CF=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,TF=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,IF=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,EF=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,MF=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,kF=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( float roughness, float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,
		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,
		vec3 attenuationColor, float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,NF=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,AF=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,RF=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,$F=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,DF=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,LF=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,FF=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const PF=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,OF=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,zF=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,BF=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,VF=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,UF=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,WF=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,GF=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,HF=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,jF=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,XF=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,qF=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ZF=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,YF=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,JF=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,KF=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,QF=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,eP=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tP=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,nP=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,sP=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,iP=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rP=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,oP=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aP=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lP=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cP=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,uP=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,hP=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,dP=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,pP=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,fP=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,xt={alphamap_fragment:WD,alphamap_pars_fragment:GD,alphatest_fragment:HD,alphatest_pars_fragment:jD,aomap_fragment:XD,aomap_pars_fragment:qD,begin_vertex:ZD,beginnormal_vertex:YD,bsdfs:JD,bumpmap_pars_fragment:KD,clipping_planes_fragment:QD,clipping_planes_pars_fragment:eL,clipping_planes_pars_vertex:tL,clipping_planes_vertex:nL,color_fragment:sL,color_pars_fragment:iL,color_pars_vertex:rL,color_vertex:oL,common:aL,cube_uv_reflection_fragment:lL,defaultnormal_vertex:cL,displacementmap_pars_vertex:uL,displacementmap_vertex:hL,emissivemap_fragment:dL,emissivemap_pars_fragment:pL,encodings_fragment:fL,encodings_pars_fragment:mL,envmap_fragment:gL,envmap_common_pars_fragment:xL,envmap_pars_fragment:yL,envmap_pars_vertex:bL,envmap_physical_pars_fragment:NL,envmap_vertex:vL,fog_vertex:wL,fog_pars_vertex:SL,fog_fragment:_L,fog_pars_fragment:CL,gradientmap_pars_fragment:TL,lightmap_fragment:IL,lightmap_pars_fragment:EL,lights_lambert_vertex:ML,lights_pars_begin:kL,lights_toon_fragment:AL,lights_toon_pars_fragment:RL,lights_phong_fragment:$L,lights_phong_pars_fragment:DL,lights_physical_fragment:LL,lights_physical_pars_fragment:FL,lights_fragment_begin:PL,lights_fragment_maps:OL,lights_fragment_end:zL,logdepthbuf_fragment:BL,logdepthbuf_pars_fragment:VL,logdepthbuf_pars_vertex:UL,logdepthbuf_vertex:WL,map_fragment:GL,map_pars_fragment:HL,map_particle_fragment:jL,map_particle_pars_fragment:XL,metalnessmap_fragment:qL,metalnessmap_pars_fragment:ZL,morphnormal_vertex:YL,morphtarget_pars_vertex:JL,morphtarget_vertex:KL,normal_fragment_begin:QL,normal_fragment_maps:eF,normal_pars_fragment:tF,normal_pars_vertex:nF,normal_vertex:sF,normalmap_pars_fragment:iF,clearcoat_normal_fragment_begin:rF,clearcoat_normal_fragment_maps:oF,clearcoat_pars_fragment:aF,output_fragment:lF,packing:cF,premultiplied_alpha_fragment:uF,project_vertex:hF,dithering_fragment:dF,dithering_pars_fragment:pF,roughnessmap_fragment:fF,roughnessmap_pars_fragment:mF,shadowmap_pars_fragment:gF,shadowmap_pars_vertex:xF,shadowmap_vertex:yF,shadowmask_pars_fragment:bF,skinbase_vertex:vF,skinning_pars_vertex:wF,skinning_vertex:SF,skinnormal_vertex:_F,specularmap_fragment:CF,specularmap_pars_fragment:TF,tonemapping_fragment:IF,tonemapping_pars_fragment:EF,transmission_fragment:MF,transmission_pars_fragment:kF,uv_pars_fragment:NF,uv_pars_vertex:AF,uv_vertex:RF,uv2_pars_fragment:$F,uv2_pars_vertex:DF,uv2_vertex:LF,worldpos_vertex:FF,background_vert:PF,background_frag:OF,cube_vert:zF,cube_frag:BF,depth_vert:VF,depth_frag:UF,distanceRGBA_vert:WF,distanceRGBA_frag:GF,equirect_vert:HF,equirect_frag:jF,linedashed_vert:XF,linedashed_frag:qF,meshbasic_vert:ZF,meshbasic_frag:YF,meshlambert_vert:JF,meshlambert_frag:KF,meshmatcap_vert:QF,meshmatcap_frag:eP,meshnormal_vert:tP,meshnormal_frag:nP,meshphong_vert:sP,meshphong_frag:iP,meshphysical_vert:rP,meshphysical_frag:oP,meshtoon_vert:aP,meshtoon_frag:lP,points_vert:cP,points_frag:uP,shadow_vert:hP,shadow_frag:dP,sprite_vert:pP,sprite_frag:fP},Le={common:{diffuse:{value:new Xe(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Gn},uv2Transform:{value:new Gn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ie(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Xe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Xe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Gn}},sprite:{diffuse:{value:new Xe(16777215)},opacity:{value:1},center:{value:new Ie(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Gn}}},Li={basic:{uniforms:Kn([Le.common,Le.specularmap,Le.envmap,Le.aomap,Le.lightmap,Le.fog]),vertexShader:xt.meshbasic_vert,fragmentShader:xt.meshbasic_frag},lambert:{uniforms:Kn([Le.common,Le.specularmap,Le.envmap,Le.aomap,Le.lightmap,Le.emissivemap,Le.fog,Le.lights,{emissive:{value:new Xe(0)}}]),vertexShader:xt.meshlambert_vert,fragmentShader:xt.meshlambert_frag},phong:{uniforms:Kn([Le.common,Le.specularmap,Le.envmap,Le.aomap,Le.lightmap,Le.emissivemap,Le.bumpmap,Le.normalmap,Le.displacementmap,Le.fog,Le.lights,{emissive:{value:new Xe(0)},specular:{value:new Xe(1118481)},shininess:{value:30}}]),vertexShader:xt.meshphong_vert,fragmentShader:xt.meshphong_frag},standard:{uniforms:Kn([Le.common,Le.envmap,Le.aomap,Le.lightmap,Le.emissivemap,Le.bumpmap,Le.normalmap,Le.displacementmap,Le.roughnessmap,Le.metalnessmap,Le.fog,Le.lights,{emissive:{value:new Xe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:xt.meshphysical_vert,fragmentShader:xt.meshphysical_frag},toon:{uniforms:Kn([Le.common,Le.aomap,Le.lightmap,Le.emissivemap,Le.bumpmap,Le.normalmap,Le.displacementmap,Le.gradientmap,Le.fog,Le.lights,{emissive:{value:new Xe(0)}}]),vertexShader:xt.meshtoon_vert,fragmentShader:xt.meshtoon_frag},matcap:{uniforms:Kn([Le.common,Le.bumpmap,Le.normalmap,Le.displacementmap,Le.fog,{matcap:{value:null}}]),vertexShader:xt.meshmatcap_vert,fragmentShader:xt.meshmatcap_frag},points:{uniforms:Kn([Le.points,Le.fog]),vertexShader:xt.points_vert,fragmentShader:xt.points_frag},dashed:{uniforms:Kn([Le.common,Le.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:xt.linedashed_vert,fragmentShader:xt.linedashed_frag},depth:{uniforms:Kn([Le.common,Le.displacementmap]),vertexShader:xt.depth_vert,fragmentShader:xt.depth_frag},normal:{uniforms:Kn([Le.common,Le.bumpmap,Le.normalmap,Le.displacementmap,{opacity:{value:1}}]),vertexShader:xt.meshnormal_vert,fragmentShader:xt.meshnormal_frag},sprite:{uniforms:Kn([Le.sprite,Le.fog]),vertexShader:xt.sprite_vert,fragmentShader:xt.sprite_frag},background:{uniforms:{uvTransform:{value:new Gn},t2D:{value:null}},vertexShader:xt.background_vert,fragmentShader:xt.background_frag},cube:{uniforms:Kn([Le.envmap,{opacity:{value:1}}]),vertexShader:xt.cube_vert,fragmentShader:xt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:xt.equirect_vert,fragmentShader:xt.equirect_frag},distanceRGBA:{uniforms:Kn([Le.common,Le.displacementmap,{referencePosition:{value:new V},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:xt.distanceRGBA_vert,fragmentShader:xt.distanceRGBA_frag},shadow:{uniforms:Kn([Le.lights,Le.fog,{color:{value:new Xe(0)},opacity:{value:1}}]),vertexShader:xt.shadow_vert,fragmentShader:xt.shadow_frag}};Li.physical={uniforms:Kn([Li.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Ie(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Xe(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Ie},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Xe(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new Xe(1,1,1)},specularColorMap:{value:null}}]),vertexShader:xt.meshphysical_vert,fragmentShader:xt.meshphysical_frag};function mP(n,e,t,s,i){const r=new Xe(0);let o=0,a,l,c=null,u=0,h=null;function d(f,g){let y=!1,m=g.isScene===!0?g.background:null;m&&m.isTexture&&(m=e.get(m));const x=n.xr,v=x.getSession&&x.getSession();v&&v.environmentBlendMode==="additive"&&(m=null),m===null?p(r,o):m&&m.isColor&&(p(m,1),y=!0),(n.autoClear||y)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),m&&(m.isCubeTexture||m.mapping===zp)?(l===void 0&&(l=new gn(new ma(1,1,1),new Qo({name:"BackgroundCubeMaterial",uniforms:_l(Li.cube.uniforms),vertexShader:Li.cube.vertexShader,fragmentShader:Li.cube.fragmentShader,side:En,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(b,w,S){this.matrixWorld.copyPosition(S.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(l)),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m.isRenderTargetTexture===!1?-1:1,(c!==m||u!==m.version||h!==n.toneMapping)&&(l.material.needsUpdate=!0,c=m,u=m.version,h=n.toneMapping),f.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(a===void 0&&(a=new gn(new Hl(2,2),new Qo({name:"BackgroundMaterial",uniforms:_l(Li.background.uniforms),vertexShader:Li.background.vertexShader,fragmentShader:Li.background.fragmentShader,side:wl,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(a)),a.material.uniforms.t2D.value=m,m.matrixAutoUpdate===!0&&m.updateMatrix(),a.material.uniforms.uvTransform.value.copy(m.matrix),(c!==m||u!==m.version||h!==n.toneMapping)&&(a.material.needsUpdate=!0,c=m,u=m.version,h=n.toneMapping),f.unshift(a,a.geometry,a.material,0,0,null))}function p(f,g){t.buffers.color.setClear(f.r,f.g,f.b,g,i)}return{getClearColor:function(){return r},setClearColor:function(f,g=1){r.set(f),o=g,p(r,o)},getClearAlpha:function(){return o},setClearAlpha:function(f){o=f,p(r,o)},render:d}}function gP(n,e,t,s){const i=n.getParameter(34921),r=s.isWebGL2?null:e.get("OES_vertex_array_object"),o=s.isWebGL2||r!==null,a={},l=g(null);let c=l;function u(C,R,L,$,O){let G=!1;if(o){const Z=f($,L,R);c!==Z&&(c=Z,d(c.object)),G=y($,O),G&&m($,O)}else{const Z=R.wireframe===!0;(c.geometry!==$.id||c.program!==L.id||c.wireframe!==Z)&&(c.geometry=$.id,c.program=L.id,c.wireframe=Z,G=!0)}C.isInstancedMesh===!0&&(G=!0),O!==null&&t.update(O,34963),G&&(_(C,R,L,$),O!==null&&n.bindBuffer(34963,t.get(O).buffer))}function h(){return s.isWebGL2?n.createVertexArray():r.createVertexArrayOES()}function d(C){return s.isWebGL2?n.bindVertexArray(C):r.bindVertexArrayOES(C)}function p(C){return s.isWebGL2?n.deleteVertexArray(C):r.deleteVertexArrayOES(C)}function f(C,R,L){const $=L.wireframe===!0;let O=a[C.id];O===void 0&&(O={},a[C.id]=O);let G=O[R.id];G===void 0&&(G={},O[R.id]=G);let Z=G[$];return Z===void 0&&(Z=g(h()),G[$]=Z),Z}function g(C){const R=[],L=[],$=[];for(let O=0;O<i;O++)R[O]=0,L[O]=0,$[O]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:R,enabledAttributes:L,attributeDivisors:$,object:C,attributes:{},index:null}}function y(C,R){const L=c.attributes,$=C.attributes;let O=0;for(const G in $){const Z=L[G],H=$[G];if(Z===void 0||Z.attribute!==H||Z.data!==H.data)return!0;O++}return c.attributesNum!==O||c.index!==R}function m(C,R){const L={},$=C.attributes;let O=0;for(const G in $){const Z=$[G],H={};H.attribute=Z,Z.data&&(H.data=Z.data),L[G]=H,O++}c.attributes=L,c.attributesNum=O,c.index=R}function x(){const C=c.newAttributes;for(let R=0,L=C.length;R<L;R++)C[R]=0}function v(C){b(C,0)}function b(C,R){const L=c.newAttributes,$=c.enabledAttributes,O=c.attributeDivisors;L[C]=1,$[C]===0&&(n.enableVertexAttribArray(C),$[C]=1),O[C]!==R&&((s.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[s.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](C,R),O[C]=R)}function w(){const C=c.newAttributes,R=c.enabledAttributes;for(let L=0,$=R.length;L<$;L++)R[L]!==C[L]&&(n.disableVertexAttribArray(L),R[L]=0)}function S(C,R,L,$,O,G){s.isWebGL2===!0&&(L===5124||L===5125)?n.vertexAttribIPointer(C,R,L,O,G):n.vertexAttribPointer(C,R,L,$,O,G)}function _(C,R,L,$){if(s.isWebGL2===!1&&(C.isInstancedMesh||$.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;x();const O=$.attributes,G=L.getAttributes(),Z=R.defaultAttributeValues;for(const H in G){const j=G[H];if(j.location>=0){let ne=O[H];if(ne===void 0&&(H==="instanceMatrix"&&C.instanceMatrix&&(ne=C.instanceMatrix),H==="instanceColor"&&C.instanceColor&&(ne=C.instanceColor)),ne!==void 0){const ee=ne.normalized,oe=ne.itemSize,ue=t.get(ne);if(ue===void 0)continue;const Q=ue.buffer,_e=ue.type,ye=ue.bytesPerElement;if(ne.isInterleavedBufferAttribute){const pe=ne.data,Ee=pe.stride,$e=ne.offset;if(pe&&pe.isInstancedInterleavedBuffer){for(let ie=0;ie<j.locationSize;ie++)b(j.location+ie,pe.meshPerAttribute);C.isInstancedMesh!==!0&&$._maxInstanceCount===void 0&&($._maxInstanceCount=pe.meshPerAttribute*pe.count)}else for(let ie=0;ie<j.locationSize;ie++)v(j.location+ie);n.bindBuffer(34962,Q);for(let ie=0;ie<j.locationSize;ie++)S(j.location+ie,oe/j.locationSize,_e,ee,Ee*ye,($e+oe/j.locationSize*ie)*ye)}else{if(ne.isInstancedBufferAttribute){for(let pe=0;pe<j.locationSize;pe++)b(j.location+pe,ne.meshPerAttribute);C.isInstancedMesh!==!0&&$._maxInstanceCount===void 0&&($._maxInstanceCount=ne.meshPerAttribute*ne.count)}else for(let pe=0;pe<j.locationSize;pe++)v(j.location+pe);n.bindBuffer(34962,Q);for(let pe=0;pe<j.locationSize;pe++)S(j.location+pe,oe/j.locationSize,_e,ee,oe*ye,oe/j.locationSize*pe*ye)}}else if(Z!==void 0){const ee=Z[H];if(ee!==void 0)switch(ee.length){case 2:n.vertexAttrib2fv(j.location,ee);break;case 3:n.vertexAttrib3fv(j.location,ee);break;case 4:n.vertexAttrib4fv(j.location,ee);break;default:n.vertexAttrib1fv(j.location,ee)}}}}w()}function I(){M();for(const C in a){const R=a[C];for(const L in R){const $=R[L];for(const O in $)p($[O].object),delete $[O];delete R[L]}delete a[C]}}function N(C){if(a[C.id]===void 0)return;const R=a[C.id];for(const L in R){const $=R[L];for(const O in $)p($[O].object),delete $[O];delete R[L]}delete a[C.id]}function k(C){for(const R in a){const L=a[R];if(L[C.id]===void 0)continue;const $=L[C.id];for(const O in $)p($[O].object),delete $[O];delete L[C.id]}}function M(){T(),c!==l&&(c=l,d(c.object))}function T(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:M,resetDefaultState:T,dispose:I,releaseStatesOfGeometry:N,releaseStatesOfProgram:k,initAttributes:x,enableAttribute:v,disableUnusedAttributes:w}}function xP(n,e,t,s){const i=s.isWebGL2;let r;function o(c){r=c}function a(c,u){n.drawArrays(r,c,u),t.update(u,r,1)}function l(c,u,h){if(h===0)return;let d,p;if(i)d=n,p="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[p](r,c,u,h),t.update(u,r,h)}this.setMode=o,this.render=a,this.renderInstances=l}function yP(n,e,t){let s;function i(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){const _=e.get("EXT_texture_filter_anisotropic");s=n.getParameter(_.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function r(_){if(_==="highp"){if(n.getShaderPrecisionFormat(35633,36338).precision>0&&n.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";_="mediump"}return _==="mediump"&&n.getShaderPrecisionFormat(35633,36337).precision>0&&n.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&n instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&n instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=n.getParameter(34930),d=n.getParameter(35660),p=n.getParameter(3379),f=n.getParameter(34076),g=n.getParameter(34921),y=n.getParameter(36347),m=n.getParameter(36348),x=n.getParameter(36349),v=d>0,b=o||e.has("OES_texture_float"),w=v&&b,S=o?n.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:p,maxCubemapSize:f,maxAttributes:g,maxVertexUniforms:y,maxVaryings:m,maxFragmentUniforms:x,vertexTextures:v,floatFragmentTextures:b,floatVertexTextures:w,maxSamples:S}}function bP(n){const e=this;let t=null,s=0,i=!1,r=!1;const o=new pr,a=new Gn,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d,p){const f=h.length!==0||d||s!==0||i;return i=d,t=u(h,p,0),s=h.length,f},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1,c()},this.setState=function(h,d,p){const f=h.clippingPlanes,g=h.clipIntersection,y=h.clipShadows,m=n.get(h);if(!i||f===null||f.length===0||r&&!y)r?u(null):c();else{const x=r?0:s,v=x*4;let b=m.clippingState||null;l.value=b,b=u(f,d,v,p);for(let w=0;w!==v;++w)b[w]=t[w];m.clippingState=b,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=s>0),e.numPlanes=s,e.numIntersection=0}function u(h,d,p,f){const g=h!==null?h.length:0;let y=null;if(g!==0){if(y=l.value,f!==!0||y===null){const m=p+g*4,x=d.matrixWorldInverse;a.getNormalMatrix(x),(y===null||y.length<m)&&(y=new Float32Array(m));for(let v=0,b=p;v!==g;++v,b+=4)o.copy(h[v]).applyMatrix4(x,a),o.normal.toArray(y,b),y[b+3]=o.constant}l.value=y,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,y}}function vP(n){let e=new WeakMap;function t(o,a){return a===Kg?o.mapping=yu:a===Qg&&(o.mapping=bu),o}function s(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Kg||a===Qg)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=n.getRenderTarget(),u=new fC(l.height/2);return u.fromEquirectangularTexture(n,o),e.set(o,u),n.setRenderTarget(c),o.addEventListener("dispose",i),t(u.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function r(){e=new WeakMap}return{get:s,dispose:r}}class m0 extends p0{constructor(e=-1,t=1,s=1,i=-1,r=.1,o=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=s,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,s,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=s,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),s=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=s-e,o=s+e,a=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}m0.prototype.isOrthographicCamera=!0;class Gp extends Qo{constructor(e){super(e),this.type="RawShaderMaterial"}}Gp.prototype.isRawShaderMaterial=!0;const hl=4,Jr=8,Ri=Math.pow(2,Jr),gC=[.125,.215,.35,.446,.526,.582],xC=Jr-hl+1+gC.length,Xa=20,Yd={[yi]:0,[zl]:1},hg=new m0,{_lodPlanes:vc,_sizeLods:Lw,_sigmas:ud}=SP(),Fw=new Xe;let dg=null;const $o=(1+Math.sqrt(5))/2,qa=1/$o,Pw=[new V(1,1,1),new V(-1,1,1),new V(1,1,-1),new V(-1,1,-1),new V(0,$o,qa),new V(0,$o,-qa),new V(qa,0,$o),new V(-qa,0,$o),new V($o,qa,0),new V(-$o,qa,0)];class wP{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=_P(Xa),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,s=.1,i=100){dg=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(e,s,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=Bw(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=zw(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<vc.length;e++)vc[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(dg),e.scissorTest=!1,hd(e,0,0,e.width,e.height)}_fromTexture(e){dg=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:fs,minFilter:fs,generateMipmaps:!1,type:Ho,format:Pn,encoding:yi,depthBuffer:!1},s=Ow(t);return s.depthBuffer=!e,this._pingPongRenderTarget=Ow(t),s}_compileMaterial(e){const t=new gn(vc[0],e);this._renderer.compile(t,hg)}_sceneToCubeUV(e,t,s,i){const a=new ts(90,1,t,s),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(Fw),u.toneMapping=Yr,u.autoClear=!1;const p=new fa({name:"PMREM.Background",side:En,depthWrite:!1,depthTest:!1}),f=new gn(new ma,p);let g=!1;const y=e.background;y?y.isColor&&(p.color.copy(y),e.background=null,g=!0):(p.color.copy(Fw),g=!0);for(let m=0;m<6;m++){const x=m%3;x==0?(a.up.set(0,l[m],0),a.lookAt(c[m],0,0)):x==1?(a.up.set(0,0,l[m]),a.lookAt(0,c[m],0)):(a.up.set(0,l[m],0),a.lookAt(0,0,c[m])),hd(i,x*Ri,m>2?Ri:0,Ri,Ri),u.setRenderTarget(i),g&&u.render(f,a),u.render(e,a)}f.geometry.dispose(),f.material.dispose(),u.toneMapping=d,u.autoClear=h,e.background=y}_setEncoding(e,t){this._renderer.capabilities.isWebGL2===!0&&t.format===Pn&&t.type===yr&&t.encoding===zl?e.value=Yd[yi]:e.value=Yd[t.encoding]}_textureToCubeUV(e,t){const s=this._renderer,i=e.mapping===yu||e.mapping===bu;i?this._cubemapShader==null&&(this._cubemapShader=Bw()):this._equirectShader==null&&(this._equirectShader=zw());const r=i?this._cubemapShader:this._equirectShader,o=new gn(vc[0],r),a=r.uniforms;a.envMap.value=e,i||a.texelSize.value.set(1/e.image.width,1/e.image.height),this._setEncoding(a.inputEncoding,e),hd(t,0,0,3*Ri,2*Ri),s.setRenderTarget(t),s.render(o,hg)}_applyPMREM(e){const t=this._renderer,s=t.autoClear;t.autoClear=!1;for(let i=1;i<xC;i++){const r=Math.sqrt(ud[i]*ud[i]-ud[i-1]*ud[i-1]),o=Pw[(i-1)%Pw.length];this._blur(e,i-1,i,r,o)}t.autoClear=s}_blur(e,t,s,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,s,i,"latitudinal",r),this._halfBlur(o,e,s,s,i,"longitudinal",r)}_halfBlur(e,t,s,i,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new gn(vc[i],c),d=c.uniforms,p=Lw[s]-1,f=isFinite(r)?Math.PI/(2*p):2*Math.PI/(2*Xa-1),g=r/f,y=isFinite(r)?1+Math.floor(u*g):Xa;y>Xa&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${Xa}`);const m=[];let x=0;for(let S=0;S<Xa;++S){const _=S/g,I=Math.exp(-_*_/2);m.push(I),S==0?x+=I:S<y&&(x+=2*I)}for(let S=0;S<m.length;S++)m[S]=m[S]/x;d.envMap.value=e.texture,d.samples.value=y,d.weights.value=m,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a),d.dTheta.value=f,d.mipInt.value=Jr-s;const v=Lw[i],b=3*Math.max(0,Ri-2*v),w=(i===0?0:2*Ri)+2*v*(i>Jr-hl?i-Jr+hl:0);hd(t,b,w,3*v,2*v),l.setRenderTarget(t),l.render(h,hg)}}function SP(){const n=[],e=[],t=[];let s=Jr;for(let i=0;i<xC;i++){const r=Math.pow(2,s);e.push(r);let o=1/r;i>Jr-hl?o=gC[i-Jr+hl-1]:i==0&&(o=0),t.push(o);const a=1/(r-1),l=-a/2,c=1+a/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],h=6,d=6,p=3,f=2,g=1,y=new Float32Array(p*d*h),m=new Float32Array(f*d*h),x=new Float32Array(g*d*h);for(let b=0;b<h;b++){const w=b%3*2/3-1,S=b>2?0:-1,_=[w,S,0,w+2/3,S,0,w+2/3,S+1,0,w,S,0,w+2/3,S+1,0,w,S+1,0];y.set(_,p*d*b),m.set(u,f*d*b);const I=[b,b,b,b,b,b];x.set(I,g*d*b)}const v=new Xt;v.setAttribute("position",new $n(y,p)),v.setAttribute("uv",new $n(m,f)),v.setAttribute("faceIndex",new $n(x,g)),n.push(v),s>hl&&s--}return{_lodPlanes:n,_sizeLods:e,_sigmas:t}}function Ow(n){const e=new Js(3*Ri,3*Ri,n);return e.texture.mapping=zp,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function hd(n,e,t,s,i){n.viewport.set(e,t,s,i),n.scissor.set(e,t,s,i)}function _P(n){const e=new Float32Array(n),t=new V(0,1,0);return new Gp({name:"SphericalGaussianBlur",defines:{n},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t}},vertexShader:g0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${x0()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Zr,depthTest:!1,depthWrite:!1})}function zw(){const n=new Ie(1,1);return new Gp({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:n},inputEncoding:{value:Yd[yi]}},vertexShader:g0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${x0()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,blending:Zr,depthTest:!1,depthWrite:!1})}function Bw(){return new Gp({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Yd[yi]}},vertexShader:g0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${x0()}

			void main() {

				gl_FragColor = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) );

			}
		`,blending:Zr,depthTest:!1,depthWrite:!1})}function g0(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function x0(){return`

		uniform int inputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else {

				return sRGBToLinear( value );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function CP(n){let e=new WeakMap,t=null;function s(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const l=a.mapping,c=l===Kg||l===Qg,u=l===yu||l===bu;if(c||u){if(e.has(a))return e.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&i(h)){const d=n.getRenderTarget();t===null&&(t=new wP(n));const p=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,p),n.setRenderTarget(d),a.addEventListener("dispose",r),p.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:s,dispose:o}}function TP(n){const e={};function t(s){if(e[s]!==void 0)return e[s];let i;switch(s){case"WEBGL_depth_texture":i=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=n.getExtension(s)}return e[s]=i,i}return{has:function(s){return t(s)!==null},init:function(s){s.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(s){const i=t(s);return i===null&&console.warn("THREE.WebGLRenderer: "+s+" extension not supported."),i}}}function IP(n,e,t,s){const i={},r=new WeakMap;function o(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const f in d.attributes)e.remove(d.attributes[f]);d.removeEventListener("dispose",o),delete i[d.id];const p=r.get(d);p&&(e.remove(p),r.delete(d)),s.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(h,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,t.memory.geometries++),d}function l(h){const d=h.attributes;for(const f in d)e.update(d[f],34962);const p=h.morphAttributes;for(const f in p){const g=p[f];for(let y=0,m=g.length;y<m;y++)e.update(g[y],34962)}}function c(h){const d=[],p=h.index,f=h.attributes.position;let g=0;if(p!==null){const x=p.array;g=p.version;for(let v=0,b=x.length;v<b;v+=3){const w=x[v+0],S=x[v+1],_=x[v+2];d.push(w,S,S,_,_,w)}}else{const x=f.array;g=f.version;for(let v=0,b=x.length/3-1;v<b;v+=3){const w=v+0,S=v+1,_=v+2;d.push(w,S,S,_,_,w)}}const y=new(cC(d)>65535?pC:dC)(d,1);y.version=g;const m=r.get(h);m&&e.remove(m),r.set(h,y)}function u(h){const d=r.get(h);if(d){const p=h.index;p!==null&&d.version<p.version&&c(h)}else c(h);return r.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function EP(n,e,t,s){const i=s.isWebGL2;let r;function o(d){r=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function u(d,p){n.drawElements(r,p,a,d*l),t.update(p,r,1)}function h(d,p,f){if(f===0)return;let g,y;if(i)g=n,y="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[y](r,p,a,d*l,f),t.update(p,r,f)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function MP(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function s(r,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(r/3);break;case 1:t.lines+=a*(r/2);break;case 3:t.lines+=a*(r-1);break;case 2:t.lines+=a*r;break;case 0:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:s}}class y0 extends zn{constructor(e=null,t=1,s=1,i=1){super(null),this.image={data:e,width:t,height:s,depth:i},this.magFilter=Mn,this.minFilter=Mn,this.wrapR=Ds,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}y0.prototype.isDataTexture2DArray=!0;function kP(n,e){return n[0]-e[0]}function NP(n,e){return Math.abs(e[1])-Math.abs(n[1])}function Vw(n,e){let t=1;const s=e.isInterleavedBufferAttribute?e.data.array:e.array;s instanceof Int8Array?t=127:s instanceof Int16Array?t=32767:s instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",s),n.divideScalar(t)}function AP(n,e,t){const s={},i=new Float32Array(8),r=new WeakMap,o=new V,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h,d){const p=c.morphTargetInfluences;if(e.isWebGL2===!0){const f=u.morphAttributes.position.length;let g=r.get(u);if(g===void 0||g.count!==f){g!==void 0&&g.texture.dispose();const x=u.morphAttributes.normal!==void 0,v=u.morphAttributes.position,b=u.morphAttributes.normal||[],w=u.attributes.position.count,S=x===!0?2:1;let _=w*S,I=1;_>e.maxTextureSize&&(I=Math.ceil(_/e.maxTextureSize),_=e.maxTextureSize);const N=new Float32Array(_*I*4*f),k=new y0(N,_,I,f);k.format=Pn,k.type=Gr,k.needsUpdate=!0;const M=S*4;for(let T=0;T<f;T++){const C=v[T],R=b[T],L=_*I*4*T;for(let $=0;$<C.count;$++){o.fromBufferAttribute(C,$),C.normalized===!0&&Vw(o,C);const O=$*M;N[L+O+0]=o.x,N[L+O+1]=o.y,N[L+O+2]=o.z,N[L+O+3]=0,x===!0&&(o.fromBufferAttribute(R,$),R.normalized===!0&&Vw(o,R),N[L+O+4]=o.x,N[L+O+5]=o.y,N[L+O+6]=o.z,N[L+O+7]=0)}}g={count:f,texture:k,size:new Ie(_,I)},r.set(u,g)}let y=0;for(let x=0;x<p.length;x++)y+=p[x];const m=u.morphTargetsRelative?1:1-y;d.getUniforms().setValue(n,"morphTargetBaseInfluence",m),d.getUniforms().setValue(n,"morphTargetInfluences",p),d.getUniforms().setValue(n,"morphTargetsTexture",g.texture,t),d.getUniforms().setValue(n,"morphTargetsTextureSize",g.size)}else{const f=p===void 0?0:p.length;let g=s[u.id];if(g===void 0||g.length!==f){g=[];for(let b=0;b<f;b++)g[b]=[b,0];s[u.id]=g}for(let b=0;b<f;b++){const w=g[b];w[0]=b,w[1]=p[b]}g.sort(NP);for(let b=0;b<8;b++)b<f&&g[b][1]?(a[b][0]=g[b][0],a[b][1]=g[b][1]):(a[b][0]=Number.MAX_SAFE_INTEGER,a[b][1]=0);a.sort(kP);const y=u.morphAttributes.position,m=u.morphAttributes.normal;let x=0;for(let b=0;b<8;b++){const w=a[b],S=w[0],_=w[1];S!==Number.MAX_SAFE_INTEGER&&_?(y&&u.getAttribute("morphTarget"+b)!==y[S]&&u.setAttribute("morphTarget"+b,y[S]),m&&u.getAttribute("morphNormal"+b)!==m[S]&&u.setAttribute("morphNormal"+b,m[S]),i[b]=_,x+=_):(y&&u.hasAttribute("morphTarget"+b)===!0&&u.deleteAttribute("morphTarget"+b),m&&u.hasAttribute("morphNormal"+b)===!0&&u.deleteAttribute("morphNormal"+b),i[b]=0)}const v=u.morphTargetsRelative?1:1-x;d.getUniforms().setValue(n,"morphTargetBaseInfluence",v),d.getUniforms().setValue(n,"morphTargetInfluences",i)}}return{update:l}}function RP(n,e,t,s){let i=new WeakMap;function r(l){const c=s.render.frame,u=l.geometry,h=e.get(l,u);return i.get(h)!==c&&(e.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),h}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:o}}class yC extends zn{constructor(e=null,t=1,s=1,i=1){super(null),this.image={data:e,width:t,height:s,depth:i},this.magFilter=Mn,this.minFilter=Mn,this.wrapR=Ds,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}yC.prototype.isDataTexture3D=!0;const bC=new zn,vC=new y0,wC=new yC,SC=new Up,Uw=[],Ww=[],Gw=new Float32Array(16),Hw=new Float32Array(9),jw=new Float32Array(4);function jl(n,e,t){const s=n[0];if(s<=0||s>0)return n;const i=e*t;let r=Uw[i];if(r===void 0&&(r=new Float32Array(i),Uw[i]=r),e!==0){s.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,n[o].toArray(r,a)}return r}function gs(n,e){if(n.length!==e.length)return!1;for(let t=0,s=n.length;t<s;t++)if(n[t]!==e[t])return!1;return!0}function os(n,e){for(let t=0,s=e.length;t<s;t++)n[t]=e[t]}function Hp(n,e){let t=Ww[e];t===void 0&&(t=new Int32Array(e),Ww[e]=t);for(let s=0;s!==e;++s)t[s]=n.allocateTextureUnit();return t}function $P(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function DP(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(gs(t,e))return;n.uniform2fv(this.addr,e),os(t,e)}}function LP(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(gs(t,e))return;n.uniform3fv(this.addr,e),os(t,e)}}function FP(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(gs(t,e))return;n.uniform4fv(this.addr,e),os(t,e)}}function PP(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(gs(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),os(t,e)}else{if(gs(t,s))return;jw.set(s),n.uniformMatrix2fv(this.addr,!1,jw),os(t,s)}}function OP(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(gs(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),os(t,e)}else{if(gs(t,s))return;Hw.set(s),n.uniformMatrix3fv(this.addr,!1,Hw),os(t,s)}}function zP(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(gs(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),os(t,e)}else{if(gs(t,s))return;Gw.set(s),n.uniformMatrix4fv(this.addr,!1,Gw),os(t,s)}}function BP(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function VP(n,e){const t=this.cache;gs(t,e)||(n.uniform2iv(this.addr,e),os(t,e))}function UP(n,e){const t=this.cache;gs(t,e)||(n.uniform3iv(this.addr,e),os(t,e))}function WP(n,e){const t=this.cache;gs(t,e)||(n.uniform4iv(this.addr,e),os(t,e))}function GP(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function HP(n,e){const t=this.cache;gs(t,e)||(n.uniform2uiv(this.addr,e),os(t,e))}function jP(n,e){const t=this.cache;gs(t,e)||(n.uniform3uiv(this.addr,e),os(t,e))}function XP(n,e){const t=this.cache;gs(t,e)||(n.uniform4uiv(this.addr,e),os(t,e))}function qP(n,e,t){const s=this.cache,i=t.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i),t.safeSetTexture2D(e||bC,i)}function ZP(n,e,t){const s=this.cache,i=t.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i),t.setTexture3D(e||wC,i)}function YP(n,e,t){const s=this.cache,i=t.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i),t.safeSetTextureCube(e||SC,i)}function JP(n,e,t){const s=this.cache,i=t.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i),t.setTexture2DArray(e||vC,i)}function KP(n){switch(n){case 5126:return $P;case 35664:return DP;case 35665:return LP;case 35666:return FP;case 35674:return PP;case 35675:return OP;case 35676:return zP;case 5124:case 35670:return BP;case 35667:case 35671:return VP;case 35668:case 35672:return UP;case 35669:case 35673:return WP;case 5125:return GP;case 36294:return HP;case 36295:return jP;case 36296:return XP;case 35678:case 36198:case 36298:case 36306:case 35682:return qP;case 35679:case 36299:case 36307:return ZP;case 35680:case 36300:case 36308:case 36293:return YP;case 36289:case 36303:case 36311:case 36292:return JP}}function QP(n,e){n.uniform1fv(this.addr,e)}function e3(n,e){const t=jl(e,this.size,2);n.uniform2fv(this.addr,t)}function t3(n,e){const t=jl(e,this.size,3);n.uniform3fv(this.addr,t)}function n3(n,e){const t=jl(e,this.size,4);n.uniform4fv(this.addr,t)}function s3(n,e){const t=jl(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function i3(n,e){const t=jl(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function r3(n,e){const t=jl(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function o3(n,e){n.uniform1iv(this.addr,e)}function a3(n,e){n.uniform2iv(this.addr,e)}function l3(n,e){n.uniform3iv(this.addr,e)}function c3(n,e){n.uniform4iv(this.addr,e)}function u3(n,e){n.uniform1uiv(this.addr,e)}function h3(n,e){n.uniform2uiv(this.addr,e)}function d3(n,e){n.uniform3uiv(this.addr,e)}function p3(n,e){n.uniform4uiv(this.addr,e)}function f3(n,e,t){const s=e.length,i=Hp(t,s);n.uniform1iv(this.addr,i);for(let r=0;r!==s;++r)t.safeSetTexture2D(e[r]||bC,i[r])}function m3(n,e,t){const s=e.length,i=Hp(t,s);n.uniform1iv(this.addr,i);for(let r=0;r!==s;++r)t.setTexture3D(e[r]||wC,i[r])}function g3(n,e,t){const s=e.length,i=Hp(t,s);n.uniform1iv(this.addr,i);for(let r=0;r!==s;++r)t.safeSetTextureCube(e[r]||SC,i[r])}function x3(n,e,t){const s=e.length,i=Hp(t,s);n.uniform1iv(this.addr,i);for(let r=0;r!==s;++r)t.setTexture2DArray(e[r]||vC,i[r])}function y3(n){switch(n){case 5126:return QP;case 35664:return e3;case 35665:return t3;case 35666:return n3;case 35674:return s3;case 35675:return i3;case 35676:return r3;case 5124:case 35670:return o3;case 35667:case 35671:return a3;case 35668:case 35672:return l3;case 35669:case 35673:return c3;case 5125:return u3;case 36294:return h3;case 36295:return d3;case 36296:return p3;case 35678:case 36198:case 36298:case 36306:case 35682:return f3;case 35679:case 36299:case 36307:return m3;case 35680:case 36300:case 36308:case 36293:return g3;case 36289:case 36303:case 36311:case 36292:return x3}}function b3(n,e,t){this.id=n,this.addr=t,this.cache=[],this.setValue=KP(e.type)}function _C(n,e,t){this.id=n,this.addr=t,this.cache=[],this.size=e.size,this.setValue=y3(e.type)}_C.prototype.updateCache=function(n){const e=this.cache;n instanceof Float32Array&&e.length!==n.length&&(this.cache=new Float32Array(n.length)),os(e,n)};function CC(n){this.id=n,this.seq=[],this.map={}}CC.prototype.setValue=function(n,e,t){const s=this.seq;for(let i=0,r=s.length;i!==r;++i){const o=s[i];o.setValue(n,e[o.id],t)}};const pg=/(\w+)(\])?(\[|\.)?/g;function Xw(n,e){n.seq.push(e),n.map[e.id]=e}function v3(n,e,t){const s=n.name,i=s.length;for(pg.lastIndex=0;;){const r=pg.exec(s),o=pg.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){Xw(t,c===void 0?new b3(a,n,e):new _C(a,n,e));break}else{let h=t.map[a];h===void 0&&(h=new CC(a),Xw(t,h)),t=h}}}function Kr(n,e){this.seq=[],this.map={};const t=n.getProgramParameter(e,35718);for(let s=0;s<t;++s){const i=n.getActiveUniform(e,s),r=n.getUniformLocation(e,i.name);v3(i,r,this)}}Kr.prototype.setValue=function(n,e,t,s){const i=this.map[e];i!==void 0&&i.setValue(n,t,s)};Kr.prototype.setOptional=function(n,e,t){const s=e[t];s!==void 0&&this.setValue(n,t,s)};Kr.upload=function(n,e,t,s){for(let i=0,r=e.length;i!==r;++i){const o=e[i],a=t[o.id];a.needsUpdate!==!1&&o.setValue(n,a.value,s)}};Kr.seqWithValue=function(n,e){const t=[];for(let s=0,i=n.length;s!==i;++s){const r=n[s];r.id in e&&t.push(r)}return t};function qw(n,e,t){const s=n.createShader(e);return n.shaderSource(s,t),n.compileShader(s),s}let w3=0;function S3(n){const e=n.split(`
`);for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join(`
`)}function TC(n){switch(n){case yi:return["Linear","( value )"];case zl:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",n),["Linear","( value )"]}}function Zw(n,e,t){const s=n.getShaderParameter(e,35713),i=n.getShaderInfoLog(e).trim();return s&&i===""?"":t.toUpperCase()+`

`+i+`

`+S3(n.getShaderSource(e))}function No(n,e){const t=TC(e);return"vec4 "+n+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function _3(n,e){const t=TC(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function C3(n,e){let t;switch(e){case x$:t="Linear";break;case y$:t="Reinhard";break;case b$:t="OptimizedCineon";break;case v$:t="ACESFilmic";break;case w$:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function T3(n){return[n.extensionDerivatives||n.envMapCubeUV||n.bumpMap||n.tangentSpaceNormalMap||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ac).join(`
`)}function I3(n){const e=[];for(const t in n){const s=n[t];s!==!1&&e.push("#define "+t+" "+s)}return e.join(`
`)}function E3(n,e){const t={},s=n.getProgramParameter(e,35721);for(let i=0;i<s;i++){const r=n.getActiveAttrib(e,i),o=r.name;let a=1;r.type===35674&&(a=2),r.type===35675&&(a=3),r.type===35676&&(a=4),t[o]={type:r.type,location:n.getAttribLocation(e,o),locationSize:a}}return t}function Ac(n){return n!==""}function Yw(n,e){return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Jw(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const M3=/^[ \t]*#include +<([\w\d./]+)>/gm;function sx(n){return n.replace(M3,k3)}function k3(n,e){const t=xt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return sx(t)}const N3=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,A3=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Kw(n){return n.replace(A3,IC).replace(N3,R3)}function R3(n,e,t,s){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),IC(n,e,t,s)}function IC(n,e,t,s){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=s.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Qw(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function $3(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===sC?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===ZR?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===Nc&&(e="SHADOWMAP_TYPE_VSM"),e}function D3(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case yu:case bu:e="ENVMAP_TYPE_CUBE";break;case zp:case u0:e="ENVMAP_TYPE_CUBE_UV";break}return e}function L3(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case bu:case u0:e="ENVMAP_MODE_REFRACTION";break}return e}function F3(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case Op:e="ENVMAP_BLENDING_MULTIPLY";break;case m$:e="ENVMAP_BLENDING_MIX";break;case g$:e="ENVMAP_BLENDING_ADD";break}return e}function P3(n,e,t,s){const i=n.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=$3(t),c=D3(t),u=L3(t),h=F3(t),d=t.isWebGL2?"":T3(t),p=I3(r),f=i.createProgram();let g,y,m=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=[p].filter(Ac).join(`
`),g.length>0&&(g+=`
`),y=[d,p].filter(Ac).join(`
`),y.length>0&&(y+=`
`)):(g=[Qw(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ac).join(`
`),y=[d,Qw(t),"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Yr?"#define TONE_MAPPING":"",t.toneMapping!==Yr?xt.tonemapping_pars_fragment:"",t.toneMapping!==Yr?C3("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.format===jo?"#define OPAQUE":"",xt.encodings_pars_fragment,t.map?No("mapTexelToLinear",t.mapEncoding):"",t.matcap?No("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?No("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?No("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.specularColorMap?No("specularColorMapTexelToLinear",t.specularColorMapEncoding):"",t.sheenColorMap?No("sheenColorMapTexelToLinear",t.sheenColorMapEncoding):"",t.lightMap?No("lightMapTexelToLinear",t.lightMapEncoding):"",_3("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ac).join(`
`)),o=sx(o),o=Yw(o,t),o=Jw(o,t),a=sx(a),a=Yw(a,t),a=Jw(a,t),o=Kw(o),a=Kw(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(m=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,y=["#define varying in",t.glslVersion===Sw?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Sw?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const x=m+g+o,v=m+y+a,b=qw(i,35633,x),w=qw(i,35632,v);if(i.attachShader(f,b),i.attachShader(f,w),t.index0AttributeName!==void 0?i.bindAttribLocation(f,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(f,0,"position"),i.linkProgram(f),n.debug.checkShaderErrors){const I=i.getProgramInfoLog(f).trim(),N=i.getShaderInfoLog(b).trim(),k=i.getShaderInfoLog(w).trim();let M=!0,T=!0;if(i.getProgramParameter(f,35714)===!1){M=!1;const C=Zw(i,b,"vertex"),R=Zw(i,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(f,35715)+`

Program Info Log: `+I+`
`+C+`
`+R)}else I!==""?console.warn("THREE.WebGLProgram: Program Info Log:",I):(N===""||k==="")&&(T=!1);T&&(this.diagnostics={runnable:M,programLog:I,vertexShader:{log:N,prefix:g},fragmentShader:{log:k,prefix:y}})}i.deleteShader(b),i.deleteShader(w);let S;this.getUniforms=function(){return S===void 0&&(S=new Kr(i,f)),S};let _;return this.getAttributes=function(){return _===void 0&&(_=E3(i,f)),_},this.destroy=function(){s.releaseStatesOfProgram(this),i.deleteProgram(f),this.program=void 0},this.name=t.shaderName,this.id=w3++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=b,this.fragmentShader=w,this}let O3=0;class z3{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,s=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(s),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const s of t)s.usedTimes--,s.usedTimes===0&&this.shaderCache.delete(s);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const s=new B3;t.set(e,s)}return t.get(e)}}class B3{constructor(){this.id=O3++,this.usedTimes=0}}function V3(n,e,t,s,i,r,o){const a=new uC,l=new z3,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.floatVertexTextures,p=i.maxVertexUniforms,f=i.vertexTextures;let g=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(T){const R=T.skeleton.bones;if(d)return 1024;{const $=Math.floor((p-20)/4),O=Math.min($,R.length);return O<R.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+R.length+" bones. This GPU supports "+O+"."),0):O}}function x(T){let C;return T&&T.isTexture?C=T.encoding:T&&T.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),C=T.texture.encoding):C=yi,u&&T&&T.isTexture&&T.format===Pn&&T.type===yr&&T.encoding===zl&&(C=yi),C}function v(T,C,R,L,$){const O=L.fog,G=T.isMeshStandardMaterial?L.environment:null,Z=(T.isMeshStandardMaterial?t:e).get(T.envMap||G),H=y[T.type],j=$.isSkinnedMesh?m($):0;T.precision!==null&&(g=i.getMaxPrecision(T.precision),g!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",g,"instead."));let ne,ee,oe,ue;if(H){const Ee=Li[H];ne=Ee.vertexShader,ee=Ee.fragmentShader}else ne=T.vertexShader,ee=T.fragmentShader,l.update(T),oe=l.getVertexShaderID(T),ue=l.getFragmentShaderID(T);const Q=n.getRenderTarget(),_e=T.alphaTest>0,ye=T.clearcoat>0;return{isWebGL2:u,shaderID:H,shaderName:T.type,vertexShader:ne,fragmentShader:ee,defines:T.defines,customVertexShaderID:oe,customFragmentShaderID:ue,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:g,instancing:$.isInstancedMesh===!0,instancingColor:$.isInstancedMesh===!0&&$.instanceColor!==null,supportsVertexTextures:f,outputEncoding:Q!==null?x(Q.texture):n.outputEncoding,map:!!T.map,mapEncoding:x(T.map),matcap:!!T.matcap,matcapEncoding:x(T.matcap),envMap:!!Z,envMapMode:Z&&Z.mapping,envMapEncoding:x(Z),envMapCubeUV:!!Z&&(Z.mapping===zp||Z.mapping===u0),lightMap:!!T.lightMap,lightMapEncoding:x(T.lightMap),aoMap:!!T.aoMap,emissiveMap:!!T.emissiveMap,emissiveMapEncoding:x(T.emissiveMap),bumpMap:!!T.bumpMap,normalMap:!!T.normalMap,objectSpaceNormalMap:T.normalMapType===vD,tangentSpaceNormalMap:T.normalMapType===Bl,clearcoat:ye,clearcoatMap:ye&&!!T.clearcoatMap,clearcoatRoughnessMap:ye&&!!T.clearcoatRoughnessMap,clearcoatNormalMap:ye&&!!T.clearcoatNormalMap,displacementMap:!!T.displacementMap,roughnessMap:!!T.roughnessMap,metalnessMap:!!T.metalnessMap,specularMap:!!T.specularMap,specularIntensityMap:!!T.specularIntensityMap,specularColorMap:!!T.specularColorMap,specularColorMapEncoding:x(T.specularColorMap),alphaMap:!!T.alphaMap,alphaTest:_e,gradientMap:!!T.gradientMap,sheen:T.sheen>0,sheenColorMap:!!T.sheenColorMap,sheenColorMapEncoding:x(T.sheenColorMap),sheenRoughnessMap:!!T.sheenRoughnessMap,transmission:T.transmission>0,transmissionMap:!!T.transmissionMap,thicknessMap:!!T.thicknessMap,combine:T.combine,vertexTangents:!!T.normalMap&&!!$.geometry&&!!$.geometry.attributes.tangent,vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!$.geometry&&!!$.geometry.attributes.color&&$.geometry.attributes.color.itemSize===4,vertexUvs:!!T.map||!!T.bumpMap||!!T.normalMap||!!T.specularMap||!!T.alphaMap||!!T.emissiveMap||!!T.roughnessMap||!!T.metalnessMap||!!T.clearcoatMap||!!T.clearcoatRoughnessMap||!!T.clearcoatNormalMap||!!T.displacementMap||!!T.transmissionMap||!!T.thicknessMap||!!T.specularIntensityMap||!!T.specularColorMap||!!T.sheenColorMap||!!T.sheenRoughnessMap,uvsVertexOnly:!(T.map||T.bumpMap||T.normalMap||T.specularMap||T.alphaMap||T.emissiveMap||T.roughnessMap||T.metalnessMap||T.clearcoatNormalMap||T.transmission>0||T.transmissionMap||T.thicknessMap||T.specularIntensityMap||T.specularColorMap||T.sheen>0||T.sheenColorMap||T.sheenRoughnessMap)&&!!T.displacementMap,fog:!!O,useFog:T.fog,fogExp2:O&&O.isFogExp2,flatShading:!!T.flatShading,sizeAttenuation:T.sizeAttenuation,logarithmicDepthBuffer:h,skinning:$.isSkinnedMesh===!0&&j>0,maxBones:j,useVertexTexture:d,morphTargets:!!$.geometry&&!!$.geometry.morphAttributes.position,morphNormals:!!$.geometry&&!!$.geometry.morphAttributes.normal,morphTargetsCount:$.geometry&&$.geometry.morphAttributes.position?$.geometry.morphAttributes.position.length:0,numDirLights:C.directional.length,numPointLights:C.point.length,numSpotLights:C.spot.length,numRectAreaLights:C.rectArea.length,numHemiLights:C.hemi.length,numDirLightShadows:C.directionalShadowMap.length,numPointLightShadows:C.pointShadowMap.length,numSpotLightShadows:C.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,format:T.format,dithering:T.dithering,shadowMapEnabled:n.shadowMap.enabled&&R.length>0,shadowMapType:n.shadowMap.type,toneMapping:T.toneMapped?n.toneMapping:Yr,physicallyCorrectLights:n.physicallyCorrectLights,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===Sr,flipSided:T.side===En,depthPacking:T.depthPacking!==void 0?T.depthPacking:!1,index0AttributeName:T.index0AttributeName,extensionDerivatives:T.extensions&&T.extensions.derivatives,extensionFragDepth:T.extensions&&T.extensions.fragDepth,extensionDrawBuffers:T.extensions&&T.extensions.drawBuffers,extensionShaderTextureLOD:T.extensions&&T.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||s.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||s.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||s.has("EXT_shader_texture_lod"),customProgramCacheKey:T.customProgramCacheKey()}}function b(T){const C=[];if(T.shaderID?C.push(T.shaderID):(C.push(T.customVertexShaderID),C.push(T.customFragmentShaderID)),T.defines!==void 0)for(const R in T.defines)C.push(R),C.push(T.defines[R]);return T.isRawShaderMaterial===!1&&(w(C,T),S(C,T),C.push(n.outputEncoding)),C.push(T.customProgramCacheKey),C.join()}function w(T,C){T.push(C.precision),T.push(C.outputEncoding),T.push(C.mapEncoding),T.push(C.matcapEncoding),T.push(C.envMapMode),T.push(C.envMapEncoding),T.push(C.lightMapEncoding),T.push(C.emissiveMapEncoding),T.push(C.combine),T.push(C.vertexUvs),T.push(C.fogExp2),T.push(C.sizeAttenuation),T.push(C.maxBones),T.push(C.morphTargetsCount),T.push(C.numDirLights),T.push(C.numPointLights),T.push(C.numSpotLights),T.push(C.numHemiLights),T.push(C.numRectAreaLights),T.push(C.numDirLightShadows),T.push(C.numPointLightShadows),T.push(C.numSpotLightShadows),T.push(C.shadowMapType),T.push(C.toneMapping),T.push(C.numClippingPlanes),T.push(C.numClipIntersection),T.push(C.format),T.push(C.specularColorMapEncoding),T.push(C.sheenColorMapEncoding)}function S(T,C){a.disableAll(),C.isWebGL2&&a.enable(0),C.supportsVertexTextures&&a.enable(1),C.instancing&&a.enable(2),C.instancingColor&&a.enable(3),C.map&&a.enable(4),C.matcap&&a.enable(5),C.envMap&&a.enable(6),C.envMapCubeUV&&a.enable(7),C.lightMap&&a.enable(8),C.aoMap&&a.enable(9),C.emissiveMap&&a.enable(10),C.bumpMap&&a.enable(11),C.normalMap&&a.enable(12),C.objectSpaceNormalMap&&a.enable(13),C.tangentSpaceNormalMap&&a.enable(14),C.clearcoat&&a.enable(15),C.clearcoatMap&&a.enable(16),C.clearcoatRoughnessMap&&a.enable(17),C.clearcoatNormalMap&&a.enable(18),C.displacementMap&&a.enable(19),C.specularMap&&a.enable(20),C.roughnessMap&&a.enable(21),C.metalnessMap&&a.enable(22),C.gradientMap&&a.enable(23),C.alphaMap&&a.enable(24),C.alphaTest&&a.enable(25),C.vertexColors&&a.enable(26),C.vertexAlphas&&a.enable(27),C.vertexUvs&&a.enable(28),C.vertexTangents&&a.enable(29),C.uvsVertexOnly&&a.enable(30),C.fog&&a.enable(31),T.push(a.mask),a.disableAll(),C.useFog&&a.enable(0),C.flatShading&&a.enable(1),C.logarithmicDepthBuffer&&a.enable(2),C.skinning&&a.enable(3),C.useVertexTexture&&a.enable(4),C.morphTargets&&a.enable(5),C.morphNormals&&a.enable(6),C.premultipliedAlpha&&a.enable(7),C.shadowMapEnabled&&a.enable(8),C.physicallyCorrectLights&&a.enable(9),C.doubleSided&&a.enable(10),C.flipSided&&a.enable(11),C.depthPacking&&a.enable(12),C.dithering&&a.enable(13),C.specularIntensityMap&&a.enable(14),C.specularColorMap&&a.enable(15),C.transmission&&a.enable(16),C.transmissionMap&&a.enable(17),C.thicknessMap&&a.enable(18),C.sheen&&a.enable(19),C.sheenColorMap&&a.enable(20),C.sheenRoughnessMap&&a.enable(21),T.push(a.mask)}function _(T){const C=y[T.type];let R;if(C){const L=Li[C];R=PD.clone(L.uniforms)}else R=T.uniforms;return R}function I(T,C){let R;for(let L=0,$=c.length;L<$;L++){const O=c[L];if(O.cacheKey===C){R=O,++R.usedTimes;break}}return R===void 0&&(R=new P3(n,C,T,r),c.push(R)),R}function N(T){if(--T.usedTimes===0){const C=c.indexOf(T);c[C]=c[c.length-1],c.pop(),T.destroy()}}function k(T){l.remove(T)}function M(){l.dispose()}return{getParameters:v,getProgramCacheKey:b,getUniforms:_,acquireProgram:I,releaseProgram:N,releaseShaderCache:k,programs:c,dispose:M}}function U3(){let n=new WeakMap;function e(r){let o=n.get(r);return o===void 0&&(o={},n.set(r,o)),o}function t(r){n.delete(r)}function s(r,o,a){n.get(r)[o]=a}function i(){n=new WeakMap}return{get:e,remove:t,update:s,dispose:i}}function W3(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function e1(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function t1(){const n=[];let e=0;const t=[],s=[],i=[];function r(){e=0,t.length=0,s.length=0,i.length=0}function o(h,d,p,f,g,y){let m=n[e];return m===void 0?(m={id:h.id,object:h,geometry:d,material:p,groupOrder:f,renderOrder:h.renderOrder,z:g,group:y},n[e]=m):(m.id=h.id,m.object=h,m.geometry=d,m.material=p,m.groupOrder=f,m.renderOrder=h.renderOrder,m.z=g,m.group=y),e++,m}function a(h,d,p,f,g,y){const m=o(h,d,p,f,g,y);p.transmission>0?s.push(m):p.transparent===!0?i.push(m):t.push(m)}function l(h,d,p,f,g,y){const m=o(h,d,p,f,g,y);p.transmission>0?s.unshift(m):p.transparent===!0?i.unshift(m):t.unshift(m)}function c(h,d){t.length>1&&t.sort(h||W3),s.length>1&&s.sort(d||e1),i.length>1&&i.sort(d||e1)}function u(){for(let h=e,d=n.length;h<d;h++){const p=n[h];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:t,transmissive:s,transparent:i,init:r,push:a,unshift:l,finish:u,sort:c}}function G3(){let n=new WeakMap;function e(s,i){let r;return n.has(s)===!1?(r=new t1,n.set(s,[r])):i>=n.get(s).length?(r=new t1,n.get(s).push(r)):r=n.get(s)[i],r}function t(){n=new WeakMap}return{get:e,dispose:t}}function H3(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new V,color:new Xe};break;case"SpotLight":t={position:new V,direction:new V,color:new Xe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new V,color:new Xe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new V,skyColor:new Xe,groundColor:new Xe};break;case"RectAreaLight":t={color:new Xe,position:new V,halfWidth:new V,halfHeight:new V};break}return n[e.id]=t,t}}}function j3(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ie};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ie};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ie,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let X3=0;function q3(n,e){return(e.castShadow?1:0)-(n.castShadow?1:0)}function Z3(n,e){const t=new H3,s=j3(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new V);const r=new V,o=new Qe,a=new Qe;function l(u,h){let d=0,p=0,f=0;for(let N=0;N<9;N++)i.probe[N].set(0,0,0);let g=0,y=0,m=0,x=0,v=0,b=0,w=0,S=0;u.sort(q3);const _=h!==!0?Math.PI:1;for(let N=0,k=u.length;N<k;N++){const M=u[N],T=M.color,C=M.intensity,R=M.distance,L=M.shadow&&M.shadow.map?M.shadow.map.texture:null;if(M.isAmbientLight)d+=T.r*C*_,p+=T.g*C*_,f+=T.b*C*_;else if(M.isLightProbe)for(let $=0;$<9;$++)i.probe[$].addScaledVector(M.sh.coefficients[$],C);else if(M.isDirectionalLight){const $=t.get(M);if($.color.copy(M.color).multiplyScalar(M.intensity*_),M.castShadow){const O=M.shadow,G=s.get(M);G.shadowBias=O.bias,G.shadowNormalBias=O.normalBias,G.shadowRadius=O.radius,G.shadowMapSize=O.mapSize,i.directionalShadow[g]=G,i.directionalShadowMap[g]=L,i.directionalShadowMatrix[g]=M.shadow.matrix,b++}i.directional[g]=$,g++}else if(M.isSpotLight){const $=t.get(M);if($.position.setFromMatrixPosition(M.matrixWorld),$.color.copy(T).multiplyScalar(C*_),$.distance=R,$.coneCos=Math.cos(M.angle),$.penumbraCos=Math.cos(M.angle*(1-M.penumbra)),$.decay=M.decay,M.castShadow){const O=M.shadow,G=s.get(M);G.shadowBias=O.bias,G.shadowNormalBias=O.normalBias,G.shadowRadius=O.radius,G.shadowMapSize=O.mapSize,i.spotShadow[m]=G,i.spotShadowMap[m]=L,i.spotShadowMatrix[m]=M.shadow.matrix,S++}i.spot[m]=$,m++}else if(M.isRectAreaLight){const $=t.get(M);$.color.copy(T).multiplyScalar(C),$.halfWidth.set(M.width*.5,0,0),$.halfHeight.set(0,M.height*.5,0),i.rectArea[x]=$,x++}else if(M.isPointLight){const $=t.get(M);if($.color.copy(M.color).multiplyScalar(M.intensity*_),$.distance=M.distance,$.decay=M.decay,M.castShadow){const O=M.shadow,G=s.get(M);G.shadowBias=O.bias,G.shadowNormalBias=O.normalBias,G.shadowRadius=O.radius,G.shadowMapSize=O.mapSize,G.shadowCameraNear=O.camera.near,G.shadowCameraFar=O.camera.far,i.pointShadow[y]=G,i.pointShadowMap[y]=L,i.pointShadowMatrix[y]=M.shadow.matrix,w++}i.point[y]=$,y++}else if(M.isHemisphereLight){const $=t.get(M);$.skyColor.copy(M.color).multiplyScalar(C*_),$.groundColor.copy(M.groundColor).multiplyScalar(C*_),i.hemi[v]=$,v++}}x>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Le.LTC_FLOAT_1,i.rectAreaLTC2=Le.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Le.LTC_HALF_1,i.rectAreaLTC2=Le.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=p,i.ambient[2]=f;const I=i.hash;(I.directionalLength!==g||I.pointLength!==y||I.spotLength!==m||I.rectAreaLength!==x||I.hemiLength!==v||I.numDirectionalShadows!==b||I.numPointShadows!==w||I.numSpotShadows!==S)&&(i.directional.length=g,i.spot.length=m,i.rectArea.length=x,i.point.length=y,i.hemi.length=v,i.directionalShadow.length=b,i.directionalShadowMap.length=b,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=S,i.spotShadowMap.length=S,i.directionalShadowMatrix.length=b,i.pointShadowMatrix.length=w,i.spotShadowMatrix.length=S,I.directionalLength=g,I.pointLength=y,I.spotLength=m,I.rectAreaLength=x,I.hemiLength=v,I.numDirectionalShadows=b,I.numPointShadows=w,I.numSpotShadows=S,i.version=X3++)}function c(u,h){let d=0,p=0,f=0,g=0,y=0;const m=h.matrixWorldInverse;for(let x=0,v=u.length;x<v;x++){const b=u[x];if(b.isDirectionalLight){const w=i.directional[d];w.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(m),d++}else if(b.isSpotLight){const w=i.spot[f];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(m),w.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(m),f++}else if(b.isRectAreaLight){const w=i.rectArea[g];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(m),a.identity(),o.copy(b.matrixWorld),o.premultiply(m),a.extractRotation(o),w.halfWidth.set(b.width*.5,0,0),w.halfHeight.set(0,b.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),g++}else if(b.isPointLight){const w=i.point[p];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(m),p++}else if(b.isHemisphereLight){const w=i.hemi[y];w.direction.setFromMatrixPosition(b.matrixWorld),w.direction.transformDirection(m),w.direction.normalize(),y++}}}return{setup:l,setupView:c,state:i}}function n1(n,e){const t=new Z3(n,e),s=[],i=[];function r(){s.length=0,i.length=0}function o(h){s.push(h)}function a(h){i.push(h)}function l(h){t.setup(s,h)}function c(h){t.setupView(s,h)}return{init:r,state:{lightsArray:s,shadowsArray:i,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function Y3(n,e){let t=new WeakMap;function s(r,o=0){let a;return t.has(r)===!1?(a=new n1(n,e),t.set(r,[a])):o>=t.get(r).length?(a=new n1(n,e),t.get(r).push(a)):a=t.get(r)[o],a}function i(){t=new WeakMap}return{get:s,dispose:i}}class EC extends ls{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=yD,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}EC.prototype.isMeshDepthMaterial=!0;class MC extends ls{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new V,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}MC.prototype.isMeshDistanceMaterial=!0;const J3=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,K3=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function kC(n,e,t){let s=new Wp;const i=new Ie,r=new Ie,o=new Vt,a=new EC({depthPacking:bD}),l=new MC,c={},u=t.maxTextureSize,h={0:En,1:wl,2:Sr},d=new Qo({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ie},radius:{value:4}},vertexShader:J3,fragmentShader:K3}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const f=new Xt;f.setAttribute("position",new $n(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new gn(f,d),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=sC,this.render=function(b,w,S){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||b.length===0)return;const _=n.getRenderTarget(),I=n.getActiveCubeFace(),N=n.getActiveMipmapLevel(),k=n.state;k.setBlending(Zr),k.buffers.color.setClear(1,1,1,1),k.buffers.depth.setTest(!0),k.setScissorTest(!1);for(let M=0,T=b.length;M<T;M++){const C=b[M],R=C.shadow;if(R===void 0){console.warn("THREE.WebGLShadowMap:",C,"has no shadow.");continue}if(R.autoUpdate===!1&&R.needsUpdate===!1)continue;i.copy(R.mapSize);const L=R.getFrameExtents();if(i.multiply(L),r.copy(R.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/L.x),i.x=r.x*L.x,R.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/L.y),i.y=r.y*L.y,R.mapSize.y=r.y)),R.map===null&&!R.isPointLightShadow&&this.type===Nc){const O={minFilter:fs,magFilter:fs,format:Pn};R.map=new Js(i.x,i.y,O),R.map.texture.name=C.name+".shadowMap",R.mapPass=new Js(i.x,i.y,O),R.camera.updateProjectionMatrix()}if(R.map===null){const O={minFilter:Mn,magFilter:Mn,format:Pn};R.map=new Js(i.x,i.y,O),R.map.texture.name=C.name+".shadowMap",R.camera.updateProjectionMatrix()}n.setRenderTarget(R.map),n.clear();const $=R.getViewportCount();for(let O=0;O<$;O++){const G=R.getViewport(O);o.set(r.x*G.x,r.y*G.y,r.x*G.z,r.y*G.w),k.viewport(o),R.updateMatrices(C,O),s=R.getFrustum(),v(w,S,R.camera,C,this.type)}!R.isPointLightShadow&&this.type===Nc&&m(R,S),R.needsUpdate=!1}y.needsUpdate=!1,n.setRenderTarget(_,I,N)};function m(b,w){const S=e.update(g);d.defines.VSM_SAMPLES!==b.blurSamples&&(d.defines.VSM_SAMPLES=b.blurSamples,p.defines.VSM_SAMPLES=b.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),d.uniforms.shadow_pass.value=b.map.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,n.setRenderTarget(b.mapPass),n.clear(),n.renderBufferDirect(w,null,S,d,g,null),p.uniforms.shadow_pass.value=b.mapPass.texture,p.uniforms.resolution.value=b.mapSize,p.uniforms.radius.value=b.radius,n.setRenderTarget(b.map),n.clear(),n.renderBufferDirect(w,null,S,p,g,null)}function x(b,w,S,_,I,N,k){let M=null;const T=_.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(T!==void 0?M=T:M=_.isPointLight===!0?l:a,n.localClippingEnabled&&S.clipShadows===!0&&S.clippingPlanes.length!==0||S.displacementMap&&S.displacementScale!==0||S.alphaMap&&S.alphaTest>0){const C=M.uuid,R=S.uuid;let L=c[C];L===void 0&&(L={},c[C]=L);let $=L[R];$===void 0&&($=M.clone(),L[R]=$),M=$}return M.visible=S.visible,M.wireframe=S.wireframe,k===Nc?M.side=S.shadowSide!==null?S.shadowSide:S.side:M.side=S.shadowSide!==null?S.shadowSide:h[S.side],M.alphaMap=S.alphaMap,M.alphaTest=S.alphaTest,M.clipShadows=S.clipShadows,M.clippingPlanes=S.clippingPlanes,M.clipIntersection=S.clipIntersection,M.displacementMap=S.displacementMap,M.displacementScale=S.displacementScale,M.displacementBias=S.displacementBias,M.wireframeLinewidth=S.wireframeLinewidth,M.linewidth=S.linewidth,_.isPointLight===!0&&M.isMeshDistanceMaterial===!0&&(M.referencePosition.setFromMatrixPosition(_.matrixWorld),M.nearDistance=I,M.farDistance=N),M}function v(b,w,S,_,I){if(b.visible===!1)return;if(b.layers.test(w.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&I===Nc)&&(!b.frustumCulled||s.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,b.matrixWorld);const M=e.update(b),T=b.material;if(Array.isArray(T)){const C=M.groups;for(let R=0,L=C.length;R<L;R++){const $=C[R],O=T[$.materialIndex];if(O&&O.visible){const G=x(b,M,O,_,S.near,S.far,I);n.renderBufferDirect(S,null,M,G,b,$)}}}else if(T.visible){const C=x(b,M,T,_,S.near,S.far,I);n.renderBufferDirect(S,null,M,C,b,null)}}const k=b.children;for(let M=0,T=k.length;M<T;M++)v(k[M],w,S,_,I)}}function Q3(n,e,t){const s=t.isWebGL2;function i(){let z=!1;const Ce=new Vt;let Te=null;const He=new Vt(0,0,0,0);return{setMask:function(Ve){Te!==Ve&&!z&&(n.colorMask(Ve,Ve,Ve,Ve),Te=Ve)},setLocked:function(Ve){z=Ve},setClear:function(Ve,rt,De,et,yt){yt===!0&&(Ve*=et,rt*=et,De*=et),Ce.set(Ve,rt,De,et),He.equals(Ce)===!1&&(n.clearColor(Ve,rt,De,et),He.copy(Ce))},reset:function(){z=!1,Te=null,He.set(-1,0,0,0)}}}function r(){let z=!1,Ce=null,Te=null,He=null;return{setTest:function(Ve){Ve?ee(2929):oe(2929)},setMask:function(Ve){Ce!==Ve&&!z&&(n.depthMask(Ve),Ce=Ve)},setFunc:function(Ve){if(Te!==Ve){if(Ve)switch(Ve){case l$:n.depthFunc(512);break;case c$:n.depthFunc(519);break;case u$:n.depthFunc(513);break;case Jg:n.depthFunc(515);break;case h$:n.depthFunc(514);break;case d$:n.depthFunc(518);break;case p$:n.depthFunc(516);break;case f$:n.depthFunc(517);break;default:n.depthFunc(515)}else n.depthFunc(515);Te=Ve}},setLocked:function(Ve){z=Ve},setClear:function(Ve){He!==Ve&&(n.clearDepth(Ve),He=Ve)},reset:function(){z=!1,Ce=null,Te=null,He=null}}}function o(){let z=!1,Ce=null,Te=null,He=null,Ve=null,rt=null,De=null,et=null,yt=null;return{setTest:function(Lt){z||(Lt?ee(2960):oe(2960))},setMask:function(Lt){Ce!==Lt&&!z&&(n.stencilMask(Lt),Ce=Lt)},setFunc:function(Lt,Ei,Mi){(Te!==Lt||He!==Ei||Ve!==Mi)&&(n.stencilFunc(Lt,Ei,Mi),Te=Lt,He=Ei,Ve=Mi)},setOp:function(Lt,Ei,Mi){(rt!==Lt||De!==Ei||et!==Mi)&&(n.stencilOp(Lt,Ei,Mi),rt=Lt,De=Ei,et=Mi)},setLocked:function(Lt){z=Lt},setClear:function(Lt){yt!==Lt&&(n.clearStencil(Lt),yt=Lt)},reset:function(){z=!1,Ce=null,Te=null,He=null,Ve=null,rt=null,De=null,et=null,yt=null}}}const a=new i,l=new r,c=new o;let u={},h={},d=null,p=!1,f=null,g=null,y=null,m=null,x=null,v=null,b=null,w=!1,S=null,_=null,I=null,N=null,k=null;const M=n.getParameter(35661);let T=!1,C=0;const R=n.getParameter(7938);R.indexOf("WebGL")!==-1?(C=parseFloat(/^WebGL (\d)/.exec(R)[1]),T=C>=1):R.indexOf("OpenGL ES")!==-1&&(C=parseFloat(/^OpenGL ES (\d)/.exec(R)[1]),T=C>=2);let L=null,$={};const O=n.getParameter(3088),G=n.getParameter(2978),Z=new Vt().fromArray(O),H=new Vt().fromArray(G);function j(z,Ce,Te){const He=new Uint8Array(4),Ve=n.createTexture();n.bindTexture(z,Ve),n.texParameteri(z,10241,9728),n.texParameteri(z,10240,9728);for(let rt=0;rt<Te;rt++)n.texImage2D(Ce+rt,0,6408,1,1,0,6408,5121,He);return Ve}const ne={};ne[3553]=j(3553,3553,1),ne[34067]=j(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ee(2929),l.setFunc(Jg),$e(!1),ie(iw),ee(2884),pe(Zr);function ee(z){u[z]!==!0&&(n.enable(z),u[z]=!0)}function oe(z){u[z]!==!1&&(n.disable(z),u[z]=!1)}function ue(z,Ce){return h[z]!==Ce?(n.bindFramebuffer(z,Ce),h[z]=Ce,s&&(z===36009&&(h[36160]=Ce),z===36160&&(h[36009]=Ce)),!0):!1}function Q(z){return d!==z?(n.useProgram(z),d=z,!0):!1}const _e={[tl]:32774,[JR]:32778,[KR]:32779};if(s)_e[lw]=32775,_e[cw]=32776;else{const z=e.get("EXT_blend_minmax");z!==null&&(_e[lw]=z.MIN_EXT,_e[cw]=z.MAX_EXT)}const ye={[QR]:0,[e$]:1,[t$]:768,[rC]:770,[a$]:776,[r$]:774,[s$]:772,[n$]:769,[oC]:771,[o$]:775,[i$]:773};function pe(z,Ce,Te,He,Ve,rt,De,et){if(z===Zr){p===!0&&(oe(3042),p=!1);return}if(p===!1&&(ee(3042),p=!0),z!==YR){if(z!==f||et!==w){if((g!==tl||x!==tl)&&(n.blendEquation(32774),g=tl,x=tl),et)switch(z){case Vc:n.blendFuncSeparate(1,771,1,771);break;case rw:n.blendFunc(1,1);break;case ow:n.blendFuncSeparate(0,0,769,771);break;case aw:n.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}else switch(z){case Vc:n.blendFuncSeparate(770,771,1,771);break;case rw:n.blendFunc(770,1);break;case ow:n.blendFunc(0,769);break;case aw:n.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}y=null,m=null,v=null,b=null,f=z,w=et}return}Ve=Ve||Ce,rt=rt||Te,De=De||He,(Ce!==g||Ve!==x)&&(n.blendEquationSeparate(_e[Ce],_e[Ve]),g=Ce,x=Ve),(Te!==y||He!==m||rt!==v||De!==b)&&(n.blendFuncSeparate(ye[Te],ye[He],ye[rt],ye[De]),y=Te,m=He,v=rt,b=De),f=z,w=null}function Ee(z,Ce){z.side===Sr?oe(2884):ee(2884);let Te=z.side===En;Ce&&(Te=!Te),$e(Te),z.blending===Vc&&z.transparent===!1?pe(Zr):pe(z.blending,z.blendEquation,z.blendSrc,z.blendDst,z.blendEquationAlpha,z.blendSrcAlpha,z.blendDstAlpha,z.premultipliedAlpha),l.setFunc(z.depthFunc),l.setTest(z.depthTest),l.setMask(z.depthWrite),a.setMask(z.colorWrite);const He=z.stencilWrite;c.setTest(He),He&&(c.setMask(z.stencilWriteMask),c.setFunc(z.stencilFunc,z.stencilRef,z.stencilFuncMask),c.setOp(z.stencilFail,z.stencilZFail,z.stencilZPass)),ge(z.polygonOffset,z.polygonOffsetFactor,z.polygonOffsetUnits),z.alphaToCoverage===!0?ee(32926):oe(32926)}function $e(z){S!==z&&(z?n.frontFace(2304):n.frontFace(2305),S=z)}function ie(z){z!==XR?(ee(2884),z!==_&&(z===iw?n.cullFace(1029):z===qR?n.cullFace(1028):n.cullFace(1032))):oe(2884),_=z}function de(z){z!==I&&(T&&n.lineWidth(z),I=z)}function ge(z,Ce,Te){z?(ee(32823),(N!==Ce||k!==Te)&&(n.polygonOffset(Ce,Te),N=Ce,k=Te)):oe(32823)}function ke(z){z?ee(3089):oe(3089)}function be(z){z===void 0&&(z=33984+M-1),L!==z&&(n.activeTexture(z),L=z)}function ze(z,Ce){L===null&&be();let Te=$[L];Te===void 0&&(Te={type:void 0,texture:void 0},$[L]=Te),(Te.type!==z||Te.texture!==Ce)&&(n.bindTexture(z,Ce||ne[z]),Te.type=z,Te.texture=Ce)}function Be(){const z=$[L];z!==void 0&&z.type!==void 0&&(n.bindTexture(z.type,null),z.type=void 0,z.texture=void 0)}function nt(){try{n.compressedTexImage2D.apply(n,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function it(){try{n.texSubImage2D.apply(n,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function B(){try{n.texSubImage3D.apply(n,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function F(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function fe(){try{n.texStorage2D.apply(n,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function we(){try{n.texStorage3D.apply(n,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Ne(){try{n.texImage2D.apply(n,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Se(){try{n.texImage3D.apply(n,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function qe(z){Z.equals(z)===!1&&(n.scissor(z.x,z.y,z.z,z.w),Z.copy(z))}function We(z){H.equals(z)===!1&&(n.viewport(z.x,z.y,z.z,z.w),H.copy(z))}function W(){n.disable(3042),n.disable(2884),n.disable(2929),n.disable(32823),n.disable(3089),n.disable(2960),n.disable(32926),n.blendEquation(32774),n.blendFunc(1,0),n.blendFuncSeparate(1,0,1,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(513),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(519,0,4294967295),n.stencilOp(7680,7680,7680),n.clearStencil(0),n.cullFace(1029),n.frontFace(2305),n.polygonOffset(0,0),n.activeTexture(33984),n.bindFramebuffer(36160,null),s===!0&&(n.bindFramebuffer(36009,null),n.bindFramebuffer(36008,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),u={},L=null,$={},h={},d=null,p=!1,f=null,g=null,y=null,m=null,x=null,v=null,b=null,w=!1,S=null,_=null,I=null,N=null,k=null,Z.set(0,0,n.canvas.width,n.canvas.height),H.set(0,0,n.canvas.width,n.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ee,disable:oe,bindFramebuffer:ue,useProgram:Q,setBlending:pe,setMaterial:Ee,setFlipSided:$e,setCullFace:ie,setLineWidth:de,setPolygonOffset:ge,setScissorTest:ke,activeTexture:be,bindTexture:ze,unbindTexture:Be,compressedTexImage2D:nt,texImage2D:Ne,texImage3D:Se,texStorage2D:fe,texStorage3D:we,texSubImage2D:it,texSubImage3D:B,compressedTexSubImage2D:F,scissor:qe,viewport:We,reset:W}}function eO(n,e,t,s,i,r,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,p=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):void 0,f=new WeakMap;let g,y=!1;try{y=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function m(B,F){return y?new OffscreenCanvas(B,F):Vp("canvas")}function x(B,F,fe,we){let Ne=1;if((B.width>we||B.height>we)&&(Ne=we/Math.max(B.width,B.height)),Ne<1||F===!0)if(typeof HTMLImageElement<"u"&&B instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&B instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&B instanceof ImageBitmap){const Se=F?_D:Math.floor,qe=Se(Ne*B.width),We=Se(Ne*B.height);g===void 0&&(g=m(qe,We));const W=fe?m(qe,We):g;return W.width=qe,W.height=We,W.getContext("2d").drawImage(B,0,0,qe,We),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+B.width+"x"+B.height+") to ("+qe+"x"+We+")."),W}else return"data"in B&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+B.width+"x"+B.height+")."),B;return B}function v(B){return _w(B.width)&&_w(B.height)}function b(B){return a?!1:B.wrapS!==Ds||B.wrapT!==Ds||B.minFilter!==Mn&&B.minFilter!==fs}function w(B,F){return B.generateMipmaps&&F&&B.minFilter!==Mn&&B.minFilter!==fs}function S(B){n.generateMipmap(B)}function _(B,F,fe,we){if(a===!1)return F;if(B!==null){if(n[B]!==void 0)return n[B];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+B+"'")}let Ne=F;return F===6403&&(fe===5126&&(Ne=33326),fe===5131&&(Ne=33325),fe===5121&&(Ne=33321)),F===6407&&(fe===5126&&(Ne=34837),fe===5131&&(Ne=34843),fe===5121&&(Ne=32849)),F===6408&&(fe===5126&&(Ne=34836),fe===5131&&(Ne=34842),fe===5121&&(Ne=we===zl?35907:32856)),(Ne===33325||Ne===33326||Ne===34842||Ne===34836)&&e.get("EXT_color_buffer_float"),Ne}function I(B,F,fe){return w(B,fe)===!0||B.isFramebufferTexture&&B.minFilter!==Mn&&B.minFilter!==fs?Math.log2(Math.max(F.width,F.height))+1:B.mipmaps!==void 0&&B.mipmaps.length>0?B.mipmaps.length:B.isCompressedTexture&&Array.isArray(B.image)?F.mipmaps.length:1}function N(B){return B===Mn||B===uw||B===hw?9728:9729}function k(B){const F=B.target;F.removeEventListener("dispose",k),T(F),F.isVideoTexture&&f.delete(F),o.memory.textures--}function M(B){const F=B.target;F.removeEventListener("dispose",M),C(F)}function T(B){const F=s.get(B);F.__webglInit!==void 0&&(n.deleteTexture(F.__webglTexture),s.remove(B))}function C(B){const F=B.texture,fe=s.get(B),we=s.get(F);if(B){if(we.__webglTexture!==void 0&&(n.deleteTexture(we.__webglTexture),o.memory.textures--),B.depthTexture&&B.depthTexture.dispose(),B.isWebGLCubeRenderTarget)for(let Ne=0;Ne<6;Ne++)n.deleteFramebuffer(fe.__webglFramebuffer[Ne]),fe.__webglDepthbuffer&&n.deleteRenderbuffer(fe.__webglDepthbuffer[Ne]);else n.deleteFramebuffer(fe.__webglFramebuffer),fe.__webglDepthbuffer&&n.deleteRenderbuffer(fe.__webglDepthbuffer),fe.__webglMultisampledFramebuffer&&n.deleteFramebuffer(fe.__webglMultisampledFramebuffer),fe.__webglColorRenderbuffer&&n.deleteRenderbuffer(fe.__webglColorRenderbuffer),fe.__webglDepthRenderbuffer&&n.deleteRenderbuffer(fe.__webglDepthRenderbuffer);if(B.isWebGLMultipleRenderTargets)for(let Ne=0,Se=F.length;Ne<Se;Ne++){const qe=s.get(F[Ne]);qe.__webglTexture&&(n.deleteTexture(qe.__webglTexture),o.memory.textures--),s.remove(F[Ne])}s.remove(F),s.remove(B)}}let R=0;function L(){R=0}function $(){const B=R;return B>=l&&console.warn("THREE.WebGLTextures: Trying to use "+B+" texture units while this GPU supports only "+l),R+=1,B}function O(B,F){const fe=s.get(B);if(B.isVideoTexture&&be(B),B.version>0&&fe.__version!==B.version){const we=B.image;if(we===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(we.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ue(fe,B,F);return}}t.activeTexture(33984+F),t.bindTexture(3553,fe.__webglTexture)}function G(B,F){const fe=s.get(B);if(B.version>0&&fe.__version!==B.version){ue(fe,B,F);return}t.activeTexture(33984+F),t.bindTexture(35866,fe.__webglTexture)}function Z(B,F){const fe=s.get(B);if(B.version>0&&fe.__version!==B.version){ue(fe,B,F);return}t.activeTexture(33984+F),t.bindTexture(32879,fe.__webglTexture)}function H(B,F){const fe=s.get(B);if(B.version>0&&fe.__version!==B.version){Q(fe,B,F);return}t.activeTexture(33984+F),t.bindTexture(34067,fe.__webglTexture)}const j={[ex]:10497,[Ds]:33071,[tx]:33648},ne={[Mn]:9728,[uw]:9984,[hw]:9986,[fs]:9729,[S$]:9985,[Bp]:9987};function ee(B,F,fe){if(fe?(n.texParameteri(B,10242,j[F.wrapS]),n.texParameteri(B,10243,j[F.wrapT]),(B===32879||B===35866)&&n.texParameteri(B,32882,j[F.wrapR]),n.texParameteri(B,10240,ne[F.magFilter]),n.texParameteri(B,10241,ne[F.minFilter])):(n.texParameteri(B,10242,33071),n.texParameteri(B,10243,33071),(B===32879||B===35866)&&n.texParameteri(B,32882,33071),(F.wrapS!==Ds||F.wrapT!==Ds)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(B,10240,N(F.magFilter)),n.texParameteri(B,10241,N(F.minFilter)),F.minFilter!==Mn&&F.minFilter!==fs&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const we=e.get("EXT_texture_filter_anisotropic");if(F.type===Gr&&e.has("OES_texture_float_linear")===!1||a===!1&&F.type===Ho&&e.has("OES_texture_half_float_linear")===!1)return;(F.anisotropy>1||s.get(F).__currentAnisotropy)&&(n.texParameterf(B,we.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(F.anisotropy,i.getMaxAnisotropy())),s.get(F).__currentAnisotropy=F.anisotropy)}}function oe(B,F){B.__webglInit===void 0&&(B.__webglInit=!0,F.addEventListener("dispose",k),B.__webglTexture=n.createTexture(),o.memory.textures++)}function ue(B,F,fe){let we=3553;F.isDataTexture2DArray&&(we=35866),F.isDataTexture3D&&(we=32879),oe(B,F),t.activeTexture(33984+fe),t.bindTexture(we,B.__webglTexture),n.pixelStorei(37440,F.flipY),n.pixelStorei(37441,F.premultiplyAlpha),n.pixelStorei(3317,F.unpackAlignment),n.pixelStorei(37443,0);const Ne=b(F)&&v(F.image)===!1,Se=x(F.image,Ne,!1,u),qe=v(Se)||a,We=r.convert(F.format);let W=r.convert(F.type),z=_(F.internalFormat,We,W,F.encoding);ee(we,F,qe);let Ce;const Te=F.mipmaps,He=a&&F.isVideoTexture!==!0,Ve=B.__version===void 0,rt=I(F,Se,qe);if(F.isDepthTexture)z=6402,a?F.type===Gr?z=36012:F.type===Od?z=33190:F.type===ul?z=35056:z=33189:F.type===Gr&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),F.format===Xo&&z===6402&&F.type!==Yc&&F.type!==Od&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),F.type=Yc,W=r.convert(F.type)),F.format===Sl&&z===6402&&(z=34041,F.type!==ul&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),F.type=ul,W=r.convert(F.type))),He&&Ve?t.texStorage2D(3553,1,z,Se.width,Se.height):t.texImage2D(3553,0,z,Se.width,Se.height,0,We,W,null);else if(F.isDataTexture)if(Te.length>0&&qe){He&&Ve&&t.texStorage2D(3553,rt,z,Te[0].width,Te[0].height);for(let De=0,et=Te.length;De<et;De++)Ce=Te[De],He?t.texSubImage2D(3553,0,0,0,Ce.width,Ce.height,We,W,Ce.data):t.texImage2D(3553,De,z,Ce.width,Ce.height,0,We,W,Ce.data);F.generateMipmaps=!1}else He?(Ve&&t.texStorage2D(3553,rt,z,Se.width,Se.height),t.texSubImage2D(3553,0,0,0,Se.width,Se.height,We,W,Se.data)):t.texImage2D(3553,0,z,Se.width,Se.height,0,We,W,Se.data);else if(F.isCompressedTexture){He&&Ve&&t.texStorage2D(3553,rt,z,Te[0].width,Te[0].height);for(let De=0,et=Te.length;De<et;De++)Ce=Te[De],F.format!==Pn&&F.format!==jo?We!==null?He?t.compressedTexSubImage2D(3553,De,0,0,Ce.width,Ce.height,We,Ce.data):t.compressedTexImage2D(3553,De,z,Ce.width,Ce.height,0,Ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):He?t.texSubImage2D(3553,De,0,0,Ce.width,Ce.height,We,W,Ce.data):t.texImage2D(3553,De,z,Ce.width,Ce.height,0,We,W,Ce.data)}else if(F.isDataTexture2DArray)He?(Ve&&t.texStorage3D(35866,rt,z,Se.width,Se.height,Se.depth),t.texSubImage3D(35866,0,0,0,0,Se.width,Se.height,Se.depth,We,W,Se.data)):t.texImage3D(35866,0,z,Se.width,Se.height,Se.depth,0,We,W,Se.data);else if(F.isDataTexture3D)He?(Ve&&t.texStorage3D(32879,rt,z,Se.width,Se.height,Se.depth),t.texSubImage3D(32879,0,0,0,0,Se.width,Se.height,Se.depth,We,W,Se.data)):t.texImage3D(32879,0,z,Se.width,Se.height,Se.depth,0,We,W,Se.data);else if(F.isFramebufferTexture)He&&Ve?t.texStorage2D(3553,rt,z,Se.width,Se.height):t.texImage2D(3553,0,z,Se.width,Se.height,0,We,W,null);else if(Te.length>0&&qe){He&&Ve&&t.texStorage2D(3553,rt,z,Te[0].width,Te[0].height);for(let De=0,et=Te.length;De<et;De++)Ce=Te[De],He?t.texSubImage2D(3553,De,0,0,We,W,Ce):t.texImage2D(3553,De,z,We,W,Ce);F.generateMipmaps=!1}else He?(Ve&&t.texStorage2D(3553,rt,z,Se.width,Se.height),t.texSubImage2D(3553,0,0,0,We,W,Se)):t.texImage2D(3553,0,z,We,W,Se);w(F,qe)&&S(we),B.__version=F.version,F.onUpdate&&F.onUpdate(F)}function Q(B,F,fe){if(F.image.length!==6)return;oe(B,F),t.activeTexture(33984+fe),t.bindTexture(34067,B.__webglTexture),n.pixelStorei(37440,F.flipY),n.pixelStorei(37441,F.premultiplyAlpha),n.pixelStorei(3317,F.unpackAlignment),n.pixelStorei(37443,0);const we=F&&(F.isCompressedTexture||F.image[0].isCompressedTexture),Ne=F.image[0]&&F.image[0].isDataTexture,Se=[];for(let De=0;De<6;De++)!we&&!Ne?Se[De]=x(F.image[De],!1,!0,c):Se[De]=Ne?F.image[De].image:F.image[De];const qe=Se[0],We=v(qe)||a,W=r.convert(F.format),z=r.convert(F.type),Ce=_(F.internalFormat,W,z,F.encoding),Te=a&&F.isVideoTexture!==!0,He=B.__version===void 0;let Ve=I(F,qe,We);ee(34067,F,We);let rt;if(we){Te&&He&&t.texStorage2D(34067,Ve,Ce,qe.width,qe.height);for(let De=0;De<6;De++){rt=Se[De].mipmaps;for(let et=0;et<rt.length;et++){const yt=rt[et];F.format!==Pn&&F.format!==jo?W!==null?Te?t.compressedTexSubImage2D(34069+De,et,0,0,yt.width,yt.height,W,yt.data):t.compressedTexImage2D(34069+De,et,Ce,yt.width,yt.height,0,yt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Te?t.texSubImage2D(34069+De,et,0,0,yt.width,yt.height,W,z,yt.data):t.texImage2D(34069+De,et,Ce,yt.width,yt.height,0,W,z,yt.data)}}}else{rt=F.mipmaps,Te&&He&&(rt.length>0&&Ve++,t.texStorage2D(34067,Ve,Ce,Se[0].width,Se[0].height));for(let De=0;De<6;De++)if(Ne){Te?t.texSubImage2D(34069+De,0,0,0,Se[De].width,Se[De].height,W,z,Se[De].data):t.texImage2D(34069+De,0,Ce,Se[De].width,Se[De].height,0,W,z,Se[De].data);for(let et=0;et<rt.length;et++){const Lt=rt[et].image[De].image;Te?t.texSubImage2D(34069+De,et+1,0,0,Lt.width,Lt.height,W,z,Lt.data):t.texImage2D(34069+De,et+1,Ce,Lt.width,Lt.height,0,W,z,Lt.data)}}else{Te?t.texSubImage2D(34069+De,0,0,0,W,z,Se[De]):t.texImage2D(34069+De,0,Ce,W,z,Se[De]);for(let et=0;et<rt.length;et++){const yt=rt[et];Te?t.texSubImage2D(34069+De,et+1,0,0,W,z,yt.image[De]):t.texImage2D(34069+De,et+1,Ce,W,z,yt.image[De])}}}w(F,We)&&S(34067),B.__version=F.version,F.onUpdate&&F.onUpdate(F)}function _e(B,F,fe,we,Ne){const Se=r.convert(fe.format),qe=r.convert(fe.type),We=_(fe.internalFormat,Se,qe,fe.encoding);s.get(F).__hasExternalTextures||(Ne===32879||Ne===35866?t.texImage3D(Ne,0,We,F.width,F.height,F.depth,0,Se,qe,null):t.texImage2D(Ne,0,We,F.width,F.height,0,Se,qe,null)),t.bindFramebuffer(36160,B),F.useRenderToTexture?p.framebufferTexture2DMultisampleEXT(36160,we,Ne,s.get(fe).__webglTexture,0,ke(F)):n.framebufferTexture2D(36160,we,Ne,s.get(fe).__webglTexture,0),t.bindFramebuffer(36160,null)}function ye(B,F,fe){if(n.bindRenderbuffer(36161,B),F.depthBuffer&&!F.stencilBuffer){let we=33189;if(fe||F.useRenderToTexture){const Ne=F.depthTexture;Ne&&Ne.isDepthTexture&&(Ne.type===Gr?we=36012:Ne.type===Od&&(we=33190));const Se=ke(F);F.useRenderToTexture?p.renderbufferStorageMultisampleEXT(36161,Se,we,F.width,F.height):n.renderbufferStorageMultisample(36161,Se,we,F.width,F.height)}else n.renderbufferStorage(36161,we,F.width,F.height);n.framebufferRenderbuffer(36160,36096,36161,B)}else if(F.depthBuffer&&F.stencilBuffer){const we=ke(F);fe&&F.useRenderbuffer?n.renderbufferStorageMultisample(36161,we,35056,F.width,F.height):F.useRenderToTexture?p.renderbufferStorageMultisampleEXT(36161,we,35056,F.width,F.height):n.renderbufferStorage(36161,34041,F.width,F.height),n.framebufferRenderbuffer(36160,33306,36161,B)}else{const we=F.isWebGLMultipleRenderTargets===!0?F.texture[0]:F.texture,Ne=r.convert(we.format),Se=r.convert(we.type),qe=_(we.internalFormat,Ne,Se,we.encoding),We=ke(F);fe&&F.useRenderbuffer?n.renderbufferStorageMultisample(36161,We,qe,F.width,F.height):F.useRenderToTexture?p.renderbufferStorageMultisampleEXT(36161,We,qe,F.width,F.height):n.renderbufferStorage(36161,qe,F.width,F.height)}n.bindRenderbuffer(36161,null)}function pe(B,F){if(F&&F.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,B),!(F.depthTexture&&F.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!s.get(F.depthTexture).__webglTexture||F.depthTexture.image.width!==F.width||F.depthTexture.image.height!==F.height)&&(F.depthTexture.image.width=F.width,F.depthTexture.image.height=F.height,F.depthTexture.needsUpdate=!0),O(F.depthTexture,0);const we=s.get(F.depthTexture).__webglTexture,Ne=ke(F);if(F.depthTexture.format===Xo)F.useRenderToTexture?p.framebufferTexture2DMultisampleEXT(36160,36096,3553,we,0,Ne):n.framebufferTexture2D(36160,36096,3553,we,0);else if(F.depthTexture.format===Sl)F.useRenderToTexture?p.framebufferTexture2DMultisampleEXT(36160,33306,3553,we,0,Ne):n.framebufferTexture2D(36160,33306,3553,we,0);else throw new Error("Unknown depthTexture format")}function Ee(B){const F=s.get(B),fe=B.isWebGLCubeRenderTarget===!0;if(B.depthTexture&&!F.__autoAllocateDepthBuffer){if(fe)throw new Error("target.depthTexture not supported in Cube render targets");pe(F.__webglFramebuffer,B)}else if(fe){F.__webglDepthbuffer=[];for(let we=0;we<6;we++)t.bindFramebuffer(36160,F.__webglFramebuffer[we]),F.__webglDepthbuffer[we]=n.createRenderbuffer(),ye(F.__webglDepthbuffer[we],B,!1)}else t.bindFramebuffer(36160,F.__webglFramebuffer),F.__webglDepthbuffer=n.createRenderbuffer(),ye(F.__webglDepthbuffer,B,!1);t.bindFramebuffer(36160,null)}function $e(B,F,fe){const we=s.get(B);F!==void 0&&_e(we.__webglFramebuffer,B,B.texture,36064,3553),fe!==void 0&&Ee(B)}function ie(B){const F=B.texture,fe=s.get(B),we=s.get(F);B.addEventListener("dispose",M),B.isWebGLMultipleRenderTargets!==!0&&(we.__webglTexture===void 0&&(we.__webglTexture=n.createTexture()),we.__version=F.version,o.memory.textures++);const Ne=B.isWebGLCubeRenderTarget===!0,Se=B.isWebGLMultipleRenderTargets===!0,qe=F.isDataTexture3D||F.isDataTexture2DArray,We=v(B)||a;if(a&&F.format===jo&&(F.type===Gr||F.type===Ho)&&(F.format=Pn,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),Ne){fe.__webglFramebuffer=[];for(let W=0;W<6;W++)fe.__webglFramebuffer[W]=n.createFramebuffer()}else if(fe.__webglFramebuffer=n.createFramebuffer(),Se)if(i.drawBuffers){const W=B.texture;for(let z=0,Ce=W.length;z<Ce;z++){const Te=s.get(W[z]);Te.__webglTexture===void 0&&(Te.__webglTexture=n.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(B.useRenderbuffer)if(a){fe.__webglMultisampledFramebuffer=n.createFramebuffer(),fe.__webglColorRenderbuffer=n.createRenderbuffer(),n.bindRenderbuffer(36161,fe.__webglColorRenderbuffer);const W=r.convert(F.format),z=r.convert(F.type),Ce=_(F.internalFormat,W,z,F.encoding),Te=ke(B);n.renderbufferStorageMultisample(36161,Te,Ce,B.width,B.height),t.bindFramebuffer(36160,fe.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064,36161,fe.__webglColorRenderbuffer),n.bindRenderbuffer(36161,null),B.depthBuffer&&(fe.__webglDepthRenderbuffer=n.createRenderbuffer(),ye(fe.__webglDepthRenderbuffer,B,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(Ne){t.bindTexture(34067,we.__webglTexture),ee(34067,F,We);for(let W=0;W<6;W++)_e(fe.__webglFramebuffer[W],B,F,36064,34069+W);w(F,We)&&S(34067),t.unbindTexture()}else if(Se){const W=B.texture;for(let z=0,Ce=W.length;z<Ce;z++){const Te=W[z],He=s.get(Te);t.bindTexture(3553,He.__webglTexture),ee(3553,Te,We),_e(fe.__webglFramebuffer,B,Te,36064+z,3553),w(Te,We)&&S(3553)}t.unbindTexture()}else{let W=3553;qe&&(a?W=F.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),t.bindTexture(W,we.__webglTexture),ee(W,F,We),_e(fe.__webglFramebuffer,B,F,36064,W),w(F,We)&&S(W),t.unbindTexture()}B.depthBuffer&&Ee(B)}function de(B){const F=v(B)||a,fe=B.isWebGLMultipleRenderTargets===!0?B.texture:[B.texture];for(let we=0,Ne=fe.length;we<Ne;we++){const Se=fe[we];if(w(Se,F)){const qe=B.isWebGLCubeRenderTarget?34067:3553,We=s.get(Se).__webglTexture;t.bindTexture(qe,We),S(qe),t.unbindTexture()}}}function ge(B){if(B.useRenderbuffer)if(a){const F=B.width,fe=B.height;let we=16384;const Ne=[36064],Se=B.stencilBuffer?33306:36096;B.depthBuffer&&Ne.push(Se),B.ignoreDepthForMultisampleCopy||(B.depthBuffer&&(we|=256),B.stencilBuffer&&(we|=1024));const qe=s.get(B);t.bindFramebuffer(36008,qe.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,qe.__webglFramebuffer),B.ignoreDepthForMultisampleCopy&&(n.invalidateFramebuffer(36008,[Se]),n.invalidateFramebuffer(36009,[Se])),n.blitFramebuffer(0,0,F,fe,0,0,F,fe,we,9728),n.invalidateFramebuffer(36008,Ne),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,qe.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function ke(B){return a&&(B.useRenderbuffer||B.useRenderToTexture)?Math.min(h,B.samples):0}function be(B){const F=o.render.frame;f.get(B)!==F&&(f.set(B,F),B.update())}let ze=!1,Be=!1;function nt(B,F){B&&B.isWebGLRenderTarget&&(ze===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),ze=!0),B=B.texture),O(B,F)}function it(B,F){B&&B.isWebGLCubeRenderTarget&&(Be===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),Be=!0),B=B.texture),H(B,F)}this.allocateTextureUnit=$,this.resetTextureUnits=L,this.setTexture2D=O,this.setTexture2DArray=G,this.setTexture3D=Z,this.setTextureCube=H,this.rebindTextures=$e,this.setupRenderTarget=ie,this.updateRenderTargetMipmap=de,this.updateMultisampleRenderTarget=ge,this.setupDepthRenderbuffer=Ee,this.setupFrameBufferTexture=_e,this.safeSetTexture2D=nt,this.safeSetTextureCube=it}function tO(n,e,t){const s=t.isWebGL2;function i(r){let o;if(r===yr)return 5121;if(r===I$)return 32819;if(r===E$)return 32820;if(r===M$)return 33635;if(r===_$)return 5120;if(r===C$)return 5122;if(r===Yc)return 5123;if(r===T$)return 5124;if(r===Od)return 5125;if(r===Gr)return 5126;if(r===Ho)return s?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(r===k$)return 6406;if(r===jo)return 6407;if(r===Pn)return 6408;if(r===N$)return 6409;if(r===A$)return 6410;if(r===Xo)return 6402;if(r===Sl)return 34041;if(r===R$)return 6403;if(r===$$)return 36244;if(r===D$)return 33319;if(r===L$)return 33320;if(r===F$)return 36248;if(r===P$)return 36249;if(r===dw||r===pw||r===fw||r===mw)if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(r===dw)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===pw)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===fw)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===mw)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===gw||r===xw||r===yw||r===bw)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(r===gw)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===xw)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===yw)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===bw)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===O$)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((r===vw||r===ww)&&(o=e.get("WEBGL_compressed_texture_etc"),o!==null)){if(r===vw)return o.COMPRESSED_RGB8_ETC2;if(r===ww)return o.COMPRESSED_RGBA8_ETC2_EAC}if(r===z$||r===B$||r===V$||r===U$||r===W$||r===G$||r===H$||r===j$||r===X$||r===q$||r===Z$||r===Y$||r===J$||r===K$||r===eD||r===tD||r===nD||r===sD||r===iD||r===rD||r===oD||r===aD||r===lD||r===cD||r===uD||r===hD||r===dD||r===pD)return o=e.get("WEBGL_compressed_texture_astc"),o!==null?r:null;if(r===Q$)return o=e.get("EXT_texture_compression_bptc"),o!==null?r:null;if(r===ul)return s?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:i}}class NC extends ts{constructor(e=[]){super(),this.cameras=e}}NC.prototype.isArrayCamera=!0;class al extends Nt{constructor(){super(),this.type="Group"}}al.prototype.isGroup=!0;const nO={type:"move"};class fg{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new al,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new al,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new V,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new V),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new al,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new V,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new V),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,s){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(a!==null&&(i=t.getPose(e.targetRaySpace,s),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(nO))),c&&e.hand){o=!0;for(const g of e.hand.values()){const y=t.getJointPose(g,s);if(c.joints[g.jointName]===void 0){const x=new al;x.matrixAutoUpdate=!1,x.visible=!1,c.joints[g.jointName]=x,c.add(x)}const m=c.joints[g.jointName];y!==null&&(m.matrix.fromArray(y.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.jointRadius=y.radius),m.visible=y!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],d=u.position.distanceTo(h.position),p=.02,f=.005;c.inputState.pinching&&d>p+f?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=p-f&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,s),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}}class ix extends zn{constructor(e,t,s,i,r,o,a,l,c,u){if(u=u!==void 0?u:Xo,u!==Xo&&u!==Sl)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");s===void 0&&u===Xo&&(s=Yc),s===void 0&&u===Sl&&(s=ul),super(null,i,r,o,a,l,u,s,c),this.image={width:e,height:t},this.magFilter=a!==void 0?a:Mn,this.minFilter=l!==void 0?l:Mn,this.flipY=!1,this.generateMipmaps=!1}}ix.prototype.isDepthTexture=!0;class sO extends fo{constructor(e,t){super();const s=this;let i=null,r=1,o=null,a="local-floor";const l=e.extensions.has("WEBGL_multisampled_render_to_texture");let c=null,u=null,h=null,d=null,p=!1,f=null;const g=t.getContextAttributes();let y=null,m=null;const x=[],v=new Map,b=new ts;b.layers.enable(1),b.viewport=new Vt;const w=new ts;w.layers.enable(2),w.viewport=new Vt;const S=[b,w],_=new NC;_.layers.enable(1),_.layers.enable(2);let I=null,N=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(H){let j=x[H];return j===void 0&&(j=new fg,x[H]=j),j.getTargetRaySpace()},this.getControllerGrip=function(H){let j=x[H];return j===void 0&&(j=new fg,x[H]=j),j.getGripSpace()},this.getHand=function(H){let j=x[H];return j===void 0&&(j=new fg,x[H]=j),j.getHandSpace()};function k(H){const j=v.get(H.inputSource);j&&j.dispatchEvent({type:H.type,data:H.inputSource})}function M(){v.forEach(function(H,j){H.disconnect(j)}),v.clear(),I=null,N=null,e.setRenderTarget(y),d=null,h=null,u=null,i=null,m=null,Z.stop(),s.isPresenting=!1,s.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(H){r=H,s.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(H){a=H,s.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getBaseLayer=function(){return h!==null?h:d},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return i},this.setSession=async function(H){if(i=H,i!==null){if(y=e.getRenderTarget(),i.addEventListener("select",k),i.addEventListener("selectstart",k),i.addEventListener("selectend",k),i.addEventListener("squeeze",k),i.addEventListener("squeezestart",k),i.addEventListener("squeezeend",k),i.addEventListener("end",M),i.addEventListener("inputsourceschange",T),g.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const j={antialias:i.renderState.layers===void 0?g.antialias:!0,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,t,j),i.updateRenderState({baseLayer:d}),m=new Js(d.framebufferWidth,d.framebufferHeight,{format:Pn,type:yr,encoding:e.outputEncoding})}else{p=g.antialias;let j=null,ne=null,ee=null;g.depth&&(ee=g.stencil?35056:33190,j=g.stencil?Sl:Xo,ne=g.stencil?ul:Yc);const oe={colorFormat:g.alpha||p?32856:32849,depthFormat:ee,scaleFactor:r};u=new XRWebGLBinding(i,t),h=u.createProjectionLayer(oe),i.updateRenderState({layers:[h]}),p?m=new d0(h.textureWidth,h.textureHeight,{format:Pn,type:yr,depthTexture:new ix(h.textureWidth,h.textureHeight,ne,void 0,void 0,void 0,void 0,void 0,void 0,j),stencilBuffer:g.stencil,ignoreDepth:h.ignoreDepthValues,useRenderToTexture:l,encoding:e.outputEncoding}):m=new Js(h.textureWidth,h.textureHeight,{format:g.alpha?Pn:jo,type:yr,depthTexture:new ix(h.textureWidth,h.textureHeight,ne,void 0,void 0,void 0,void 0,void 0,void 0,j),stencilBuffer:g.stencil,ignoreDepth:h.ignoreDepthValues,encoding:e.outputEncoding})}this.setFoveation(1),o=await i.requestReferenceSpace(a),Z.setContext(i),Z.start(),s.isPresenting=!0,s.dispatchEvent({type:"sessionstart"})}};function T(H){const j=i.inputSources;for(let ne=0;ne<x.length;ne++)v.set(j[ne],x[ne]);for(let ne=0;ne<H.removed.length;ne++){const ee=H.removed[ne],oe=v.get(ee);oe&&(oe.dispatchEvent({type:"disconnected",data:ee}),v.delete(ee))}for(let ne=0;ne<H.added.length;ne++){const ee=H.added[ne],oe=v.get(ee);oe&&oe.dispatchEvent({type:"connected",data:ee})}}const C=new V,R=new V;function L(H,j,ne){C.setFromMatrixPosition(j.matrixWorld),R.setFromMatrixPosition(ne.matrixWorld);const ee=C.distanceTo(R),oe=j.projectionMatrix.elements,ue=ne.projectionMatrix.elements,Q=oe[14]/(oe[10]-1),_e=oe[14]/(oe[10]+1),ye=(oe[9]+1)/oe[5],pe=(oe[9]-1)/oe[5],Ee=(oe[8]-1)/oe[0],$e=(ue[8]+1)/ue[0],ie=Q*Ee,de=Q*$e,ge=ee/(-Ee+$e),ke=ge*-Ee;j.matrixWorld.decompose(H.position,H.quaternion,H.scale),H.translateX(ke),H.translateZ(ge),H.matrixWorld.compose(H.position,H.quaternion,H.scale),H.matrixWorldInverse.copy(H.matrixWorld).invert();const be=Q+ge,ze=_e+ge,Be=ie-ke,nt=de+(ee-ke),it=ye*_e/ze*be,B=pe*_e/ze*be;H.projectionMatrix.makePerspective(Be,nt,it,B,be,ze)}function $(H,j){j===null?H.matrixWorld.copy(H.matrix):H.matrixWorld.multiplyMatrices(j.matrixWorld,H.matrix),H.matrixWorldInverse.copy(H.matrixWorld).invert()}this.updateCamera=function(H){if(i===null)return;_.near=w.near=b.near=H.near,_.far=w.far=b.far=H.far,(I!==_.near||N!==_.far)&&(i.updateRenderState({depthNear:_.near,depthFar:_.far}),I=_.near,N=_.far);const j=H.parent,ne=_.cameras;$(_,j);for(let oe=0;oe<ne.length;oe++)$(ne[oe],j);_.matrixWorld.decompose(_.position,_.quaternion,_.scale),H.position.copy(_.position),H.quaternion.copy(_.quaternion),H.scale.copy(_.scale),H.matrix.copy(_.matrix),H.matrixWorld.copy(_.matrixWorld);const ee=H.children;for(let oe=0,ue=ee.length;oe<ue;oe++)ee[oe].updateMatrixWorld(!0);ne.length===2?L(_,b,w):_.projectionMatrix.copy(b.projectionMatrix)},this.getCamera=function(){return _},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function(H){h!==null&&(h.fixedFoveation=H),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=H)};let O=null;function G(H,j){if(c=j.getViewerPose(o),f=j,c!==null){const ee=c.views;d!==null&&(e.setRenderTargetFramebuffer(m,d.framebuffer),e.setRenderTarget(m));let oe=!1;ee.length!==_.cameras.length&&(_.cameras.length=0,oe=!0);for(let ue=0;ue<ee.length;ue++){const Q=ee[ue];let _e=null;if(d!==null)_e=d.getViewport(Q);else{const pe=u.getViewSubImage(h,Q);_e=pe.viewport,ue===0&&(e.setRenderTargetTextures(m,pe.colorTexture,h.ignoreDepthValues?void 0:pe.depthStencilTexture),e.setRenderTarget(m))}const ye=S[ue];ye.matrix.fromArray(Q.transform.matrix),ye.projectionMatrix.fromArray(Q.projectionMatrix),ye.viewport.set(_e.x,_e.y,_e.width,_e.height),ue===0&&_.matrix.copy(ye.matrix),oe===!0&&_.cameras.push(ye)}}const ne=i.inputSources;for(let ee=0;ee<x.length;ee++){const oe=x[ee],ue=ne[ee];oe.update(ue,j,o)}O&&O(H,j),f=null}const Z=new mC;Z.setAnimationLoop(G),this.setAnimationLoop=function(H){O=H},this.dispose=function(){}}}function iO(n){function e(m,x){m.fogColor.value.copy(x.color),x.isFog?(m.fogNear.value=x.near,m.fogFar.value=x.far):x.isFogExp2&&(m.fogDensity.value=x.density)}function t(m,x,v,b,w){x.isMeshBasicMaterial?s(m,x):x.isMeshLambertMaterial?(s(m,x),l(m,x)):x.isMeshToonMaterial?(s(m,x),u(m,x)):x.isMeshPhongMaterial?(s(m,x),c(m,x)):x.isMeshStandardMaterial?(s(m,x),x.isMeshPhysicalMaterial?d(m,x,w):h(m,x)):x.isMeshMatcapMaterial?(s(m,x),p(m,x)):x.isMeshDepthMaterial?(s(m,x),f(m,x)):x.isMeshDistanceMaterial?(s(m,x),g(m,x)):x.isMeshNormalMaterial?(s(m,x),y(m,x)):x.isLineBasicMaterial?(i(m,x),x.isLineDashedMaterial&&r(m,x)):x.isPointsMaterial?o(m,x,v,b):x.isSpriteMaterial?a(m,x):x.isShadowMaterial?(m.color.value.copy(x.color),m.opacity.value=x.opacity):x.isShaderMaterial&&(x.uniformsNeedUpdate=!1)}function s(m,x){m.opacity.value=x.opacity,x.color&&m.diffuse.value.copy(x.color),x.emissive&&m.emissive.value.copy(x.emissive).multiplyScalar(x.emissiveIntensity),x.map&&(m.map.value=x.map),x.alphaMap&&(m.alphaMap.value=x.alphaMap),x.specularMap&&(m.specularMap.value=x.specularMap),x.alphaTest>0&&(m.alphaTest.value=x.alphaTest);const v=n.get(x).envMap;v&&(m.envMap.value=v,m.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=x.reflectivity,m.ior.value=x.ior,m.refractionRatio.value=x.refractionRatio),x.lightMap&&(m.lightMap.value=x.lightMap,m.lightMapIntensity.value=x.lightMapIntensity),x.aoMap&&(m.aoMap.value=x.aoMap,m.aoMapIntensity.value=x.aoMapIntensity);let b;x.map?b=x.map:x.specularMap?b=x.specularMap:x.displacementMap?b=x.displacementMap:x.normalMap?b=x.normalMap:x.bumpMap?b=x.bumpMap:x.roughnessMap?b=x.roughnessMap:x.metalnessMap?b=x.metalnessMap:x.alphaMap?b=x.alphaMap:x.emissiveMap?b=x.emissiveMap:x.clearcoatMap?b=x.clearcoatMap:x.clearcoatNormalMap?b=x.clearcoatNormalMap:x.clearcoatRoughnessMap?b=x.clearcoatRoughnessMap:x.specularIntensityMap?b=x.specularIntensityMap:x.specularColorMap?b=x.specularColorMap:x.transmissionMap?b=x.transmissionMap:x.thicknessMap?b=x.thicknessMap:x.sheenColorMap?b=x.sheenColorMap:x.sheenRoughnessMap&&(b=x.sheenRoughnessMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),m.uvTransform.value.copy(b.matrix));let w;x.aoMap?w=x.aoMap:x.lightMap&&(w=x.lightMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),m.uv2Transform.value.copy(w.matrix))}function i(m,x){m.diffuse.value.copy(x.color),m.opacity.value=x.opacity}function r(m,x){m.dashSize.value=x.dashSize,m.totalSize.value=x.dashSize+x.gapSize,m.scale.value=x.scale}function o(m,x,v,b){m.diffuse.value.copy(x.color),m.opacity.value=x.opacity,m.size.value=x.size*v,m.scale.value=b*.5,x.map&&(m.map.value=x.map),x.alphaMap&&(m.alphaMap.value=x.alphaMap),x.alphaTest>0&&(m.alphaTest.value=x.alphaTest);let w;x.map?w=x.map:x.alphaMap&&(w=x.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),m.uvTransform.value.copy(w.matrix))}function a(m,x){m.diffuse.value.copy(x.color),m.opacity.value=x.opacity,m.rotation.value=x.rotation,x.map&&(m.map.value=x.map),x.alphaMap&&(m.alphaMap.value=x.alphaMap),x.alphaTest>0&&(m.alphaTest.value=x.alphaTest);let v;x.map?v=x.map:x.alphaMap&&(v=x.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),m.uvTransform.value.copy(v.matrix))}function l(m,x){x.emissiveMap&&(m.emissiveMap.value=x.emissiveMap)}function c(m,x){m.specular.value.copy(x.specular),m.shininess.value=Math.max(x.shininess,1e-4),x.emissiveMap&&(m.emissiveMap.value=x.emissiveMap),x.bumpMap&&(m.bumpMap.value=x.bumpMap,m.bumpScale.value=x.bumpScale,x.side===En&&(m.bumpScale.value*=-1)),x.normalMap&&(m.normalMap.value=x.normalMap,m.normalScale.value.copy(x.normalScale),x.side===En&&m.normalScale.value.negate()),x.displacementMap&&(m.displacementMap.value=x.displacementMap,m.displacementScale.value=x.displacementScale,m.displacementBias.value=x.displacementBias)}function u(m,x){x.gradientMap&&(m.gradientMap.value=x.gradientMap),x.emissiveMap&&(m.emissiveMap.value=x.emissiveMap),x.bumpMap&&(m.bumpMap.value=x.bumpMap,m.bumpScale.value=x.bumpScale,x.side===En&&(m.bumpScale.value*=-1)),x.normalMap&&(m.normalMap.value=x.normalMap,m.normalScale.value.copy(x.normalScale),x.side===En&&m.normalScale.value.negate()),x.displacementMap&&(m.displacementMap.value=x.displacementMap,m.displacementScale.value=x.displacementScale,m.displacementBias.value=x.displacementBias)}function h(m,x){m.roughness.value=x.roughness,m.metalness.value=x.metalness,x.roughnessMap&&(m.roughnessMap.value=x.roughnessMap),x.metalnessMap&&(m.metalnessMap.value=x.metalnessMap),x.emissiveMap&&(m.emissiveMap.value=x.emissiveMap),x.bumpMap&&(m.bumpMap.value=x.bumpMap,m.bumpScale.value=x.bumpScale,x.side===En&&(m.bumpScale.value*=-1)),x.normalMap&&(m.normalMap.value=x.normalMap,m.normalScale.value.copy(x.normalScale),x.side===En&&m.normalScale.value.negate()),x.displacementMap&&(m.displacementMap.value=x.displacementMap,m.displacementScale.value=x.displacementScale,m.displacementBias.value=x.displacementBias),n.get(x).envMap&&(m.envMapIntensity.value=x.envMapIntensity)}function d(m,x,v){h(m,x),m.ior.value=x.ior,x.sheen>0&&(m.sheenColor.value.copy(x.sheenColor).multiplyScalar(x.sheen),m.sheenRoughness.value=x.sheenRoughness,x.sheenColorMap&&(m.sheenColorMap.value=x.sheenColorMap),x.sheenRoughnessMap&&(m.sheenRoughnessMap.value=x.sheenRoughnessMap)),x.clearcoat>0&&(m.clearcoat.value=x.clearcoat,m.clearcoatRoughness.value=x.clearcoatRoughness,x.clearcoatMap&&(m.clearcoatMap.value=x.clearcoatMap),x.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=x.clearcoatRoughnessMap),x.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(x.clearcoatNormalScale),m.clearcoatNormalMap.value=x.clearcoatNormalMap,x.side===En&&m.clearcoatNormalScale.value.negate())),x.transmission>0&&(m.transmission.value=x.transmission,m.transmissionSamplerMap.value=v.texture,m.transmissionSamplerSize.value.set(v.width,v.height),x.transmissionMap&&(m.transmissionMap.value=x.transmissionMap),m.thickness.value=x.thickness,x.thicknessMap&&(m.thicknessMap.value=x.thicknessMap),m.attenuationDistance.value=x.attenuationDistance,m.attenuationColor.value.copy(x.attenuationColor)),m.specularIntensity.value=x.specularIntensity,m.specularColor.value.copy(x.specularColor),x.specularIntensityMap&&(m.specularIntensityMap.value=x.specularIntensityMap),x.specularColorMap&&(m.specularColorMap.value=x.specularColorMap)}function p(m,x){x.matcap&&(m.matcap.value=x.matcap),x.bumpMap&&(m.bumpMap.value=x.bumpMap,m.bumpScale.value=x.bumpScale,x.side===En&&(m.bumpScale.value*=-1)),x.normalMap&&(m.normalMap.value=x.normalMap,m.normalScale.value.copy(x.normalScale),x.side===En&&m.normalScale.value.negate()),x.displacementMap&&(m.displacementMap.value=x.displacementMap,m.displacementScale.value=x.displacementScale,m.displacementBias.value=x.displacementBias)}function f(m,x){x.displacementMap&&(m.displacementMap.value=x.displacementMap,m.displacementScale.value=x.displacementScale,m.displacementBias.value=x.displacementBias)}function g(m,x){x.displacementMap&&(m.displacementMap.value=x.displacementMap,m.displacementScale.value=x.displacementScale,m.displacementBias.value=x.displacementBias),m.referencePosition.value.copy(x.referencePosition),m.nearDistance.value=x.nearDistance,m.farDistance.value=x.farDistance}function y(m,x){x.bumpMap&&(m.bumpMap.value=x.bumpMap,m.bumpScale.value=x.bumpScale,x.side===En&&(m.bumpScale.value*=-1)),x.normalMap&&(m.normalMap.value=x.normalMap,m.normalScale.value.copy(x.normalScale),x.side===En&&m.normalScale.value.negate()),x.displacementMap&&(m.displacementMap.value=x.displacementMap,m.displacementScale.value=x.displacementScale,m.displacementBias.value=x.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:t}}function rO(){const n=Vp("canvas");return n.style.display="block",n}function Dt(n={}){const e=n.canvas!==void 0?n.canvas:rO(),t=n.context!==void 0?n.context:null,s=n.alpha!==void 0?n.alpha:!1,i=n.depth!==void 0?n.depth:!0,r=n.stencil!==void 0?n.stencil:!0,o=n.antialias!==void 0?n.antialias:!1,a=n.premultipliedAlpha!==void 0?n.premultipliedAlpha:!0,l=n.preserveDrawingBuffer!==void 0?n.preserveDrawingBuffer:!1,c=n.powerPreference!==void 0?n.powerPreference:"default",u=n.failIfMajorPerformanceCaveat!==void 0?n.failIfMajorPerformanceCaveat:!1;let h=null,d=null;const p=[],f=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=yi,this.physicallyCorrectLights=!1,this.toneMapping=Yr,this.toneMappingExposure=1;const g=this;let y=!1,m=0,x=0,v=null,b=-1,w=null;const S=new Vt,_=new Vt;let I=null,N=e.width,k=e.height,M=1,T=null,C=null;const R=new Vt(0,0,N,k),L=new Vt(0,0,N,k);let $=!1;const O=[],G=new Wp;let Z=!1,H=!1,j=null;const ne=new Qe,ee=new V,oe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ue(){return v===null?M:1}let Q=t;function _e(P,re){for(let he=0;he<P.length;he++){const le=P[he],xe=e.getContext(le,re);if(xe!==null)return xe}return null}try{const P={alpha:s,depth:i,stencil:r,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${c0}`),e.addEventListener("webglcontextlost",He,!1),e.addEventListener("webglcontextrestored",Ve,!1),Q===null){const re=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&re.shift(),Q=_e(re,P),Q===null)throw _e(re)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Q.getShaderPrecisionFormat===void 0&&(Q.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let ye,pe,Ee,$e,ie,de,ge,ke,be,ze,Be,nt,it,B,F,fe,we,Ne,Se,qe,We,W,z;function Ce(){ye=new TP(Q),pe=new yP(Q,ye,n),ye.init(pe),W=new tO(Q,ye,pe),Ee=new Q3(Q,ye,pe),O[0]=1029,$e=new MP,ie=new U3,de=new eO(Q,ye,Ee,ie,pe,W,$e),ge=new vP(g),ke=new CP(g),be=new UD(Q,pe),z=new gP(Q,ye,be,pe),ze=new IP(Q,be,$e,z),Be=new RP(Q,ze,be,$e),Se=new AP(Q,pe,de),fe=new bP(ie),nt=new V3(g,ge,ke,ye,pe,z,fe),it=new iO(ie),B=new G3,F=new Y3(ye,pe),Ne=new mP(g,ge,Ee,Be,a),we=new kC(g,Be,pe),qe=new xP(Q,ye,$e,pe),We=new EP(Q,ye,$e,pe),$e.programs=nt.programs,g.capabilities=pe,g.extensions=ye,g.properties=ie,g.renderLists=B,g.shadowMap=we,g.state=Ee,g.info=$e}Ce();const Te=new sO(g,Q);this.xr=Te,this.getContext=function(){return Q},this.getContextAttributes=function(){return Q.getContextAttributes()},this.forceContextLoss=function(){const P=ye.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=ye.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return M},this.setPixelRatio=function(P){P!==void 0&&(M=P,this.setSize(N,k,!1))},this.getSize=function(P){return P.set(N,k)},this.setSize=function(P,re,he){if(Te.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}N=P,k=re,e.width=Math.floor(P*M),e.height=Math.floor(re*M),he!==!1&&(e.style.width=P+"px",e.style.height=re+"px"),this.setViewport(0,0,P,re)},this.getDrawingBufferSize=function(P){return P.set(N*M,k*M).floor()},this.setDrawingBufferSize=function(P,re,he){N=P,k=re,M=he,e.width=Math.floor(P*he),e.height=Math.floor(re*he),this.setViewport(0,0,P,re)},this.getCurrentViewport=function(P){return P.copy(S)},this.getViewport=function(P){return P.copy(R)},this.setViewport=function(P,re,he,le){P.isVector4?R.set(P.x,P.y,P.z,P.w):R.set(P,re,he,le),Ee.viewport(S.copy(R).multiplyScalar(M).floor())},this.getScissor=function(P){return P.copy(L)},this.setScissor=function(P,re,he,le){P.isVector4?L.set(P.x,P.y,P.z,P.w):L.set(P,re,he,le),Ee.scissor(_.copy(L).multiplyScalar(M).floor())},this.getScissorTest=function(){return $},this.setScissorTest=function(P){Ee.setScissorTest($=P)},this.setOpaqueSort=function(P){T=P},this.setTransparentSort=function(P){C=P},this.getClearColor=function(P){return P.copy(Ne.getClearColor())},this.setClearColor=function(){Ne.setClearColor.apply(Ne,arguments)},this.getClearAlpha=function(){return Ne.getClearAlpha()},this.setClearAlpha=function(){Ne.setClearAlpha.apply(Ne,arguments)},this.clear=function(P,re,he){let le=0;(P===void 0||P)&&(le|=16384),(re===void 0||re)&&(le|=256),(he===void 0||he)&&(le|=1024),Q.clear(le)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",He,!1),e.removeEventListener("webglcontextrestored",Ve,!1),B.dispose(),F.dispose(),ie.dispose(),ge.dispose(),ke.dispose(),Be.dispose(),z.dispose(),nt.dispose(),Te.dispose(),Te.removeEventListener("sessionstart",Ei),Te.removeEventListener("sessionend",Mi),j&&(j.dispose(),j=null),Io.stop()};function He(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function Ve(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;const P=$e.autoReset,re=we.enabled,he=we.autoUpdate,le=we.needsUpdate,xe=we.type;Ce(),$e.autoReset=P,we.enabled=re,we.autoUpdate=he,we.needsUpdate=le,we.type=xe}function rt(P){const re=P.target;re.removeEventListener("dispose",rt),De(re)}function De(P){et(P),ie.remove(P)}function et(P){const re=ie.get(P).programs;re!==void 0&&(re.forEach(function(he){nt.releaseProgram(he)}),P.isShaderMaterial&&nt.releaseShaderCache(P))}this.renderBufferDirect=function(P,re,he,le,xe,ot){re===null&&(re=oe);const ct=xe.isMesh&&xe.matrixWorld.determinant()<0,mt=iR(P,re,he,le,xe);Ee.setMaterial(le,ct);let at=he.index;const Ct=he.attributes.position;if(at===null){if(Ct===void 0||Ct.count===0)return}else if(at.count===0)return;let gt=1;le.wireframe===!0&&(at=ze.getWireframeAttribute(he),gt=2),z.setup(xe,le,mt,he,at);let St,on=qe;at!==null&&(St=be.get(at),on=We,on.setIndex(St));const Eo=at!==null?at.count:Ct.count,Aa=he.drawRange.start*gt,Mt=he.drawRange.count*gt,ki=ot!==null?ot.start*gt:0,In=ot!==null?ot.count*gt:1/0,Ni=Math.max(Aa,ki),Gh=Math.min(Eo,Aa+Mt,ki+In)-1,Ai=Math.max(0,Gh-Ni+1);if(Ai!==0){if(xe.isMesh)le.wireframe===!0?(Ee.setLineWidth(le.wireframeLinewidth*ue()),on.setMode(1)):on.setMode(4);else if(xe.isLine){let or=le.linewidth;or===void 0&&(or=1),Ee.setLineWidth(or*ue()),xe.isLineSegments?on.setMode(1):xe.isLineLoop?on.setMode(2):on.setMode(3)}else xe.isPoints?on.setMode(0):xe.isSprite&&on.setMode(4);if(xe.isInstancedMesh)on.renderInstances(Ni,Ai,xe.count);else if(he.isInstancedBufferGeometry){const or=Math.min(he.instanceCount,he._maxInstanceCount);on.renderInstances(Ni,Ai,or)}else on.render(Ni,Ai)}},this.compile=function(P,re){d=F.get(P),d.init(),f.push(d),P.traverseVisible(function(he){he.isLight&&he.layers.test(re.layers)&&(d.pushLight(he),he.castShadow&&d.pushShadow(he))}),d.setupLights(g.physicallyCorrectLights),P.traverse(function(he){const le=he.material;if(le)if(Array.isArray(le))for(let xe=0;xe<le.length;xe++){const ot=le[xe];Fm(ot,P,he)}else Fm(le,P,he)}),f.pop(),d=null};let yt=null;function Lt(P){yt&&yt(P)}function Ei(){Io.stop()}function Mi(){Io.start()}const Io=new mC;Io.setAnimationLoop(Lt),typeof window<"u"&&Io.setContext(window),this.setAnimationLoop=function(P){yt=P,Te.setAnimationLoop(P),P===null?Io.stop():Io.start()},Te.addEventListener("sessionstart",Ei),Te.addEventListener("sessionend",Mi),this.render=function(P,re){if(re!==void 0&&re.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(y===!0)return;P.autoUpdate===!0&&P.updateMatrixWorld(),re.parent===null&&re.updateMatrixWorld(),Te.enabled===!0&&Te.isPresenting===!0&&(Te.cameraAutoUpdate===!0&&Te.updateCamera(re),re=Te.getCamera()),P.isScene===!0&&P.onBeforeRender(g,P,re,v),d=F.get(P,f.length),d.init(),f.push(d),ne.multiplyMatrices(re.projectionMatrix,re.matrixWorldInverse),G.setFromProjectionMatrix(ne),H=this.localClippingEnabled,Z=fe.init(this.clippingPlanes,H,re),h=B.get(P,p.length),h.init(),p.push(h),Bv(P,re,0,g.sortObjects),h.finish(),g.sortObjects===!0&&h.sort(T,C),Z===!0&&fe.beginShadows();const he=d.state.shadowsArray;if(we.render(he,P,re),Z===!0&&fe.endShadows(),this.info.autoReset===!0&&this.info.reset(),Ne.render(h,P),d.setupLights(g.physicallyCorrectLights),re.isArrayCamera){const le=re.cameras;for(let xe=0,ot=le.length;xe<ot;xe++){const ct=le[xe];Vv(h,P,ct,ct.viewport)}}else Vv(h,P,re);v!==null&&(de.updateMultisampleRenderTarget(v),de.updateRenderTargetMipmap(v)),P.isScene===!0&&P.onAfterRender(g,P,re),Ee.buffers.depth.setTest(!0),Ee.buffers.depth.setMask(!0),Ee.buffers.color.setMask(!0),Ee.setPolygonOffset(!1),z.resetDefaultState(),b=-1,w=null,f.pop(),f.length>0?d=f[f.length-1]:d=null,p.pop(),p.length>0?h=p[p.length-1]:h=null};function Bv(P,re,he,le){if(P.visible===!1)return;if(P.layers.test(re.layers)){if(P.isGroup)he=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(re);else if(P.isLight)d.pushLight(P),P.castShadow&&d.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||G.intersectsSprite(P)){le&&ee.setFromMatrixPosition(P.matrixWorld).applyMatrix4(ne);const ct=Be.update(P),mt=P.material;mt.visible&&h.push(P,ct,mt,he,ee.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(P.isSkinnedMesh&&P.skeleton.frame!==$e.render.frame&&(P.skeleton.update(),P.skeleton.frame=$e.render.frame),!P.frustumCulled||G.intersectsObject(P))){le&&ee.setFromMatrixPosition(P.matrixWorld).applyMatrix4(ne);const ct=Be.update(P),mt=P.material;if(Array.isArray(mt)){const at=ct.groups;for(let Ct=0,gt=at.length;Ct<gt;Ct++){const St=at[Ct],on=mt[St.materialIndex];on&&on.visible&&h.push(P,ct,on,he,ee.z,St)}}else mt.visible&&h.push(P,ct,mt,he,ee.z,null)}}const ot=P.children;for(let ct=0,mt=ot.length;ct<mt;ct++)Bv(ot[ct],re,he,le)}function Vv(P,re,he,le){const xe=P.opaque,ot=P.transmissive,ct=P.transparent;d.setupLightsView(he),ot.length>0&&nR(xe,re,he),le&&Ee.viewport(S.copy(le)),xe.length>0&&Wh(xe,re,he),ot.length>0&&Wh(ot,re,he),ct.length>0&&Wh(ct,re,he)}function nR(P,re,he){if(j===null){const ct=o===!0&&pe.isWebGL2===!0?d0:Js;j=new ct(1024,1024,{generateMipmaps:!0,type:W.convert(Ho)!==null?Ho:yr,minFilter:Bp,magFilter:Mn,wrapS:Ds,wrapT:Ds,useRenderToTexture:ye.has("WEBGL_multisampled_render_to_texture")})}const le=g.getRenderTarget();g.setRenderTarget(j),g.clear();const xe=g.toneMapping;g.toneMapping=Yr,Wh(P,re,he),g.toneMapping=xe,de.updateMultisampleRenderTarget(j),de.updateRenderTargetMipmap(j),g.setRenderTarget(le)}function Wh(P,re,he){const le=re.isScene===!0?re.overrideMaterial:null;for(let xe=0,ot=P.length;xe<ot;xe++){const ct=P[xe],mt=ct.object,at=ct.geometry,Ct=le===null?ct.material:le,gt=ct.group;mt.layers.test(he.layers)&&sR(mt,re,he,at,Ct,gt)}}function sR(P,re,he,le,xe,ot){P.onBeforeRender(g,re,he,le,xe,ot),P.modelViewMatrix.multiplyMatrices(he.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),xe.onBeforeRender(g,re,he,le,P,ot),xe.transparent===!0&&xe.side===Sr?(xe.side=En,xe.needsUpdate=!0,g.renderBufferDirect(he,re,le,xe,P,ot),xe.side=wl,xe.needsUpdate=!0,g.renderBufferDirect(he,re,le,xe,P,ot),xe.side=Sr):g.renderBufferDirect(he,re,le,xe,P,ot),P.onAfterRender(g,re,he,le,xe,ot)}function Fm(P,re,he){re.isScene!==!0&&(re=oe);const le=ie.get(P),xe=d.state.lights,ot=d.state.shadowsArray,ct=xe.state.version,mt=nt.getParameters(P,xe.state,ot,re,he),at=nt.getProgramCacheKey(mt);let Ct=le.programs;le.environment=P.isMeshStandardMaterial?re.environment:null,le.fog=re.fog,le.envMap=(P.isMeshStandardMaterial?ke:ge).get(P.envMap||le.environment),Ct===void 0&&(P.addEventListener("dispose",rt),Ct=new Map,le.programs=Ct);let gt=Ct.get(at);if(gt!==void 0){if(le.currentProgram===gt&&le.lightsStateVersion===ct)return Uv(P,mt),gt}else mt.uniforms=nt.getUniforms(P),P.onBuild(he,mt,g),P.onBeforeCompile(mt,g),gt=nt.acquireProgram(mt,at),Ct.set(at,gt),le.uniforms=mt.uniforms;const St=le.uniforms;(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(St.clippingPlanes=fe.uniform),Uv(P,mt),le.needsLights=oR(P),le.lightsStateVersion=ct,le.needsLights&&(St.ambientLightColor.value=xe.state.ambient,St.lightProbe.value=xe.state.probe,St.directionalLights.value=xe.state.directional,St.directionalLightShadows.value=xe.state.directionalShadow,St.spotLights.value=xe.state.spot,St.spotLightShadows.value=xe.state.spotShadow,St.rectAreaLights.value=xe.state.rectArea,St.ltc_1.value=xe.state.rectAreaLTC1,St.ltc_2.value=xe.state.rectAreaLTC2,St.pointLights.value=xe.state.point,St.pointLightShadows.value=xe.state.pointShadow,St.hemisphereLights.value=xe.state.hemi,St.directionalShadowMap.value=xe.state.directionalShadowMap,St.directionalShadowMatrix.value=xe.state.directionalShadowMatrix,St.spotShadowMap.value=xe.state.spotShadowMap,St.spotShadowMatrix.value=xe.state.spotShadowMatrix,St.pointShadowMap.value=xe.state.pointShadowMap,St.pointShadowMatrix.value=xe.state.pointShadowMatrix);const on=gt.getUniforms(),Eo=Kr.seqWithValue(on.seq,St);return le.currentProgram=gt,le.uniformsList=Eo,gt}function Uv(P,re){const he=ie.get(P);he.outputEncoding=re.outputEncoding,he.instancing=re.instancing,he.skinning=re.skinning,he.morphTargets=re.morphTargets,he.morphNormals=re.morphNormals,he.morphTargetsCount=re.morphTargetsCount,he.numClippingPlanes=re.numClippingPlanes,he.numIntersection=re.numClipIntersection,he.vertexAlphas=re.vertexAlphas,he.vertexTangents=re.vertexTangents,he.toneMapping=re.toneMapping}function iR(P,re,he,le,xe){re.isScene!==!0&&(re=oe),de.resetTextureUnits();const ot=re.fog,ct=le.isMeshStandardMaterial?re.environment:null,mt=v===null?g.outputEncoding:v.texture.encoding,at=(le.isMeshStandardMaterial?ke:ge).get(le.envMap||ct),Ct=le.vertexColors===!0&&!!he.attributes.color&&he.attributes.color.itemSize===4,gt=!!le.normalMap&&!!he.attributes.tangent,St=!!he.morphAttributes.position,on=!!he.morphAttributes.normal,Eo=he.morphAttributes.position?he.morphAttributes.position.length:0,Aa=le.toneMapped?g.toneMapping:Yr,Mt=ie.get(le),ki=d.state.lights;if(Z===!0&&(H===!0||P!==w)){const ii=P===w&&le.id===b;fe.setState(le,P,ii)}let In=!1;le.version===Mt.__version?(Mt.needsLights&&Mt.lightsStateVersion!==ki.state.version||Mt.outputEncoding!==mt||xe.isInstancedMesh&&Mt.instancing===!1||!xe.isInstancedMesh&&Mt.instancing===!0||xe.isSkinnedMesh&&Mt.skinning===!1||!xe.isSkinnedMesh&&Mt.skinning===!0||Mt.envMap!==at||le.fog&&Mt.fog!==ot||Mt.numClippingPlanes!==void 0&&(Mt.numClippingPlanes!==fe.numPlanes||Mt.numIntersection!==fe.numIntersection)||Mt.vertexAlphas!==Ct||Mt.vertexTangents!==gt||Mt.morphTargets!==St||Mt.morphNormals!==on||Mt.toneMapping!==Aa||pe.isWebGL2===!0&&Mt.morphTargetsCount!==Eo)&&(In=!0):(In=!0,Mt.__version=le.version);let Ni=Mt.currentProgram;In===!0&&(Ni=Fm(le,re,xe));let Gh=!1,Ai=!1,or=!1;const Jn=Ni.getUniforms(),mc=Mt.uniforms;if(Ee.useProgram(Ni.program)&&(Gh=!0,Ai=!0,or=!0),le.id!==b&&(b=le.id,Ai=!0),Gh||w!==P){if(Jn.setValue(Q,"projectionMatrix",P.projectionMatrix),pe.logarithmicDepthBuffer&&Jn.setValue(Q,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),w!==P&&(w=P,Ai=!0,or=!0),le.isShaderMaterial||le.isMeshPhongMaterial||le.isMeshToonMaterial||le.isMeshStandardMaterial||le.envMap){const ii=Jn.map.cameraPosition;ii!==void 0&&ii.setValue(Q,ee.setFromMatrixPosition(P.matrixWorld))}(le.isMeshPhongMaterial||le.isMeshToonMaterial||le.isMeshLambertMaterial||le.isMeshBasicMaterial||le.isMeshStandardMaterial||le.isShaderMaterial)&&Jn.setValue(Q,"isOrthographic",P.isOrthographicCamera===!0),(le.isMeshPhongMaterial||le.isMeshToonMaterial||le.isMeshLambertMaterial||le.isMeshBasicMaterial||le.isMeshStandardMaterial||le.isShaderMaterial||le.isShadowMaterial||xe.isSkinnedMesh)&&Jn.setValue(Q,"viewMatrix",P.matrixWorldInverse)}if(xe.isSkinnedMesh){Jn.setOptional(Q,xe,"bindMatrix"),Jn.setOptional(Q,xe,"bindMatrixInverse");const ii=xe.skeleton;ii&&(pe.floatVertexTextures?(ii.boneTexture===null&&ii.computeBoneTexture(),Jn.setValue(Q,"boneTexture",ii.boneTexture,de),Jn.setValue(Q,"boneTextureSize",ii.boneTextureSize)):Jn.setOptional(Q,ii,"boneMatrices"))}return he&&(he.morphAttributes.position!==void 0||he.morphAttributes.normal!==void 0)&&Se.update(xe,he,le,Ni),(Ai||Mt.receiveShadow!==xe.receiveShadow)&&(Mt.receiveShadow=xe.receiveShadow,Jn.setValue(Q,"receiveShadow",xe.receiveShadow)),Ai&&(Jn.setValue(Q,"toneMappingExposure",g.toneMappingExposure),Mt.needsLights&&rR(mc,or),ot&&le.fog&&it.refreshFogUniforms(mc,ot),it.refreshMaterialUniforms(mc,le,M,k,j),Kr.upload(Q,Mt.uniformsList,mc,de)),le.isShaderMaterial&&le.uniformsNeedUpdate===!0&&(Kr.upload(Q,Mt.uniformsList,mc,de),le.uniformsNeedUpdate=!1),le.isSpriteMaterial&&Jn.setValue(Q,"center",xe.center),Jn.setValue(Q,"modelViewMatrix",xe.modelViewMatrix),Jn.setValue(Q,"normalMatrix",xe.normalMatrix),Jn.setValue(Q,"modelMatrix",xe.matrixWorld),Ni}function rR(P,re){P.ambientLightColor.needsUpdate=re,P.lightProbe.needsUpdate=re,P.directionalLights.needsUpdate=re,P.directionalLightShadows.needsUpdate=re,P.pointLights.needsUpdate=re,P.pointLightShadows.needsUpdate=re,P.spotLights.needsUpdate=re,P.spotLightShadows.needsUpdate=re,P.rectAreaLights.needsUpdate=re,P.hemisphereLights.needsUpdate=re}function oR(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return m},this.getActiveMipmapLevel=function(){return x},this.getRenderTarget=function(){return v},this.setRenderTargetTextures=function(P,re,he){ie.get(P.texture).__webglTexture=re,ie.get(P.depthTexture).__webglTexture=he;const le=ie.get(P);le.__hasExternalTextures=!0,le.__hasExternalTextures&&(le.__autoAllocateDepthBuffer=he===void 0,le.__autoAllocateDepthBuffer||P.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),P.useRenderToTexture=!1,P.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(P,re){const he=ie.get(P);he.__webglFramebuffer=re,he.__useDefaultFramebuffer=re===void 0},this.setRenderTarget=function(P,re=0,he=0){v=P,m=re,x=he;let le=!0;if(P){const at=ie.get(P);at.__useDefaultFramebuffer!==void 0?(Ee.bindFramebuffer(36160,null),le=!1):at.__webglFramebuffer===void 0?de.setupRenderTarget(P):at.__hasExternalTextures&&de.rebindTextures(P,ie.get(P.texture).__webglTexture,ie.get(P.depthTexture).__webglTexture)}let xe=null,ot=!1,ct=!1;if(P){const at=P.texture;(at.isDataTexture3D||at.isDataTexture2DArray)&&(ct=!0);const Ct=ie.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(xe=Ct[re],ot=!0):P.useRenderbuffer?xe=ie.get(P).__webglMultisampledFramebuffer:xe=Ct,S.copy(P.viewport),_.copy(P.scissor),I=P.scissorTest}else S.copy(R).multiplyScalar(M).floor(),_.copy(L).multiplyScalar(M).floor(),I=$;if(Ee.bindFramebuffer(36160,xe)&&pe.drawBuffers&&le){let at=!1;if(P)if(P.isWebGLMultipleRenderTargets){const Ct=P.texture;if(O.length!==Ct.length||O[0]!==36064){for(let gt=0,St=Ct.length;gt<St;gt++)O[gt]=36064+gt;O.length=Ct.length,at=!0}}else(O.length!==1||O[0]!==36064)&&(O[0]=36064,O.length=1,at=!0);else(O.length!==1||O[0]!==1029)&&(O[0]=1029,O.length=1,at=!0);at&&(pe.isWebGL2?Q.drawBuffers(O):ye.get("WEBGL_draw_buffers").drawBuffersWEBGL(O))}if(Ee.viewport(S),Ee.scissor(_),Ee.setScissorTest(I),ot){const at=ie.get(P.texture);Q.framebufferTexture2D(36160,36064,34069+re,at.__webglTexture,he)}else if(ct){const at=ie.get(P.texture),Ct=re||0;Q.framebufferTextureLayer(36160,36064,at.__webglTexture,he||0,Ct)}b=-1},this.readRenderTargetPixels=function(P,re,he,le,xe,ot,ct){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let mt=ie.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&ct!==void 0&&(mt=mt[ct]),mt){Ee.bindFramebuffer(36160,mt);try{const at=P.texture,Ct=at.format,gt=at.type;if(Ct!==Pn&&W.convert(Ct)!==Q.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const St=gt===Ho&&(ye.has("EXT_color_buffer_half_float")||pe.isWebGL2&&ye.has("EXT_color_buffer_float"));if(gt!==yr&&W.convert(gt)!==Q.getParameter(35738)&&!(gt===Gr&&(pe.isWebGL2||ye.has("OES_texture_float")||ye.has("WEBGL_color_buffer_float")))&&!St){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Q.checkFramebufferStatus(36160)===36053?re>=0&&re<=P.width-le&&he>=0&&he<=P.height-xe&&Q.readPixels(re,he,le,xe,W.convert(Ct),W.convert(gt),ot):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const at=v!==null?ie.get(v).__webglFramebuffer:null;Ee.bindFramebuffer(36160,at)}}},this.copyFramebufferToTexture=function(P,re,he=0){if(re.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const le=Math.pow(2,-he),xe=Math.floor(re.image.width*le),ot=Math.floor(re.image.height*le);de.setTexture2D(re,0),Q.copyTexSubImage2D(3553,he,0,0,P.x,P.y,xe,ot),Ee.unbindTexture()},this.copyTextureToTexture=function(P,re,he,le=0){const xe=re.image.width,ot=re.image.height,ct=W.convert(he.format),mt=W.convert(he.type);de.setTexture2D(he,0),Q.pixelStorei(37440,he.flipY),Q.pixelStorei(37441,he.premultiplyAlpha),Q.pixelStorei(3317,he.unpackAlignment),re.isDataTexture?Q.texSubImage2D(3553,le,P.x,P.y,xe,ot,ct,mt,re.image.data):re.isCompressedTexture?Q.compressedTexSubImage2D(3553,le,P.x,P.y,re.mipmaps[0].width,re.mipmaps[0].height,ct,re.mipmaps[0].data):Q.texSubImage2D(3553,le,P.x,P.y,ct,mt,re.image),le===0&&he.generateMipmaps&&Q.generateMipmap(3553),Ee.unbindTexture()},this.copyTextureToTexture3D=function(P,re,he,le,xe=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const ot=P.max.x-P.min.x+1,ct=P.max.y-P.min.y+1,mt=P.max.z-P.min.z+1,at=W.convert(le.format),Ct=W.convert(le.type);let gt;if(le.isDataTexture3D)de.setTexture3D(le,0),gt=32879;else if(le.isDataTexture2DArray)de.setTexture2DArray(le,0),gt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Q.pixelStorei(37440,le.flipY),Q.pixelStorei(37441,le.premultiplyAlpha),Q.pixelStorei(3317,le.unpackAlignment);const St=Q.getParameter(3314),on=Q.getParameter(32878),Eo=Q.getParameter(3316),Aa=Q.getParameter(3315),Mt=Q.getParameter(32877),ki=he.isCompressedTexture?he.mipmaps[0]:he.image;Q.pixelStorei(3314,ki.width),Q.pixelStorei(32878,ki.height),Q.pixelStorei(3316,P.min.x),Q.pixelStorei(3315,P.min.y),Q.pixelStorei(32877,P.min.z),he.isDataTexture||he.isDataTexture3D?Q.texSubImage3D(gt,xe,re.x,re.y,re.z,ot,ct,mt,at,Ct,ki.data):he.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Q.compressedTexSubImage3D(gt,xe,re.x,re.y,re.z,ot,ct,mt,at,ki.data)):Q.texSubImage3D(gt,xe,re.x,re.y,re.z,ot,ct,mt,at,Ct,ki),Q.pixelStorei(3314,St),Q.pixelStorei(32878,on),Q.pixelStorei(3316,Eo),Q.pixelStorei(3315,Aa),Q.pixelStorei(32877,Mt),xe===0&&le.generateMipmaps&&Q.generateMipmap(gt),Ee.unbindTexture()},this.initTexture=function(P){de.setTexture2D(P,0),Ee.unbindTexture()},this.resetState=function(){m=0,x=0,v=null,Ee.reset(),z.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Dt.prototype.isWebGLRenderer=!0;class oO extends Dt{}oO.prototype.isWebGL1Renderer=!0;class jp extends Nt{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}jp.prototype.isScene=!0;class vu{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Jc,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Hi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,s){e*=this.stride,s*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[s+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Hi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),s=new this.constructor(t,this.stride);return s.setUsage(this.usage),s}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Hi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}vu.prototype.isInterleavedBuffer=!0;const pn=new V;class Kc{constructor(e,t,s,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=s,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,s=this.data.count;t<s;t++)pn.x=this.getX(t),pn.y=this.getY(t),pn.z=this.getZ(t),pn.applyMatrix4(e),this.setXYZ(t,pn.x,pn.y,pn.z);return this}applyNormalMatrix(e){for(let t=0,s=this.count;t<s;t++)pn.x=this.getX(t),pn.y=this.getY(t),pn.z=this.getZ(t),pn.applyNormalMatrix(e),this.setXYZ(t,pn.x,pn.y,pn.z);return this}transformDirection(e){for(let t=0,s=this.count;t<s;t++)pn.x=this.getX(t),pn.y=this.getY(t),pn.z=this.getZ(t),pn.transformDirection(e),this.setXYZ(t,pn.x,pn.y,pn.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=s,this}setXYZ(e,t,s,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=s,this.data.array[e+2]=i,this}setXYZW(e,t,s,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=s,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let s=0;s<this.count;s++){const i=s*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new $n(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Kc(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let s=0;s<this.count;s++){const i=s*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Kc.prototype.isInterleavedBufferAttribute=!0;class AC extends ls{constructor(e){super(),this.type="SpriteMaterial",this.color=new Xe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}AC.prototype.isSpriteMaterial=!0;let Za;const wc=new V,Ya=new V,Ja=new V,Ka=new Ie,Sc=new Ie,RC=new Qe,dd=new V,_c=new V,pd=new V,s1=new Ie,mg=new Ie,i1=new Ie;class aO extends Nt{constructor(e){if(super(),this.type="Sprite",Za===void 0){Za=new Xt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),s=new vu(t,5);Za.setIndex([0,1,2,0,2,3]),Za.setAttribute("position",new Kc(s,3,0,!1)),Za.setAttribute("uv",new Kc(s,2,3,!1))}this.geometry=Za,this.material=e!==void 0?e:new AC,this.center=new Ie(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ya.setFromMatrixScale(this.matrixWorld),RC.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Ja.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ya.multiplyScalar(-Ja.z);const s=this.material.rotation;let i,r;s!==0&&(r=Math.cos(s),i=Math.sin(s));const o=this.center;fd(dd.set(-.5,-.5,0),Ja,o,Ya,i,r),fd(_c.set(.5,-.5,0),Ja,o,Ya,i,r),fd(pd.set(.5,.5,0),Ja,o,Ya,i,r),s1.set(0,0),mg.set(1,0),i1.set(1,1);let a=e.ray.intersectTriangle(dd,_c,pd,!1,wc);if(a===null&&(fd(_c.set(-.5,.5,0),Ja,o,Ya,i,r),mg.set(0,1),a=e.ray.intersectTriangle(dd,pd,_c,!1,wc),a===null))return;const l=e.ray.origin.distanceTo(wc);l<e.near||l>e.far||t.push({distance:l,point:wc.clone(),uv:Nn.getUV(wc,dd,_c,pd,s1,mg,i1,new Ie),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}aO.prototype.isSprite=!0;function fd(n,e,t,s,i,r){Ka.subVectors(n,t).addScalar(.5).multiply(s),i!==void 0?(Sc.x=r*Ka.x-i*Ka.y,Sc.y=i*Ka.x+r*Ka.y):Sc.copy(Ka),n.copy(e),n.x+=Sc.x,n.y+=Sc.y,n.applyMatrix4(RC)}const r1=new V,o1=new Vt,a1=new Vt,lO=new V,l1=new Qe;class $C extends gn{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Qe,this.bindMatrixInverse=new Qe}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Vt,t=this.geometry.attributes.skinWeight;for(let s=0,i=t.count;s<i;s++){e.x=t.getX(s),e.y=t.getY(s),e.z=t.getZ(s),e.w=t.getW(s);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(s,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const s=this.skeleton,i=this.geometry;o1.fromBufferAttribute(i.attributes.skinIndex,e),a1.fromBufferAttribute(i.attributes.skinWeight,e),r1.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=a1.getComponent(r);if(o!==0){const a=o1.getComponent(r);l1.multiplyMatrices(s.bones[a].matrixWorld,s.boneInverses[a]),t.addScaledVector(lO.copy(r1).applyMatrix4(l1),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}$C.prototype.isSkinnedMesh=!0;class cO extends Nt{constructor(){super(),this.type="Bone"}}cO.prototype.isBone=!0;class uO extends zn{constructor(e=null,t=1,s=1,i,r,o,a,l,c=Mn,u=Mn,h,d){super(null,o,a,l,c,u,i,r,h,d),this.image={data:e,width:t,height:s},this.magFilter=c,this.minFilter=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}uO.prototype.isDataTexture=!0;class rx extends $n{constructor(e,t,s,i=1){typeof s=="number"&&(i=s,s=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,s),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}rx.prototype.isInstancedBufferAttribute=!0;const c1=new Qe,u1=new Qe,md=[],Cc=new gn;class hO extends gn{constructor(e,t,s){super(e,t),this.instanceMatrix=new rx(new Float32Array(s*16),16),this.instanceColor=null,this.count=s,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const s=this.matrixWorld,i=this.count;if(Cc.geometry=this.geometry,Cc.material=this.material,Cc.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,c1),u1.multiplyMatrices(s,c1),Cc.matrixWorld=u1,Cc.raycast(e,md);for(let o=0,a=md.length;o<a;o++){const l=md[o];l.instanceId=r,l.object=this,t.push(l)}md.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new rx(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}hO.prototype.isInstancedMesh=!0;class wu extends ls{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Xe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}wu.prototype.isLineBasicMaterial=!0;const h1=new V,d1=new V,p1=new Qe,gg=new Wl,gd=new Ul;class b0 extends Nt{constructor(e=new Xt,t=new wu){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,s=[0];for(let i=1,r=t.count;i<r;i++)h1.fromBufferAttribute(t,i-1),d1.fromBufferAttribute(t,i),s[i]=s[i-1],s[i]+=h1.distanceTo(d1);e.setAttribute("lineDistance",new tn(s,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const s=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=s.drawRange;if(s.boundingSphere===null&&s.computeBoundingSphere(),gd.copy(s.boundingSphere),gd.applyMatrix4(i),gd.radius+=r,e.ray.intersectsSphere(gd)===!1)return;p1.copy(i).invert(),gg.copy(e.ray).applyMatrix4(p1);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new V,u=new V,h=new V,d=new V,p=this.isLineSegments?2:1;if(s.isBufferGeometry){const f=s.index,y=s.attributes.position;if(f!==null){const m=Math.max(0,o.start),x=Math.min(f.count,o.start+o.count);for(let v=m,b=x-1;v<b;v+=p){const w=f.getX(v),S=f.getX(v+1);if(c.fromBufferAttribute(y,w),u.fromBufferAttribute(y,S),gg.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const I=e.ray.origin.distanceTo(d);I<e.near||I>e.far||t.push({distance:I,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else{const m=Math.max(0,o.start),x=Math.min(y.count,o.start+o.count);for(let v=m,b=x-1;v<b;v+=p){if(c.fromBufferAttribute(y,v),u.fromBufferAttribute(y,v+1),gg.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const S=e.ray.origin.distanceTo(d);S<e.near||S>e.far||t.push({distance:S,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}else s.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,s=Object.keys(t);if(s.length>0){const i=t[s[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}b0.prototype.isLine=!0;const f1=new V,m1=new V;class v0 extends b0{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,s=[];for(let i=0,r=t.count;i<r;i+=2)f1.fromBufferAttribute(t,i),m1.fromBufferAttribute(t,i+1),s[i]=i===0?0:s[i-1],s[i+1]=s[i]+f1.distanceTo(m1);e.setAttribute("lineDistance",new tn(s,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}v0.prototype.isLineSegments=!0;class dO extends b0{constructor(e,t){super(e,t),this.type="LineLoop"}}dO.prototype.isLineLoop=!0;class DC extends ls{constructor(e){super(),this.type="PointsMaterial",this.color=new Xe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}DC.prototype.isPointsMaterial=!0;const g1=new Qe,ox=new Wl,xd=new Ul,yd=new V;class pO extends Nt{constructor(e=new Xt,t=new DC){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const s=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=s.drawRange;if(s.boundingSphere===null&&s.computeBoundingSphere(),xd.copy(s.boundingSphere),xd.applyMatrix4(i),xd.radius+=r,e.ray.intersectsSphere(xd)===!1)return;g1.copy(i).invert(),ox.copy(e.ray).applyMatrix4(g1);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a;if(s.isBufferGeometry){const c=s.index,h=s.attributes.position;if(c!==null){const d=Math.max(0,o.start),p=Math.min(c.count,o.start+o.count);for(let f=d,g=p;f<g;f++){const y=c.getX(f);yd.fromBufferAttribute(h,y),x1(yd,y,l,i,e,t,this)}}else{const d=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);for(let f=d,g=p;f<g;f++)yd.fromBufferAttribute(h,f),x1(yd,f,l,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,s=Object.keys(t);if(s.length>0){const i=t[s[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}pO.prototype.isPoints=!0;function x1(n,e,t,s,i,r,o){const a=ox.distanceSqToPoint(n);if(a<t){const l=new V;ox.closestPointToPoint(n,l),l.applyMatrix4(s);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;r.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}class fO extends zn{constructor(e,t,s,i,r,o,a,l,c){super(e,t,s,i,r,o,a,l,c),this.format=a!==void 0?a:jo,this.minFilter=o!==void 0?o:fs,this.magFilter=r!==void 0?r:fs,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}fO.prototype.isVideoTexture=!0;class mO extends zn{constructor(e,t,s){super({width:e,height:t}),this.format=s,this.magFilter=Mn,this.minFilter=Mn,this.generateMipmaps=!1,this.needsUpdate=!0}}mO.prototype.isFramebufferTexture=!0;class gO extends zn{constructor(e,t,s,i,r,o,a,l,c,u,h,d){super(null,o,a,l,c,u,i,r,h,d),this.image={width:t,height:s},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}gO.prototype.isCompressedTexture=!0;class Xp extends zn{constructor(e,t,s,i,r,o,a,l,c){super(e,t,s,i,r,o,a,l,c),this.needsUpdate=!0}}Xp.prototype.isCanvasTexture=!0;class Ks{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const s=this.getUtoTmapping(e);return this.getPoint(s,t)}getPoints(e=5){const t=[];for(let s=0;s<=e;s++)t.push(this.getPoint(s/e));return t}getSpacedPoints(e=5){const t=[];for(let s=0;s<=e;s++)t.push(this.getPointAt(s/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let s,i=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)s=this.getPoint(o/e),r+=s.distanceTo(i),t.push(r),i=s;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const s=this.getLengths();let i=0;const r=s.length;let o;t?o=t:o=e*s[r-1];let a=0,l=r-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=s[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,s[i]===o)return i/(r-1);const u=s[i],d=s[i+1]-u,p=(o-u)/d;return(i+p)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),l=t||(o.isVector2?new Ie:new V);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const s=this.getUtoTmapping(e);return this.getTangent(s,t)}computeFrenetFrames(e,t){const s=new V,i=[],r=[],o=[],a=new V,l=new Qe;for(let p=0;p<=e;p++){const f=p/e;i[p]=this.getTangentAt(f,new V)}r[0]=new V,o[0]=new V;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=c&&(c=u,s.set(1,0,0)),h<=c&&(c=h,s.set(0,1,0)),d<=c&&s.set(0,0,1),a.crossVectors(i[0],s).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let p=1;p<=e;p++){if(r[p]=r[p-1].clone(),o[p]=o[p-1].clone(),a.crossVectors(i[p-1],i[p]),a.length()>Number.EPSILON){a.normalize();const f=Math.acos(Ss(i[p-1].dot(i[p]),-1,1));r[p].applyMatrix4(l.makeRotationAxis(a,f))}o[p].crossVectors(i[p],r[p])}if(t===!0){let p=Math.acos(Ss(r[0].dot(r[e]),-1,1));p/=e,i[0].dot(a.crossVectors(r[0],r[e]))>0&&(p=-p);for(let f=1;f<=e;f++)r[f].applyMatrix4(l.makeRotationAxis(i[f],p*f)),o[f].crossVectors(i[f],r[f])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class qp extends Ks{constructor(e=0,t=0,s=1,i=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=s,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const s=t||new Ie,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=l-this.aX,p=c-this.aY;l=d*u-p*h+this.aX,c=d*h+p*u+this.aY}return s.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}qp.prototype.isEllipseCurve=!0;class LC extends qp{constructor(e,t,s,i,r,o){super(e,t,s,s,i,r,o),this.type="ArcCurve"}}LC.prototype.isArcCurve=!0;function w0(){let n=0,e=0,t=0,s=0;function i(r,o,a,l){n=r,e=a,t=-3*r+3*o-2*a-l,s=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){i(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,u,h){let d=(o-r)/c-(a-r)/(c+u)+(a-o)/u,p=(a-o)/u-(l-o)/(u+h)+(l-a)/h;d*=u,p*=u,i(o,a,d,p)},calc:function(r){const o=r*r,a=o*r;return n+e*r+t*o+s*a}}}const bd=new V,xg=new w0,yg=new w0,bg=new w0;class FC extends Ks{constructor(e=[],t=!1,s="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=s,this.tension=i}getPoint(e,t=new V){const s=t,i=this.points,r=i.length,o=(r-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%r]:(bd.subVectors(i[0],i[1]).add(i[0]),c=bd);const h=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?u=i[(a+2)%r]:(bd.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=bd),this.curveType==="centripetal"||this.curveType==="chordal"){const p=this.curveType==="chordal"?.5:.25;let f=Math.pow(c.distanceToSquared(h),p),g=Math.pow(h.distanceToSquared(d),p),y=Math.pow(d.distanceToSquared(u),p);g<1e-4&&(g=1),f<1e-4&&(f=g),y<1e-4&&(y=g),xg.initNonuniformCatmullRom(c.x,h.x,d.x,u.x,f,g,y),yg.initNonuniformCatmullRom(c.y,h.y,d.y,u.y,f,g,y),bg.initNonuniformCatmullRom(c.z,h.z,d.z,u.z,f,g,y)}else this.curveType==="catmullrom"&&(xg.initCatmullRom(c.x,h.x,d.x,u.x,this.tension),yg.initCatmullRom(c.y,h.y,d.y,u.y,this.tension),bg.initCatmullRom(c.z,h.z,d.z,u.z,this.tension));return s.set(xg.calc(l),yg.calc(l),bg.calc(l)),s}copy(e){super.copy(e),this.points=[];for(let t=0,s=e.points.length;t<s;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,s=this.points.length;t<s;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,s=e.points.length;t<s;t++){const i=e.points[t];this.points.push(new V().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}FC.prototype.isCatmullRomCurve3=!0;function y1(n,e,t,s,i){const r=(s-e)*.5,o=(i-t)*.5,a=n*n,l=n*a;return(2*t-2*s+r+o)*l+(-3*t+3*s-2*r-o)*a+r*n+t}function xO(n,e){const t=1-n;return t*t*e}function yO(n,e){return 2*(1-n)*n*e}function bO(n,e){return n*n*e}function Uc(n,e,t,s){return xO(n,e)+yO(n,t)+bO(n,s)}function vO(n,e){const t=1-n;return t*t*t*e}function wO(n,e){const t=1-n;return 3*t*t*n*e}function SO(n,e){return 3*(1-n)*n*n*e}function _O(n,e){return n*n*n*e}function Wc(n,e,t,s,i){return vO(n,e)+wO(n,t)+SO(n,s)+_O(n,i)}class S0 extends Ks{constructor(e=new Ie,t=new Ie,s=new Ie,i=new Ie){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=s,this.v3=i}getPoint(e,t=new Ie){const s=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return s.set(Wc(e,i.x,r.x,o.x,a.x),Wc(e,i.y,r.y,o.y,a.y)),s}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}S0.prototype.isCubicBezierCurve=!0;class PC extends Ks{constructor(e=new V,t=new V,s=new V,i=new V){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=s,this.v3=i}getPoint(e,t=new V){const s=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return s.set(Wc(e,i.x,r.x,o.x,a.x),Wc(e,i.y,r.y,o.y,a.y),Wc(e,i.z,r.z,o.z,a.z)),s}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}PC.prototype.isCubicBezierCurve3=!0;class Zp extends Ks{constructor(e=new Ie,t=new Ie){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Ie){const s=t;return e===1?s.copy(this.v2):(s.copy(this.v2).sub(this.v1),s.multiplyScalar(e).add(this.v1)),s}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const s=t||new Ie;return s.copy(this.v2).sub(this.v1).normalize(),s}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Zp.prototype.isLineCurve=!0;class CO extends Ks{constructor(e=new V,t=new V){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new V){const s=t;return e===1?s.copy(this.v2):(s.copy(this.v2).sub(this.v1),s.multiplyScalar(e).add(this.v1)),s}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class _0 extends Ks{constructor(e=new Ie,t=new Ie,s=new Ie){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=s}getPoint(e,t=new Ie){const s=t,i=this.v0,r=this.v1,o=this.v2;return s.set(Uc(e,i.x,r.x,o.x),Uc(e,i.y,r.y,o.y)),s}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}_0.prototype.isQuadraticBezierCurve=!0;class OC extends Ks{constructor(e=new V,t=new V,s=new V){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=s}getPoint(e,t=new V){const s=t,i=this.v0,r=this.v1,o=this.v2;return s.set(Uc(e,i.x,r.x,o.x),Uc(e,i.y,r.y,o.y),Uc(e,i.z,r.z,o.z)),s}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}OC.prototype.isQuadraticBezierCurve3=!0;class C0 extends Ks{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new Ie){const s=t,i=this.points,r=(i.length-1)*e,o=Math.floor(r),a=r-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return s.set(y1(a,l.x,c.x,u.x,h.x),y1(a,l.y,c.y,u.y,h.y)),s}copy(e){super.copy(e),this.points=[];for(let t=0,s=e.points.length;t<s;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,s=this.points.length;t<s;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,s=e.points.length;t<s;t++){const i=e.points[t];this.points.push(new Ie().fromArray(i))}return this}}C0.prototype.isSplineCurve=!0;var zC=Object.freeze({__proto__:null,ArcCurve:LC,CatmullRomCurve3:FC,CubicBezierCurve:S0,CubicBezierCurve3:PC,EllipseCurve:qp,LineCurve:Zp,LineCurve3:CO,QuadraticBezierCurve:_0,QuadraticBezierCurve3:OC,SplineCurve:C0});class TO extends Ks{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Zp(t,e))}getPoint(e,t){const s=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=s){const o=i[r]-s,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let s=0,i=this.curves.length;s<i;s++)t+=this.curves[s].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let s=0;s<=e;s++)t.push(this.getPoint(s/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let s;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o&&o.isEllipseCurve?e*2:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];s&&s.equals(u)||(t.push(u),s=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,s=e.curves.length;t<s;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,s=this.curves.length;t<s;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,s=e.curves.length;t<s;t++){const i=e.curves[t];this.curves.push(new zC[i.type]().fromJSON(i))}return this}}class ax extends TO{constructor(e){super(),this.type="Path",this.currentPoint=new Ie,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,s=e.length;t<s;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const s=new Zp(this.currentPoint.clone(),new Ie(e,t));return this.curves.push(s),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,s,i){const r=new _0(this.currentPoint.clone(),new Ie(e,t),new Ie(s,i));return this.curves.push(r),this.currentPoint.set(s,i),this}bezierCurveTo(e,t,s,i,r,o){const a=new S0(this.currentPoint.clone(),new Ie(e,t),new Ie(s,i),new Ie(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),s=new C0(t);return this.curves.push(s),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,s,i,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,s,i,r,o),this}absarc(e,t,s,i,r,o){return this.absellipse(e,t,s,s,i,r,o),this}ellipse(e,t,s,i,r,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,s,i,r,o,a,l),this}absellipse(e,t,s,i,r,o,a,l){const c=new qp(e,t,s,i,r,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Su extends ax{constructor(e){super(e),this.uuid=Hi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let s=0,i=this.holes.length;s<i;s++)t[s]=this.holes[s].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,s=e.holes.length;t<s;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,s=this.holes.length;t<s;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,s=e.holes.length;t<s;t++){const i=e.holes[t];this.holes.push(new ax().fromJSON(i))}return this}}const IO={triangulate:function(n,e,t=2){const s=e&&e.length,i=s?e[0]*t:n.length;let r=BC(n,0,i,t,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,u,h,d,p;if(s&&(r=AO(n,e,r,t)),n.length>80*t){a=c=n[0],l=u=n[1];for(let f=t;f<i;f+=t)h=n[f],d=n[f+1],h<a&&(a=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);p=Math.max(c-a,u-l),p=p!==0?1/p:0}return Qc(r,o,t,a,l,p),o}};function BC(n,e,t,s,i){let r,o;if(i===UO(n,e,t,s)>0)for(r=e;r<t;r+=s)o=b1(r,n[r],n[r+1],o);else for(r=t-s;r>=e;r-=s)o=b1(r,n[r],n[r+1],o);return o&&Yp(o,o.next)&&(tu(o),o=o.next),o}function ro(n,e){if(!n)return n;e||(e=n);let t=n,s;do if(s=!1,!t.steiner&&(Yp(t,t.next)||rn(t.prev,t,t.next)===0)){if(tu(t),t=e=t.prev,t===t.next)break;s=!0}else t=t.next;while(s||t!==e);return e}function Qc(n,e,t,s,i,r,o){if(!n)return;!o&&r&&FO(n,s,i,r);let a=n,l,c;for(;n.prev!==n.next;){if(l=n.prev,c=n.next,r?MO(n,s,i,r):EO(n)){e.push(l.i/t),e.push(n.i/t),e.push(c.i/t),tu(n),n=c.next,a=c.next;continue}if(n=c,n===a){o?o===1?(n=kO(ro(n),e,t),Qc(n,e,t,s,i,r,2)):o===2&&NO(n,e,t,s,i,r):Qc(ro(n),e,t,s,i,r,1);break}}}function EO(n){const e=n.prev,t=n,s=n.next;if(rn(e,t,s)>=0)return!1;let i=n.next.next;for(;i!==n.prev;){if(ll(e.x,e.y,t.x,t.y,s.x,s.y,i.x,i.y)&&rn(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function MO(n,e,t,s){const i=n.prev,r=n,o=n.next;if(rn(i,r,o)>=0)return!1;const a=i.x<r.x?i.x<o.x?i.x:o.x:r.x<o.x?r.x:o.x,l=i.y<r.y?i.y<o.y?i.y:o.y:r.y<o.y?r.y:o.y,c=i.x>r.x?i.x>o.x?i.x:o.x:r.x>o.x?r.x:o.x,u=i.y>r.y?i.y>o.y?i.y:o.y:r.y>o.y?r.y:o.y,h=lx(a,l,e,t,s),d=lx(c,u,e,t,s);let p=n.prevZ,f=n.nextZ;for(;p&&p.z>=h&&f&&f.z<=d;){if(p!==n.prev&&p!==n.next&&ll(i.x,i.y,r.x,r.y,o.x,o.y,p.x,p.y)&&rn(p.prev,p,p.next)>=0||(p=p.prevZ,f!==n.prev&&f!==n.next&&ll(i.x,i.y,r.x,r.y,o.x,o.y,f.x,f.y)&&rn(f.prev,f,f.next)>=0))return!1;f=f.nextZ}for(;p&&p.z>=h;){if(p!==n.prev&&p!==n.next&&ll(i.x,i.y,r.x,r.y,o.x,o.y,p.x,p.y)&&rn(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==n.prev&&f!==n.next&&ll(i.x,i.y,r.x,r.y,o.x,o.y,f.x,f.y)&&rn(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function kO(n,e,t){let s=n;do{const i=s.prev,r=s.next.next;!Yp(i,r)&&VC(i,s,s.next,r)&&eu(i,r)&&eu(r,i)&&(e.push(i.i/t),e.push(s.i/t),e.push(r.i/t),tu(s),tu(s.next),s=n=r),s=s.next}while(s!==n);return ro(s)}function NO(n,e,t,s,i,r){let o=n;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&zO(o,a)){let l=UC(o,a);o=ro(o,o.next),l=ro(l,l.next),Qc(o,e,t,s,i,r),Qc(l,e,t,s,i,r);return}a=a.next}o=o.next}while(o!==n)}function AO(n,e,t,s){const i=[];let r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*s,l=r<o-1?e[r+1]*s:n.length,c=BC(n,a,l,s,!1),c===c.next&&(c.steiner=!0),i.push(OO(c));for(i.sort(RO),r=0;r<i.length;r++)$O(i[r],t),t=ro(t,t.next);return t}function RO(n,e){return n.x-e.x}function $O(n,e){if(e=DO(n,e),e){const t=UC(e,n);ro(e,e.next),ro(t,t.next)}}function DO(n,e){let t=e;const s=n.x,i=n.y;let r=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const d=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=s&&d>r){if(r=d,d===s){if(i===t.y)return t;if(i===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(s===r)return o;const a=o,l=o.x,c=o.y;let u=1/0,h;t=o;do s>=t.x&&t.x>=l&&s!==t.x&&ll(i<c?s:r,i,l,c,i<c?r:s,i,t.x,t.y)&&(h=Math.abs(i-t.y)/(s-t.x),eu(t,n)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&LO(o,t)))&&(o=t,u=h)),t=t.next;while(t!==a);return o}function LO(n,e){return rn(n.prev,n,e.prev)<0&&rn(e.next,n,n.next)<0}function FO(n,e,t,s){let i=n;do i.z===null&&(i.z=lx(i.x,i.y,e,t,s)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==n);i.prevZ.nextZ=null,i.prevZ=null,PO(i)}function PO(n){let e,t,s,i,r,o,a,l,c=1;do{for(t=n,n=null,r=null,o=0;t;){for(o++,s=t,a=0,e=0;e<c&&(a++,s=s.nextZ,!!s);e++);for(l=c;a>0||l>0&&s;)a!==0&&(l===0||!s||t.z<=s.z)?(i=t,t=t.nextZ,a--):(i=s,s=s.nextZ,l--),r?r.nextZ=i:n=i,i.prevZ=r,r=i;t=s}r.nextZ=null,c*=2}while(o>1);return n}function lx(n,e,t,s,i){return n=32767*(n-t)*i,e=32767*(e-s)*i,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1}function OO(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function ll(n,e,t,s,i,r,o,a){return(i-o)*(e-a)-(n-o)*(r-a)>=0&&(n-o)*(s-a)-(t-o)*(e-a)>=0&&(t-o)*(r-a)-(i-o)*(s-a)>=0}function zO(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!BO(n,e)&&(eu(n,e)&&eu(e,n)&&VO(n,e)&&(rn(n.prev,n,e.prev)||rn(n,e.prev,e))||Yp(n,e)&&rn(n.prev,n,n.next)>0&&rn(e.prev,e,e.next)>0)}function rn(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function Yp(n,e){return n.x===e.x&&n.y===e.y}function VC(n,e,t,s){const i=wd(rn(n,e,t)),r=wd(rn(n,e,s)),o=wd(rn(t,s,n)),a=wd(rn(t,s,e));return!!(i!==r&&o!==a||i===0&&vd(n,t,e)||r===0&&vd(n,s,e)||o===0&&vd(t,n,s)||a===0&&vd(t,e,s))}function vd(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function wd(n){return n>0?1:n<0?-1:0}function BO(n,e){let t=n;do{if(t.i!==n.i&&t.next.i!==n.i&&t.i!==e.i&&t.next.i!==e.i&&VC(t,t.next,n,e))return!0;t=t.next}while(t!==n);return!1}function eu(n,e){return rn(n.prev,n,n.next)<0?rn(n,e,n.next)>=0&&rn(n,n.prev,e)>=0:rn(n,e,n.prev)<0||rn(n,n.next,e)<0}function VO(n,e){let t=n,s=!1;const i=(n.x+e.x)/2,r=(n.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(s=!s),t=t.next;while(t!==n);return s}function UC(n,e){const t=new cx(n.i,n.x,n.y),s=new cx(e.i,e.x,e.y),i=n.next,r=e.prev;return n.next=e,e.prev=n,t.next=i,i.prev=t,s.next=t,t.prev=s,r.next=s,s.prev=r,s}function b1(n,e,t,s){const i=new cx(n,e,t);return s?(i.next=s.next,i.prev=s,s.next.prev=i,s.next=i):(i.prev=i,i.next=i),i}function tu(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function cx(n,e,t){this.i=n,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function UO(n,e,t,s){let i=0;for(let r=e,o=t-s;r<t;r+=s)i+=(n[o]-n[r])*(n[r+1]+n[o+1]),o=r;return i}class Qr{static area(e){const t=e.length;let s=0;for(let i=t-1,r=0;r<t;i=r++)s+=e[i].x*e[r].y-e[r].x*e[i].y;return s*.5}static isClockWise(e){return Qr.area(e)<0}static triangulateShape(e,t){const s=[],i=[],r=[];v1(e),w1(s,e);let o=e.length;t.forEach(v1);for(let l=0;l<t.length;l++)i.push(o),o+=t[l].length,w1(s,t[l]);const a=IO.triangulate(s,i);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function v1(n){const e=n.length;e>2&&n[e-1].equals(n[0])&&n.pop()}function w1(n,e){for(let t=0;t<e.length;t++)n.push(e[t].x),n.push(e[t].y)}class Xl extends Xt{constructor(e=new Su([new Ie(.5,.5),new Ie(-.5,.5),new Ie(-.5,-.5),new Ie(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const s=this,i=[],r=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new tn(i,3)),this.setAttribute("uv",new tn(r,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1;let h=t.depth!==void 0?t.depth:1,d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,p=t.bevelThickness!==void 0?t.bevelThickness:.2,f=t.bevelSize!==void 0?t.bevelSize:p-.1,g=t.bevelOffset!==void 0?t.bevelOffset:0,y=t.bevelSegments!==void 0?t.bevelSegments:3;const m=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:WO;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let v,b=!1,w,S,_,I;m&&(v=m.getSpacedPoints(u),b=!0,d=!1,w=m.computeFrenetFrames(u,!1),S=new V,_=new V,I=new V),d||(y=0,p=0,f=0,g=0);const N=a.extractPoints(c);let k=N.shape;const M=N.holes;if(!Qr.isClockWise(k)){k=k.reverse();for(let ie=0,de=M.length;ie<de;ie++){const ge=M[ie];Qr.isClockWise(ge)&&(M[ie]=ge.reverse())}}const C=Qr.triangulateShape(k,M),R=k;for(let ie=0,de=M.length;ie<de;ie++){const ge=M[ie];k=k.concat(ge)}function L(ie,de,ge){return de||console.error("THREE.ExtrudeGeometry: vec does not exist"),de.clone().multiplyScalar(ge).add(ie)}const $=k.length,O=C.length;function G(ie,de,ge){let ke,be,ze;const Be=ie.x-de.x,nt=ie.y-de.y,it=ge.x-ie.x,B=ge.y-ie.y,F=Be*Be+nt*nt,fe=Be*B-nt*it;if(Math.abs(fe)>Number.EPSILON){const we=Math.sqrt(F),Ne=Math.sqrt(it*it+B*B),Se=de.x-nt/we,qe=de.y+Be/we,We=ge.x-B/Ne,W=ge.y+it/Ne,z=((We-Se)*B-(W-qe)*it)/(Be*B-nt*it);ke=Se+Be*z-ie.x,be=qe+nt*z-ie.y;const Ce=ke*ke+be*be;if(Ce<=2)return new Ie(ke,be);ze=Math.sqrt(Ce/2)}else{let we=!1;Be>Number.EPSILON?it>Number.EPSILON&&(we=!0):Be<-Number.EPSILON?it<-Number.EPSILON&&(we=!0):Math.sign(nt)===Math.sign(B)&&(we=!0),we?(ke=-nt,be=Be,ze=Math.sqrt(F)):(ke=Be,be=nt,ze=Math.sqrt(F/2))}return new Ie(ke/ze,be/ze)}const Z=[];for(let ie=0,de=R.length,ge=de-1,ke=ie+1;ie<de;ie++,ge++,ke++)ge===de&&(ge=0),ke===de&&(ke=0),Z[ie]=G(R[ie],R[ge],R[ke]);const H=[];let j,ne=Z.concat();for(let ie=0,de=M.length;ie<de;ie++){const ge=M[ie];j=[];for(let ke=0,be=ge.length,ze=be-1,Be=ke+1;ke<be;ke++,ze++,Be++)ze===be&&(ze=0),Be===be&&(Be=0),j[ke]=G(ge[ke],ge[ze],ge[Be]);H.push(j),ne=ne.concat(j)}for(let ie=0;ie<y;ie++){const de=ie/y,ge=p*Math.cos(de*Math.PI/2),ke=f*Math.sin(de*Math.PI/2)+g;for(let be=0,ze=R.length;be<ze;be++){const Be=L(R[be],Z[be],ke);_e(Be.x,Be.y,-ge)}for(let be=0,ze=M.length;be<ze;be++){const Be=M[be];j=H[be];for(let nt=0,it=Be.length;nt<it;nt++){const B=L(Be[nt],j[nt],ke);_e(B.x,B.y,-ge)}}}const ee=f+g;for(let ie=0;ie<$;ie++){const de=d?L(k[ie],ne[ie],ee):k[ie];b?(_.copy(w.normals[0]).multiplyScalar(de.x),S.copy(w.binormals[0]).multiplyScalar(de.y),I.copy(v[0]).add(_).add(S),_e(I.x,I.y,I.z)):_e(de.x,de.y,0)}for(let ie=1;ie<=u;ie++)for(let de=0;de<$;de++){const ge=d?L(k[de],ne[de],ee):k[de];b?(_.copy(w.normals[ie]).multiplyScalar(ge.x),S.copy(w.binormals[ie]).multiplyScalar(ge.y),I.copy(v[ie]).add(_).add(S),_e(I.x,I.y,I.z)):_e(ge.x,ge.y,h/u*ie)}for(let ie=y-1;ie>=0;ie--){const de=ie/y,ge=p*Math.cos(de*Math.PI/2),ke=f*Math.sin(de*Math.PI/2)+g;for(let be=0,ze=R.length;be<ze;be++){const Be=L(R[be],Z[be],ke);_e(Be.x,Be.y,h+ge)}for(let be=0,ze=M.length;be<ze;be++){const Be=M[be];j=H[be];for(let nt=0,it=Be.length;nt<it;nt++){const B=L(Be[nt],j[nt],ke);b?_e(B.x,B.y+v[u-1].y,v[u-1].x+ge):_e(B.x,B.y,h+ge)}}}oe(),ue();function oe(){const ie=i.length/3;if(d){let de=0,ge=$*de;for(let ke=0;ke<O;ke++){const be=C[ke];ye(be[2]+ge,be[1]+ge,be[0]+ge)}de=u+y*2,ge=$*de;for(let ke=0;ke<O;ke++){const be=C[ke];ye(be[0]+ge,be[1]+ge,be[2]+ge)}}else{for(let de=0;de<O;de++){const ge=C[de];ye(ge[2],ge[1],ge[0])}for(let de=0;de<O;de++){const ge=C[de];ye(ge[0]+$*u,ge[1]+$*u,ge[2]+$*u)}}s.addGroup(ie,i.length/3-ie,0)}function ue(){const ie=i.length/3;let de=0;Q(R,de),de+=R.length;for(let ge=0,ke=M.length;ge<ke;ge++){const be=M[ge];Q(be,de),de+=be.length}s.addGroup(ie,i.length/3-ie,1)}function Q(ie,de){let ge=ie.length;for(;--ge>=0;){const ke=ge;let be=ge-1;be<0&&(be=ie.length-1);for(let ze=0,Be=u+y*2;ze<Be;ze++){const nt=$*ze,it=$*(ze+1),B=de+ke+nt,F=de+be+nt,fe=de+be+it,we=de+ke+it;pe(B,F,fe,we)}}}function _e(ie,de,ge){l.push(ie),l.push(de),l.push(ge)}function ye(ie,de,ge){Ee(ie),Ee(de),Ee(ge);const ke=i.length/3,be=x.generateTopUV(s,i,ke-3,ke-2,ke-1);$e(be[0]),$e(be[1]),$e(be[2])}function pe(ie,de,ge,ke){Ee(ie),Ee(de),Ee(ke),Ee(de),Ee(ge),Ee(ke);const be=i.length/3,ze=x.generateSideWallUV(s,i,be-6,be-3,be-2,be-1);$e(ze[0]),$e(ze[1]),$e(ze[3]),$e(ze[1]),$e(ze[2]),$e(ze[3])}function Ee(ie){i.push(l[ie*3+0]),i.push(l[ie*3+1]),i.push(l[ie*3+2])}function $e(ie){r.push(ie.x),r.push(ie.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,s=this.parameters.options;return GO(t,s,e)}static fromJSON(e,t){const s=[];for(let r=0,o=e.shapes.length;r<o;r++){const a=t[e.shapes[r]];s.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new zC[i.type]().fromJSON(i)),new Xl(s,e.options)}}const WO={generateTopUV:function(n,e,t,s,i){const r=e[t*3],o=e[t*3+1],a=e[s*3],l=e[s*3+1],c=e[i*3],u=e[i*3+1];return[new Ie(r,o),new Ie(a,l),new Ie(c,u)]},generateSideWallUV:function(n,e,t,s,i,r){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[s*3],u=e[s*3+1],h=e[s*3+2],d=e[i*3],p=e[i*3+1],f=e[i*3+2],g=e[r*3],y=e[r*3+1],m=e[r*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new Ie(o,1-l),new Ie(c,1-h),new Ie(d,1-f),new Ie(g,1-m)]:[new Ie(a,1-l),new Ie(u,1-h),new Ie(p,1-f),new Ie(y,1-m)]}};function GO(n,e,t){if(t.shapes=[],Array.isArray(n))for(let s=0,i=n.length;s<i;s++){const r=n[s];t.shapes.push(r.uuid)}else t.shapes.push(n.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class T0 extends Xt{constructor(e=.5,t=1,s=8,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:s,phiSegments:i,thetaStart:r,thetaLength:o},s=Math.max(3,s),i=Math.max(1,i);const a=[],l=[],c=[],u=[];let h=e;const d=(t-e)/i,p=new V,f=new Ie;for(let g=0;g<=i;g++){for(let y=0;y<=s;y++){const m=r+y/s*o;p.x=h*Math.cos(m),p.y=h*Math.sin(m),l.push(p.x,p.y,p.z),c.push(0,0,1),f.x=(p.x/t+1)/2,f.y=(p.y/t+1)/2,u.push(f.x,f.y)}h+=d}for(let g=0;g<i;g++){const y=g*(s+1);for(let m=0;m<s;m++){const x=m+y,v=x,b=x+s+1,w=x+s+2,S=x+1;a.push(v,b,S),a.push(b,w,S)}}this.setIndex(a),this.setAttribute("position",new tn(l,3)),this.setAttribute("normal",new tn(c,3)),this.setAttribute("uv",new tn(u,2))}static fromJSON(e){return new T0(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class I0 extends Xt{constructor(e=new Su([new Ie(0,.5),new Ie(-.5,-.5),new Ie(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const s=[],i=[],r=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(s),this.setAttribute("position",new tn(i,3)),this.setAttribute("normal",new tn(r,3)),this.setAttribute("uv",new tn(o,2));function c(u){const h=i.length/3,d=u.extractPoints(t);let p=d.shape;const f=d.holes;Qr.isClockWise(p)===!1&&(p=p.reverse());for(let y=0,m=f.length;y<m;y++){const x=f[y];Qr.isClockWise(x)===!0&&(f[y]=x.reverse())}const g=Qr.triangulateShape(p,f);for(let y=0,m=f.length;y<m;y++){const x=f[y];p=p.concat(x)}for(let y=0,m=p.length;y<m;y++){const x=p[y];i.push(x.x,x.y,0),r.push(0,0,1),o.push(x.x,x.y)}for(let y=0,m=g.length;y<m;y++){const x=g[y],v=x[0]+h,b=x[1]+h,w=x[2]+h;s.push(v,b,w),l+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return HO(t,e)}static fromJSON(e,t){const s=[];for(let i=0,r=e.shapes.length;i<r;i++){const o=t[e.shapes[i]];s.push(o)}return new I0(s,e.curveSegments)}}function HO(n,e){if(e.shapes=[],Array.isArray(n))for(let t=0,s=n.length;t<s;t++){const i=n[t];e.shapes.push(i.uuid)}else e.shapes.push(n.uuid);return e}class E0 extends Xt{constructor(e=1,t=32,s=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:s,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),s=Math.max(2,Math.floor(s));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new V,d=new V,p=[],f=[],g=[],y=[];for(let m=0;m<=s;m++){const x=[],v=m/s;let b=0;m==0&&o==0?b=.5/t:m==s&&l==Math.PI&&(b=-.5/t);for(let w=0;w<=t;w++){const S=w/t;h.x=-e*Math.cos(i+S*r)*Math.sin(o+v*a),h.y=e*Math.cos(o+v*a),h.z=e*Math.sin(i+S*r)*Math.sin(o+v*a),f.push(h.x,h.y,h.z),d.copy(h).normalize(),g.push(d.x,d.y,d.z),y.push(S+b,1-v),x.push(c++)}u.push(x)}for(let m=0;m<s;m++)for(let x=0;x<t;x++){const v=u[m][x+1],b=u[m][x],w=u[m+1][x],S=u[m+1][x+1];(m!==0||o>0)&&p.push(v,b,S),(m!==s-1||l<Math.PI)&&p.push(b,w,S)}this.setIndex(p),this.setAttribute("position",new tn(f,3)),this.setAttribute("normal",new tn(g,3)),this.setAttribute("uv",new tn(y,2))}static fromJSON(e){return new E0(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class jO extends ls{constructor(e){super(),this.type="ShadowMaterial",this.color=new Xe(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}jO.prototype.isShadowMaterial=!0;class WC extends ls{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Xe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Bl,this.normalScale=new Ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}WC.prototype.isMeshStandardMaterial=!0;class XO extends WC{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Ie(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ss(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new Xe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Xe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Xe(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}XO.prototype.isMeshPhysicalMaterial=!0;class qO extends ls{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Xe(16777215),this.specular=new Xe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Bl,this.normalScale=new Ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Op,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}qO.prototype.isMeshPhongMaterial=!0;class ZO extends ls{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Xe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Bl,this.normalScale=new Ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}ZO.prototype.isMeshToonMaterial=!0;class YO extends ls{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Bl,this.normalScale=new Ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}YO.prototype.isMeshNormalMaterial=!0;class Jp extends ls{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Xe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Op,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Jp.prototype.isMeshLambertMaterial=!0;class JO extends ls{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Xe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Bl,this.normalScale=new Ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}JO.prototype.isMeshMatcapMaterial=!0;class KO extends wu{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}KO.prototype.isLineDashedMaterial=!0;const Jt={arraySlice:function(n,e,t){return Jt.isTypedArray(n)?new n.constructor(n.subarray(e,t!==void 0?t:n.length)):n.slice(e,t)},convertArray:function(n,e,t){return!n||!t&&n.constructor===e?n:typeof e.BYTES_PER_ELEMENT=="number"?new e(n):Array.prototype.slice.call(n)},isTypedArray:function(n){return ArrayBuffer.isView(n)&&!(n instanceof DataView)},getKeyframeOrder:function(n){function e(i,r){return n[i]-n[r]}const t=n.length,s=new Array(t);for(let i=0;i!==t;++i)s[i]=i;return s.sort(e),s},sortedArray:function(n,e,t){const s=n.length,i=new n.constructor(s);for(let r=0,o=0;o!==s;++r){const a=t[r]*e;for(let l=0;l!==e;++l)i[o++]=n[a+l]}return i},flattenJSON:function(n,e,t,s){let i=1,r=n[0];for(;r!==void 0&&r[s]===void 0;)r=n[i++];if(r===void 0)return;let o=r[s];if(o!==void 0)if(Array.isArray(o))do o=r[s],o!==void 0&&(e.push(r.time),t.push.apply(t,o)),r=n[i++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[s],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=n[i++];while(r!==void 0);else do o=r[s],o!==void 0&&(e.push(r.time),t.push(o)),r=n[i++];while(r!==void 0)},subclip:function(n,e,t,s,i=30){const r=n.clone();r.name=e;const o=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],u=c.getValueSize(),h=[],d=[];for(let p=0;p<c.times.length;++p){const f=c.times[p]*i;if(!(f<t||f>=s)){h.push(c.times[p]);for(let g=0;g<u;++g)d.push(c.values[p*u+g])}}h.length!==0&&(c.times=Jt.convertArray(h,c.times.constructor),c.values=Jt.convertArray(d,c.values.constructor),o.push(c))}r.tracks=o;let a=1/0;for(let l=0;l<r.tracks.length;++l)a>r.tracks[l].times[0]&&(a=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*a);return r.resetDuration(),r},makeClipAdditive:function(n,e=0,t=n,s=30){s<=0&&(s=30);const i=t.tracks.length,r=e/s;for(let o=0;o<i;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=n.tracks.find(function(m){return m.name===a.name&&m.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);const f=a.times.length-1;let g;if(r<=a.times[0]){const m=u,x=h-u;g=Jt.arraySlice(a.values,m,x)}else if(r>=a.times[f]){const m=f*h+u,x=m+h-u;g=Jt.arraySlice(a.values,m,x)}else{const m=a.createInterpolant(),x=u,v=h-u;m.evaluate(r),g=Jt.arraySlice(m.resultBuffer,x,v)}l==="quaternion"&&new is().fromArray(g).normalize().conjugate().toArray(g);const y=c.times.length;for(let m=0;m<y;++m){const x=m*p+d;if(l==="quaternion")is.multiplyQuaternionsFlat(c.values,x,g,0,c.values,x);else{const v=p-d*2;for(let b=0;b<v;++b)c.values[x+b]-=g[b]}}}return n.blendMode=lC,n}};class oo{constructor(e,t,s,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(s),this.sampleValues=t,this.valueSize=s,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let s=this._cachedIndex,i=t[s],r=t[s-1];e:{t:{let o;n:{s:if(!(e<i)){for(let a=s+2;;){if(i===void 0){if(e<r)break s;return s=t.length,this._cachedIndex=s,this.afterEnd_(s-1,e,r)}if(s===a)break;if(r=i,i=t[++s],e<i)break t}o=t.length;break n}if(!(e>=r)){const a=t[1];e<a&&(s=2,r=a);for(let l=s-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(s===l)break;if(i=r,r=t[--s-1],e>=r)break t}o=s,s=0;break n}break e}for(;s<o;){const a=s+o>>>1;e<t[a]?o=a:s=a+1}if(i=t[s],r=t[s-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return s=t.length,this._cachedIndex=s,this.afterEnd_(s-1,r,e)}this._cachedIndex=s,this.intervalChanged_(s,r,i)}return this.interpolate_(s,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,s=this.sampleValues,i=this.valueSize,r=e*i;for(let o=0;o!==i;++o)t[o]=s[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}oo.prototype.beforeStart_=oo.prototype.copySampleValue_;oo.prototype.afterEnd_=oo.prototype.copySampleValue_;class QO extends oo{constructor(e,t,s,i){super(e,t,s,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:rl,endingEnd:rl}}intervalChanged_(e,t,s){const i=this.parameterPositions;let r=e-2,o=e+1,a=i[r],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case ol:r=e,a=2*t-s;break;case qd:r=i.length-2,a=t+i[r]-i[r+1];break;default:r=e,a=s}if(l===void 0)switch(this.getSettings_().endingEnd){case ol:o=e,l=2*s-t;break;case qd:o=1,l=s+i[1]-i[0];break;default:o=e-1,l=t}const c=(s-t)*.5,u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-s),this._offsetPrev=r*u,this._offsetNext=o*u}interpolate_(e,t,s,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,d=this._weightPrev,p=this._weightNext,f=(s-t)/(i-t),g=f*f,y=g*f,m=-d*y+2*d*g-d*f,x=(1+d)*y+(-1.5-2*d)*g+(-.5+d)*f+1,v=(-1-p)*y+(1.5+p)*g+.5*f,b=p*y-p*g;for(let w=0;w!==a;++w)r[w]=m*o[u+w]+x*o[c+w]+v*o[l+w]+b*o[h+w];return r}}class GC extends oo{constructor(e,t,s,i){super(e,t,s,i)}interpolate_(e,t,s,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(s-t)/(i-t),h=1-u;for(let d=0;d!==a;++d)r[d]=o[c+d]*h+o[l+d]*u;return r}}class ez extends oo{constructor(e,t,s,i){super(e,t,s,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class ir{constructor(e,t,s,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Jt.convertArray(t,this.TimeBufferType),this.values=Jt.convertArray(s,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let s;if(t.toJSON!==this.toJSON)s=t.toJSON(e);else{s={name:e.name,times:Jt.convertArray(e.times,Array),values:Jt.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(s.interpolation=i)}return s.type=e.ValueTypeName,s}InterpolantFactoryMethodDiscrete(e){return new ez(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new GC(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new QO(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case jd:t=this.InterpolantFactoryMethodDiscrete;break;case Xd:t=this.InterpolantFactoryMethodLinear;break;case zm:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const s="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(s);return console.warn("THREE.KeyframeTrack:",s),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return jd;case this.InterpolantFactoryMethodLinear:return Xd;case this.InterpolantFactoryMethodSmooth:return zm}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let s=0,i=t.length;s!==i;++s)t[s]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let s=0,i=t.length;s!==i;++s)t[s]*=e}return this}trim(e,t){const s=this.times,i=s.length;let r=0,o=i-1;for(;r!==i&&s[r]<e;)++r;for(;o!==-1&&s[o]>t;)--o;if(++o,r!==0||o!==i){r>=o&&(o=Math.max(o,1),r=o-1);const a=this.getValueSize();this.times=Jt.arraySlice(s,r,o),this.values=Jt.arraySlice(this.values,r*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const s=this.times,i=this.values,r=s.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==r;a++){const l=s[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(i!==void 0&&Jt.isTypedArray(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=Jt.arraySlice(this.times),t=Jt.arraySlice(this.values),s=this.getValueSize(),i=this.getInterpolation()===zm,r=e.length-1;let o=1;for(let a=1;a<r;++a){let l=!1;const c=e[a],u=e[a+1];if(c!==u&&(a!==1||c!==e[0]))if(i)l=!0;else{const h=a*s,d=h-s,p=h+s;for(let f=0;f!==s;++f){const g=t[h+f];if(g!==t[d+f]||g!==t[p+f]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*s,d=o*s;for(let p=0;p!==s;++p)t[d+p]=t[h+p]}++o}}if(r>0){e[o]=e[r];for(let a=r*s,l=o*s,c=0;c!==s;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=Jt.arraySlice(e,0,o),this.values=Jt.arraySlice(t,0,o*s)):(this.times=e,this.values=t),this}clone(){const e=Jt.arraySlice(this.times,0),t=Jt.arraySlice(this.values,0),s=this.constructor,i=new s(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}ir.prototype.TimeBufferType=Float32Array;ir.prototype.ValueBufferType=Float32Array;ir.prototype.DefaultInterpolation=Xd;class ql extends ir{}ql.prototype.ValueTypeName="bool";ql.prototype.ValueBufferType=Array;ql.prototype.DefaultInterpolation=jd;ql.prototype.InterpolantFactoryMethodLinear=void 0;ql.prototype.InterpolantFactoryMethodSmooth=void 0;class HC extends ir{}HC.prototype.ValueTypeName="color";class Jd extends ir{}Jd.prototype.ValueTypeName="number";class tz extends oo{constructor(e,t,s,i){super(e,t,s,i)}interpolate_(e,t,s,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(s-t)/(i-t);let c=e*a;for(let u=c+a;c!==u;c+=4)is.slerpFlat(r,0,o,c-a,o,c,l);return r}}class _u extends ir{InterpolantFactoryMethodLinear(e){return new tz(this.times,this.values,this.getValueSize(),e)}}_u.prototype.ValueTypeName="quaternion";_u.prototype.DefaultInterpolation=Xd;_u.prototype.InterpolantFactoryMethodSmooth=void 0;class Zl extends ir{}Zl.prototype.ValueTypeName="string";Zl.prototype.ValueBufferType=Array;Zl.prototype.DefaultInterpolation=jd;Zl.prototype.InterpolantFactoryMethodLinear=void 0;Zl.prototype.InterpolantFactoryMethodSmooth=void 0;class Kd extends ir{}Kd.prototype.ValueTypeName="vector";class S1{constructor(e,t=-1,s,i=h0){this.name=e,this.tracks=s,this.duration=t,this.blendMode=i,this.uuid=Hi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],s=e.tracks,i=1/(e.fps||1);for(let o=0,a=s.length;o!==a;++o)t.push(sz(s[o]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],s=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=s.length;r!==o;++r)t.push(ir.toJSON(s[r]));return i}static CreateFromMorphTargetSequence(e,t,s,i){const r=t.length,o=[];for(let a=0;a<r;a++){let l=[],c=[];l.push((a+r-1)%r,a,(a+1)%r),c.push(0,1,0);const u=Jt.getKeyframeOrder(l);l=Jt.sortedArray(l,1,u),c=Jt.sortedArray(c,1,u),!i&&l[0]===0&&(l.push(r),c.push(c[0])),o.push(new Jd(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/s))}return new this(e,-1,o)}static findByName(e,t){let s=e;if(!Array.isArray(e)){const i=e;s=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<s.length;i++)if(s[i].name===t)return s[i];return null}static CreateClipsFromMorphTargetSequences(e,t,s){const i={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(r);if(u&&u.length>1){const h=u[1];let d=i[h];d||(i[h]=d=[]),d.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,s));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const s=function(h,d,p,f,g){if(p.length!==0){const y=[],m=[];Jt.flattenJSON(p,y,m,f),y.length!==0&&g.push(new h(d,y,m))}},i=[],r=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const d=c[h].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const p={};let f;for(f=0;f<d.length;f++)if(d[f].morphTargets)for(let g=0;g<d[f].morphTargets.length;g++)p[d[f].morphTargets[g]]=-1;for(const g in p){const y=[],m=[];for(let x=0;x!==d[f].morphTargets.length;++x){const v=d[f];y.push(v.time),m.push(v.morphTarget===g?1:0)}i.push(new Jd(".morphTargetInfluence["+g+"]",y,m))}l=p.length*o}else{const p=".bones["+t[h].name+"]";s(Kd,p+".position",d,"pos",i),s(_u,p+".quaternion",d,"rot",i),s(Kd,p+".scale",d,"scl",i)}}return i.length===0?null:new this(r,l,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let s=0,i=e.length;s!==i;++s){const r=this.tracks[s];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function nz(n){switch(n.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Jd;case"vector":case"vector2":case"vector3":case"vector4":return Kd;case"color":return HC;case"quaternion":return _u;case"bool":case"boolean":return ql;case"string":return Zl}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+n)}function sz(n){if(n.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=nz(n.type);if(n.times===void 0){const t=[],s=[];Jt.flattenJSON(n.keys,t,s,"value"),n.times=t,n.values=s}return e.parse!==void 0?e.parse(n):new e(n.name,n.times,n.values,n.interpolation)}const Cl={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class iz{constructor(e,t,s){const i=this;let r=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=s,this.itemStart=function(u){a++,r===!1&&i.onStart!==void 0&&i.onStart(u,o,a),r=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=c.length;h<d;h+=2){const p=c[h],f=c[h+1];if(p.global&&(p.lastIndex=0),p.test(u))return f}return null}}}const rz=new iz;class mo{constructor(e){this.manager=e!==void 0?e:rz,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const s=this;return new Promise(function(i,r){s.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const dr={};class oz extends mo{constructor(e){super(e)}load(e,t,s,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Cl.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(dr[e]!==void 0){dr[e].push({onLoad:t,onProgress:s,onError:i});return}dr[e]=[],dr[e].push({onLoad:t,onProgress:s,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});fetch(o).then(a=>{if(a.status===200||a.status===0){if(a.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||a.body.getReader===void 0)return a;const l=dr[e],c=a.body.getReader(),u=a.headers.get("Content-Length"),h=u?parseInt(u):0,d=h!==0;let p=0;const f=new ReadableStream({start(g){y();function y(){c.read().then(({done:m,value:x})=>{if(m)g.close();else{p+=x.byteLength;const v=new ProgressEvent("progress",{lengthComputable:d,loaded:p,total:h});for(let b=0,w=l.length;b<w;b++){const S=l[b];S.onProgress&&S.onProgress(v)}g.enqueue(x),y()}})}}});return new Response(f)}else throw Error(`fetch for "${a.url}" responded with ${a.status}: ${a.statusText}`)}).then(a=>{switch(this.responseType){case"arraybuffer":return a.arrayBuffer();case"blob":return a.blob();case"document":return a.text().then(l=>new DOMParser().parseFromString(l,this.mimeType));case"json":return a.json();default:return a.text()}}).then(a=>{Cl.add(e,a);const l=dr[e];delete dr[e];for(let c=0,u=l.length;c<u;c++){const h=l[c];h.onLoad&&h.onLoad(a)}}).catch(a=>{const l=dr[e];if(l===void 0)throw this.manager.itemError(e),a;delete dr[e];for(let c=0,u=l.length;c<u;c++){const h=l[c];h.onError&&h.onError(a)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class jC extends mo{constructor(e){super(e)}load(e,t,s,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Cl.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a=Vp("img");function l(){u(),Cl.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(h){u(),i&&i(h),r.manager.itemError(e),r.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class az extends mo{constructor(e){super(e)}load(e,t,s,i){const r=new Up,o=new jC(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(u){r.images[c]=u,a++,a===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return r}}class XC extends mo{constructor(e){super(e)}load(e,t,s,i){const r=new zn,o=new jC(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},s,i),r}}class Ki extends Nt{constructor(e,t=1){super(),this.type="Light",this.color=new Xe(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}Ki.prototype.isLight=!0;class lz extends Ki{constructor(e,t,s){super(e,s),this.type="HemisphereLight",this.position.copy(Nt.DefaultUp),this.updateMatrix(),this.groundColor=new Xe(t)}copy(e){return Ki.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}lz.prototype.isHemisphereLight=!0;const _1=new Qe,C1=new V,T1=new V;class M0{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Ie(512,512),this.map=null,this.mapPass=null,this.matrix=new Qe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Wp,this._frameExtents=new Ie(1,1),this._viewportCount=1,this._viewports=[new Vt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,s=this.matrix;C1.setFromMatrixPosition(e.matrixWorld),t.position.copy(C1),T1.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(T1),t.updateMatrixWorld(),_1.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_1),s.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),s.multiply(t.projectionMatrix),s.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class qC extends M0{constructor(){super(new ts(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,s=nx*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(s!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=s,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}qC.prototype.isSpotLightShadow=!0;class cz extends Ki{constructor(e,t,s=0,i=Math.PI/3,r=0,o=1){super(e,t),this.type="SpotLight",this.position.copy(Nt.DefaultUp),this.updateMatrix(),this.target=new Nt,this.distance=s,this.angle=i,this.penumbra=r,this.decay=o,this.shadow=new qC}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}cz.prototype.isSpotLight=!0;const I1=new Qe,Tc=new V,vg=new V;class ZC extends M0{constructor(){super(new ts(90,1,.5,500)),this._frameExtents=new Ie(4,2),this._viewportCount=6,this._viewports=[new Vt(2,1,1,1),new Vt(0,1,1,1),new Vt(3,1,1,1),new Vt(1,1,1,1),new Vt(3,0,1,1),new Vt(1,0,1,1)],this._cubeDirections=[new V(1,0,0),new V(-1,0,0),new V(0,0,1),new V(0,0,-1),new V(0,1,0),new V(0,-1,0)],this._cubeUps=[new V(0,1,0),new V(0,1,0),new V(0,1,0),new V(0,1,0),new V(0,0,1),new V(0,0,-1)]}updateMatrices(e,t=0){const s=this.camera,i=this.matrix,r=e.distance||s.far;r!==s.far&&(s.far=r,s.updateProjectionMatrix()),Tc.setFromMatrixPosition(e.matrixWorld),s.position.copy(Tc),vg.copy(s.position),vg.add(this._cubeDirections[t]),s.up.copy(this._cubeUps[t]),s.lookAt(vg),s.updateMatrixWorld(),i.makeTranslation(-Tc.x,-Tc.y,-Tc.z),I1.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),this._frustum.setFromProjectionMatrix(I1)}}ZC.prototype.isPointLightShadow=!0;class uz extends Ki{constructor(e,t,s=0,i=1){super(e,t),this.type="PointLight",this.distance=s,this.decay=i,this.shadow=new ZC}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}uz.prototype.isPointLight=!0;class YC extends M0{constructor(){super(new m0(-5,5,5,-5,.5,500))}}YC.prototype.isDirectionalLightShadow=!0;class JC extends Ki{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Nt.DefaultUp),this.updateMatrix(),this.target=new Nt,this.shadow=new YC}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}JC.prototype.isDirectionalLight=!0;class KC extends Ki{constructor(e,t){super(e,t),this.type="AmbientLight"}}KC.prototype.isAmbientLight=!0;class hz extends Ki{constructor(e,t,s=10,i=10){super(e,t),this.type="RectAreaLight",this.width=s,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}hz.prototype.isRectAreaLight=!0;class QC{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new V)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const s=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*s),t.addScaledVector(o[4],1.092548*(s*i)),t.addScaledVector(o[5],1.092548*(i*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(s*r)),t.addScaledVector(o[8],.546274*(s*s-i*i)),t}getIrradianceAt(e,t){const s=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*s),t.addScaledVector(o[4],2*.429043*s*i),t.addScaledVector(o[5],2*.429043*i*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*s*r),t.addScaledVector(o[8],.429043*(s*s-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let s=0;s<9;s++)this.coefficients[s].addScaledVector(e.coefficients[s],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let s=0;s<9;s++)this.coefficients[s].lerp(e.coefficients[s],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const s=this.coefficients;for(let i=0;i<9;i++)s[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const s=this.coefficients;for(let i=0;i<9;i++)s[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const s=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*s,t[4]=1.092548*s*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*s*r,t[8]=.546274*(s*s-i*i)}}QC.prototype.isSphericalHarmonics3=!0;class k0 extends Ki{constructor(e=new QC,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}k0.prototype.isLightProbe=!0;class dz{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let s=0,i=e.length;s<i;s++)t+=String.fromCharCode(e[s]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class pz extends Xt{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}pz.prototype.isInstancedBufferGeometry=!0;class fz extends mo{constructor(e){super(e),typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,s,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Cl.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(l){Cl.add(e,l),t&&t(l),r.manager.itemEnd(e)}).catch(function(l){i&&i(l),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}fz.prototype.isImageBitmapLoader=!0;let Sd;const mz={getContext:function(){return Sd===void 0&&(Sd=new(window.AudioContext||window.webkitAudioContext)),Sd},setContext:function(n){Sd=n}};class gz extends mo{constructor(e){super(e)}load(e,t,s,i){const r=this,o=new oz(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const l=a.slice(0);mz.getContext().decodeAudioData(l,function(u){t(u)})}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},s,i)}}class xz extends k0{constructor(e,t,s=1){super(void 0,s);const i=new Xe().set(e),r=new Xe().set(t),o=new V(i.r,i.g,i.b),a=new V(r.r,r.g,r.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c)}}xz.prototype.isHemisphereLightProbe=!0;class yz extends k0{constructor(e,t=1){super(void 0,t);const s=new Xe().set(e);this.sh.coefficients[0].set(s.r,s.g,s.b).multiplyScalar(2*Math.sqrt(Math.PI))}}yz.prototype.isAmbientLightProbe=!0;class bz extends Nt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class vz{constructor(e,t,s){this.binding=e,this.valueSize=s;let i,r,o;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(s*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(s*5);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(s*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const s=this.buffer,i=this.valueSize,r=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)s[r+a]=s[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(s,r,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,s=this.valueSize,i=s*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,s),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,s=this.buffer,i=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(s,i,l,1-r,t)}o>0&&this._mixBufferRegionAdditive(s,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(s[l]!==s[l+t]){a.setValue(s,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,s=this.valueSize,i=s*this._origIndex;e.getValue(t,i);for(let r=s,o=i;r!==o;++r)t[r]=t[i+r%s];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let s=e;s<t;s++)this.buffer[s]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let s=0;s<this.valueSize;s++)this.buffer[t+s]=this.buffer[e+s]}_select(e,t,s,i,r){if(i>=.5)for(let o=0;o!==r;++o)e[t+o]=e[s+o]}_slerp(e,t,s,i){is.slerpFlat(e,t,e,t,e,s,i)}_slerpAdditive(e,t,s,i,r){const o=this._workIndex*r;is.multiplyQuaternionsFlat(e,o,e,t,e,s),is.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,s,i,r){const o=1-i;for(let a=0;a!==r;++a){const l=t+a;e[l]=e[l]*o+e[s+a]*i}}_lerpAdditive(e,t,s,i,r){for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]+e[s+o]*i}}}const N0="\\[\\]\\.:\\/",wz=new RegExp("["+N0+"]","g"),A0="[^"+N0+"]",Sz="[^"+N0.replace("\\.","")+"]",_z=/((?:WC+[\/:])*)/.source.replace("WC",A0),Cz=/(WCOD+)?/.source.replace("WCOD",Sz),Tz=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",A0),Iz=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",A0),Ez=new RegExp("^"+_z+Cz+Tz+Iz+"$"),Mz=["material","materials","bones"];class kz{constructor(e,t,s){const i=s||Rt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const s=this._targetGroup.nCachedObjects_,i=this._bindings[s];i!==void 0&&i.getValue(e,t)}setValue(e,t){const s=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=s.length;i!==r;++i)s[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,s=e.length;t!==s;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,s=e.length;t!==s;++t)e[t].unbind()}}class Rt{constructor(e,t,s){this.path=t,this.parsedPath=s||Rt.parseTrackName(t),this.node=Rt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,s){return e&&e.isAnimationObjectGroup?new Rt.Composite(e,t,s):new Rt(e,t,s)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(wz,"")}static parseTrackName(e){const t=Ez.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const s={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=s.nodeName&&s.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=s.nodeName.substring(i+1);Mz.indexOf(r)!==-1&&(s.nodeName=s.nodeName.substring(0,i),s.objectName=r)}if(s.propertyName===null||s.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return s}static findNode(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const s=e.skeleton.getBoneByName(t);if(s!==void 0)return s}if(e.children){const s=function(r){for(let o=0;o<r.length;o++){const a=r[o];if(a.name===t||a.uuid===t)return a;const l=s(a.children);if(l)return l}return null},i=s(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const s=this.resolvedProperty;for(let i=0,r=s.length;i!==r;++i)e[t++]=s[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const s=this.resolvedProperty;for(let i=0,r=s.length;i!==r;++i)s[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const s=this.resolvedProperty;for(let i=0,r=s.length;i!==r;++i)s[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const s=this.resolvedProperty;for(let i=0,r=s.length;i!==r;++i)s[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,s=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Rt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(s){let c=t.objectIndex;switch(s){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;default:if(e[s]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[s]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[i];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Rt.Composite=kz;Rt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Rt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Rt.prototype.GetterByBindingType=[Rt.prototype._getValue_direct,Rt.prototype._getValue_array,Rt.prototype._getValue_arrayElement,Rt.prototype._getValue_toArray];Rt.prototype.SetterByBindingTypeAndVersioning=[[Rt.prototype._setValue_direct,Rt.prototype._setValue_direct_setNeedsUpdate,Rt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_array,Rt.prototype._setValue_array_setNeedsUpdate,Rt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_arrayElement,Rt.prototype._setValue_arrayElement_setNeedsUpdate,Rt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_fromArray,Rt.prototype._setValue_fromArray_setNeedsUpdate,Rt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Nz{constructor(e,t,s=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=s,this.blendMode=i;const r=t.tracks,o=r.length,a=new Array(o),l={endingStart:rl,endingEnd:rl};for(let c=0;c!==o;++c){const u=r[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=mD,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,s){if(e.fadeOut(t),this.fadeIn(t),s){const i=this._clip.duration,r=e._clip.duration,o=r/i,a=i/r;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,s){return e.crossFadeFrom(this,t,s)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,s){const i=this._mixer,r=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=r,l[1]=r+s,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,s,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*s;if(l<0||s===0)return;this._startTime=null,t=s*l}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case lC:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case h0:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const s=this._weightInterpolant;if(s!==null){const i=s.evaluate(e)[0];t*=i,e>s.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const s=this._timeScaleInterpolant;if(s!==null){const i=s.evaluate(e)[0];t*=i,e>s.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,s=this.loop;let i=this.time+e,r=this._loopCount;const o=s===gD;if(e===0)return r===-1?i:o&&(r&1)===1?t-i:i;if(s===fD){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,r+=Math.abs(a);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(r&1)===1)return t-i}return i}_setEndings(e,t,s){const i=this._interpolantSettings;s?(i.endingStart=ol,i.endingEnd=ol):(e?i.endingStart=this.zeroSlopeAtStart?ol:rl:i.endingStart=qd,t?i.endingEnd=this.zeroSlopeAtEnd?ol:rl:i.endingEnd=qd)}_scheduleFading(e,t,s){const i=this._mixer,r=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=r,l[0]=t,a[1]=r+e,l[1]=s,this}}class Az extends fo{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const s=e._localRoot||this._root,i=e._clip.tracks,r=i.length,o=e._propertyBindings,a=e._interpolants,l=s.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==r;++h){const d=i[h],p=d.name;let f=u[p];if(f!==void 0)o[h]=f;else{if(f=o[h],f!==void 0){f._cacheIndex===null&&(++f.referenceCount,this._addInactiveBinding(f,l,p));continue}const g=t&&t._propertyBindings[h].binding.parsedPath;f=new vz(Rt.create(s,p,g),d.ValueTypeName,d.getValueSize()),++f.referenceCount,this._addInactiveBinding(f,l,p),o[h]=f}a[h].resultBuffer=f.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const s=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,s)}const t=e._propertyBindings;for(let s=0,i=t.length;s!==i;++s){const r=t[s];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let s=0,i=t.length;s!==i;++s){const r=t[s];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,s){const i=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[s]=e}_removeInactiveAction(e){const t=this._actions,s=t[t.length-1],i=e._cacheIndex;s._cacheIndex=i,t[i]=s,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,a=o[r],l=a.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null;const h=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete h[d],l.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let s=0,i=t.length;s!==i;++s){const r=t[s];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,s=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=s,t[s]=r}_takeBackAction(e){const t=this._actions,s=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=s,t[s]=r}_addInactiveBinding(e,t,s){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[s]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,s=e.binding,i=s.rootNode.uuid,r=s.path,o=this._bindingsByRootAndName,a=o[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[r],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,s=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=s,t[s]=r}_takeBackBinding(e){const t=this._bindings,s=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=s,t[s]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let s=e[t];return s===void 0&&(s=new GC(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),s.__cacheIndex=t,e[t]=s),s}_takeBackControlInterpolant(e){const t=this._controlInterpolants,s=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=s,t[s]=r}clipAction(e,t,s){const i=t||this._root,r=i.uuid;let o=typeof e=="string"?S1.findByName(i,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(s===void 0&&(o!==null?s=o.blendMode:s=h0),l!==void 0){const h=l.actionByRoot[r];if(h!==void 0&&h.blendMode===s)return h;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const u=new Nz(this,o,t,s);return this._bindAction(u,c),this._addInactiveAction(u,a,r),u}existingAction(e,t){const s=t||this._root,i=s.uuid,r=typeof e=="string"?S1.findByName(s,e):e,o=r?r.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let s=t-1;s>=0;--s)e[s].stop();return this}update(e){e*=this.timeScale;const t=this._actions,s=this._nActiveActions,i=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==s;++c)t[c]._update(i,e,r,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,s=e.uuid,i=this._actionsByClip,r=i[s];if(r!==void 0){const o=r.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[s]}}uncacheRoot(e){const t=e.uuid,s=this._actionsByClip;for(const o in s){const a=s[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const o in r){const a=r[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const s=this.existingAction(e,t);s!==null&&(this._deactivateAction(s),this._removeInactiveAction(s))}}Az.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Rz extends vu{constructor(e,t,s=1){super(e,t),this.meshPerAttribute=s}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}Rz.prototype.isInstancedInterleavedBuffer=!0;class E1{constructor(e=1,t=0,s=0){return this.radius=e,this.phi=t,this.theta=s,this}set(e,t,s){return this.radius=e,this.phi=t,this.theta=s,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,s){return this.radius=Math.sqrt(e*e+t*t+s*s),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,s),this.phi=Math.acos(Ss(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const Vr=new V,_d=new Qe,wg=new Qe;class $z extends v0{constructor(e){const t=eT(e),s=new Xt,i=[],r=[],o=new Xe(0,0,1),a=new Xe(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(a.r,a.g,a.b))}s.setAttribute("position",new tn(i,3)),s.setAttribute("color",new tn(r,3));const l=new wu({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(s,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,s=this.geometry,i=s.getAttribute("position");wg.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const a=t[r];a.parent&&a.parent.isBone&&(_d.multiplyMatrices(wg,a.matrixWorld),Vr.setFromMatrixPosition(_d),i.setXYZ(o,Vr.x,Vr.y,Vr.z),_d.multiplyMatrices(wg,a.parent.matrixWorld),Vr.setFromMatrixPosition(_d),i.setXYZ(o+1,Vr.x,Vr.y,Vr.z),o+=2)}s.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function eT(n){const e=[];n&&n.isBone&&e.push(n);for(let t=0;t<n.children.length;t++)e.push.apply(e,eT(n.children[t]));return e}class Dz extends v0{constructor(e=10,t=10,s=4473924,i=8947848){s=new Xe(s),i=new Xe(i);const r=t/2,o=e/t,a=e/2,l=[],c=[];for(let d=0,p=0,f=-a;d<=t;d++,f+=o){l.push(-a,0,f,a,0,f),l.push(f,0,-a,f,0,a);const g=d===r?s:i;g.toArray(c,p),p+=3,g.toArray(c,p),p+=3,g.toArray(c,p),p+=3,g.toArray(c,p),p+=3}const u=new Xt;u.setAttribute("position",new tn(l,3)),u.setAttribute("color",new tn(c,3));const h=new wu({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}}const Lz=new Float32Array(1);new Int32Array(Lz.buffer);Ks.create=function(n,e){return console.log("THREE.Curve.create() has been deprecated"),n.prototype=Object.create(Ks.prototype),n.prototype.constructor=n,n.prototype.getPoint=e,n};ax.prototype.fromPoints=function(n){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(n)};Dz.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};$z.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};mo.prototype.extractUrlBase=function(n){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),dz.extractUrlBase(n)};mo.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Ci.prototype.center=function(n){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(n)};Ci.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Ci.prototype.isIntersectionBox=function(n){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(n)};Ci.prototype.isIntersectionSphere=function(n){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(n)};Ci.prototype.size=function(n){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(n)};Ul.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Wp.prototype.setFromMatrix=function(n){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(n)};Gn.prototype.flattenToArrayOffset=function(n,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(n,e)};Gn.prototype.multiplyVector3=function(n){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),n.applyMatrix3(this)};Gn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};Gn.prototype.applyToBufferAttribute=function(n){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),n.applyMatrix3(this)};Gn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};Gn.prototype.getInverse=function(n){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(n).invert()};Qe.prototype.extractPosition=function(n){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(n)};Qe.prototype.flattenToArrayOffset=function(n,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(n,e)};Qe.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new V().setFromMatrixColumn(this,3)};Qe.prototype.setRotationFromQuaternion=function(n){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(n)};Qe.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};Qe.prototype.multiplyVector3=function(n){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)};Qe.prototype.multiplyVector4=function(n){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)};Qe.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};Qe.prototype.rotateAxis=function(n){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),n.transformDirection(this)};Qe.prototype.crossVector=function(n){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)};Qe.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};Qe.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};Qe.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};Qe.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};Qe.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};Qe.prototype.applyToBufferAttribute=function(n){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)};Qe.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};Qe.prototype.makeFrustum=function(n,e,t,s,i,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(n,e,s,t,i,r)};Qe.prototype.getInverse=function(n){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(n).invert()};pr.prototype.isIntersectionLine=function(n){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(n)};is.prototype.multiplyVector3=function(n){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),n.applyQuaternion(this)};is.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};Wl.prototype.isIntersectionBox=function(n){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(n)};Wl.prototype.isIntersectionPlane=function(n){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(n)};Wl.prototype.isIntersectionSphere=function(n){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(n)};Nn.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};Nn.prototype.barycoordFromPoint=function(n,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(n,e)};Nn.prototype.midpoint=function(n){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(n)};Nn.prototypenormal=function(n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(n)};Nn.prototype.plane=function(n){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(n)};Nn.barycoordFromPoint=function(n,e,t,s,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Nn.getBarycoord(n,e,t,s,i)};Nn.normal=function(n,e,t,s){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Nn.getNormal(n,e,t,s)};Su.prototype.extractAllPoints=function(n){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(n)};Su.prototype.extrude=function(n){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Xl(this,n)};Su.prototype.makeGeometry=function(n){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new I0(this,n)};Ie.prototype.fromAttribute=function(n,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)};Ie.prototype.distanceToManhattan=function(n){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(n)};Ie.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};V.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};V.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};V.prototype.getPositionFromMatrix=function(n){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(n)};V.prototype.getScaleFromMatrix=function(n){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(n)};V.prototype.getColumnFromMatrix=function(n,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,n)};V.prototype.applyProjection=function(n){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(n)};V.prototype.fromAttribute=function(n,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)};V.prototype.distanceToManhattan=function(n){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(n)};V.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Vt.prototype.fromAttribute=function(n,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)};Vt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Nt.prototype.getChildByName=function(n){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(n)};Nt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};Nt.prototype.translate=function(n,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,n)};Nt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};Nt.prototype.applyMatrix=function(n){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(n)};Object.defineProperties(Nt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(n){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=n}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});gn.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(gn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),xD},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});$C.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};ts.prototype.setLens=function(n,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(n)};Object.defineProperties(Ki.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(n){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=n}},shadowCameraLeft:{set:function(n){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=n}},shadowCameraRight:{set:function(n){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=n}},shadowCameraTop:{set:function(n){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=n}},shadowCameraBottom:{set:function(n){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=n}},shadowCameraNear:{set:function(n){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=n}},shadowCameraFar:{set:function(n){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=n}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(n){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=n}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(n){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=n}},shadowMapHeight:{set:function(n){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=n}}});Object.defineProperties($n.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Zd},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Zd)}}});$n.prototype.setDynamic=function(n){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(n===!0?Zd:Jc),this};$n.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},$n.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Xt.prototype.addIndex=function(n){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(n)};Xt.prototype.addAttribute=function(n,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(n,new $n(arguments[1],arguments[2]))):n==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(n,e)};Xt.prototype.addDrawCall=function(n,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(n,e)};Xt.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Xt.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Xt.prototype.removeAttribute=function(n){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(n)};Xt.prototype.applyMatrix=function(n){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(n)};Object.defineProperties(Xt.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});vu.prototype.setDynamic=function(n){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(n===!0?Zd:Jc),this};vu.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Xl.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Xl.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Xl.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};jp.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(ls.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Xe}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(n){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===iC}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(n){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=n}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(Qo.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(n){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=n}}});Dt.prototype.clearTarget=function(n,e,t,s){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(n),this.clear(e,t,s)};Dt.prototype.animate=function(n){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(n)};Dt.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};Dt.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};Dt.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};Dt.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};Dt.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};Dt.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};Dt.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};Dt.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};Dt.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};Dt.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};Dt.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};Dt.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};Dt.prototype.enableScissorTest=function(n){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(n)};Dt.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};Dt.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};Dt.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};Dt.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};Dt.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};Dt.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};Dt.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};Dt.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};Dt.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};Dt.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(Dt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(n){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=n}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(n){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=n}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(n){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=n===!0?zl:yi}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(kC.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Js.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(n){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=n}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(n){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=n}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(n){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=n}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(n){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=n}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(n){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=n}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(n){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=n}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(n){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=n}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(n){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=n}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(n){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=n}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(n){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=n}}});bz.prototype.load=function(n){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new gz().load(n,function(s){e.setBuffer(s)}),this};f0.prototype.updateCubeMap=function(n,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(n,e)};f0.prototype.clear=function(n,e,t,s){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(n,e,t,s)};Vl.crossOrigin=void 0;Vl.loadTexture=function(n,e,t,s){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new XC;i.setCrossOrigin(this.crossOrigin);const r=i.load(n,t,void 0,s);return e&&(r.mapping=e),r};Vl.loadTextureCube=function(n,e,t,s){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new az;i.setCrossOrigin(this.crossOrigin);const r=i.load(n,t,void 0,s);return e&&(r.mapping=e),r};Vl.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Vl.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:c0}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=c0);const M1={type:"change"},Sg={type:"start"},k1={type:"end"};class Fz extends fo{constructor(e,t){super(),t===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new V,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Ra.ROTATE,MIDDLE:Ra.DOLLY,RIGHT:Ra.PAN},this.touches={ONE:$a.ROTATE,TWO:$a.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(W){W.addEventListener("keydown",B),this._domElementKeyEvents=W},this.saveState=function(){s.target0.copy(s.target),s.position0.copy(s.object.position),s.zoom0=s.object.zoom},this.reset=function(){s.target.copy(s.target0),s.object.position.copy(s.position0),s.object.zoom=s.zoom0,s.object.updateProjectionMatrix(),s.dispatchEvent(M1),s.update(),r=i.NONE},this.update=function(){const W=new V,z=new is().setFromUnitVectors(e.up,new V(0,1,0)),Ce=z.clone().invert(),Te=new V,He=new is,Ve=2*Math.PI;return function(){const De=s.object.position;W.copy(De).sub(s.target),W.applyQuaternion(z),a.setFromVector3(W),s.autoRotate&&r===i.NONE&&N(_()),s.enableDamping?(a.theta+=l.theta*s.dampingFactor,a.phi+=l.phi*s.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let et=s.minAzimuthAngle,yt=s.maxAzimuthAngle;return isFinite(et)&&isFinite(yt)&&(et<-Math.PI?et+=Ve:et>Math.PI&&(et-=Ve),yt<-Math.PI?yt+=Ve:yt>Math.PI&&(yt-=Ve),et<=yt?a.theta=Math.max(et,Math.min(yt,a.theta)):a.theta=a.theta>(et+yt)/2?Math.max(et,a.theta):Math.min(yt,a.theta)),a.phi=Math.max(s.minPolarAngle,Math.min(s.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(s.minDistance,Math.min(s.maxDistance,a.radius)),s.enableDamping===!0?s.target.addScaledVector(u,s.dampingFactor):s.target.add(u),W.setFromSpherical(a),W.applyQuaternion(Ce),De.copy(s.target).add(W),s.object.lookAt(s.target),s.enableDamping===!0?(l.theta*=1-s.dampingFactor,l.phi*=1-s.dampingFactor,u.multiplyScalar(1-s.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,h||Te.distanceToSquared(s.object.position)>o||8*(1-He.dot(s.object.quaternion))>o?(s.dispatchEvent(M1),Te.copy(s.object.position),He.copy(s.object.quaternion),h=!1,!0):!1}}(),this.dispose=function(){s.domElement.removeEventListener("contextmenu",we),s.domElement.removeEventListener("pointerdown",ge),s.domElement.removeEventListener("pointercancel",ze),s.domElement.removeEventListener("wheel",it),s.domElement.removeEventListener("pointermove",ke),s.domElement.removeEventListener("pointerup",be),s._domElementKeyEvents!==null&&s._domElementKeyEvents.removeEventListener("keydown",B)};const s=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const o=1e-6,a=new E1,l=new E1;let c=1;const u=new V;let h=!1;const d=new Ie,p=new Ie,f=new Ie,g=new Ie,y=new Ie,m=new Ie,x=new Ie,v=new Ie,b=new Ie,w=[],S={};function _(){return 2*Math.PI/60/60*s.autoRotateSpeed}function I(){return Math.pow(.95,s.zoomSpeed)}function N(W){l.theta-=W}function k(W){l.phi-=W}const M=function(){const W=new V;return function(Ce,Te){W.setFromMatrixColumn(Te,0),W.multiplyScalar(-Ce),u.add(W)}}(),T=function(){const W=new V;return function(Ce,Te){s.screenSpacePanning===!0?W.setFromMatrixColumn(Te,1):(W.setFromMatrixColumn(Te,0),W.crossVectors(s.object.up,W)),W.multiplyScalar(Ce),u.add(W)}}(),C=function(){const W=new V;return function(Ce,Te){const He=s.domElement;if(s.object.isPerspectiveCamera){const Ve=s.object.position;W.copy(Ve).sub(s.target);let rt=W.length();rt*=Math.tan(s.object.fov/2*Math.PI/180),M(2*Ce*rt/He.clientHeight,s.object.matrix),T(2*Te*rt/He.clientHeight,s.object.matrix)}else s.object.isOrthographicCamera?(M(Ce*(s.object.right-s.object.left)/s.object.zoom/He.clientWidth,s.object.matrix),T(Te*(s.object.top-s.object.bottom)/s.object.zoom/He.clientHeight,s.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),s.enablePan=!1)}}();function R(W){s.object.isPerspectiveCamera?c/=W:s.object.isOrthographicCamera?(s.object.zoom=Math.max(s.minZoom,Math.min(s.maxZoom,s.object.zoom*W)),s.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),s.enableZoom=!1)}function L(W){s.object.isPerspectiveCamera?c*=W:s.object.isOrthographicCamera?(s.object.zoom=Math.max(s.minZoom,Math.min(s.maxZoom,s.object.zoom/W)),s.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),s.enableZoom=!1)}function $(W){d.set(W.clientX,W.clientY)}function O(W){x.set(W.clientX,W.clientY)}function G(W){g.set(W.clientX,W.clientY)}function Z(W){p.set(W.clientX,W.clientY),f.subVectors(p,d).multiplyScalar(s.rotateSpeed);const z=s.domElement;N(2*Math.PI*f.x/z.clientHeight),k(2*Math.PI*f.y/z.clientHeight),d.copy(p),s.update()}function H(W){v.set(W.clientX,W.clientY),b.subVectors(v,x),b.y>0?R(I()):b.y<0&&L(I()),x.copy(v),s.update()}function j(W){y.set(W.clientX,W.clientY),m.subVectors(y,g).multiplyScalar(s.panSpeed),C(m.x,m.y),g.copy(y),s.update()}function ne(W){W.deltaY<0?L(I()):W.deltaY>0&&R(I()),s.update()}function ee(W){let z=!1;switch(W.code){case s.keys.UP:C(0,s.keyPanSpeed),z=!0;break;case s.keys.BOTTOM:C(0,-s.keyPanSpeed),z=!0;break;case s.keys.LEFT:C(s.keyPanSpeed,0),z=!0;break;case s.keys.RIGHT:C(-s.keyPanSpeed,0),z=!0;break}z&&(W.preventDefault(),s.update())}function oe(){if(w.length===1)d.set(w[0].pageX,w[0].pageY);else{const W=.5*(w[0].pageX+w[1].pageX),z=.5*(w[0].pageY+w[1].pageY);d.set(W,z)}}function ue(){if(w.length===1)g.set(w[0].pageX,w[0].pageY);else{const W=.5*(w[0].pageX+w[1].pageX),z=.5*(w[0].pageY+w[1].pageY);g.set(W,z)}}function Q(){const W=w[0].pageX-w[1].pageX,z=w[0].pageY-w[1].pageY,Ce=Math.sqrt(W*W+z*z);x.set(0,Ce)}function _e(){s.enableZoom&&Q(),s.enablePan&&ue()}function ye(){s.enableZoom&&Q(),s.enableRotate&&oe()}function pe(W){if(w.length==1)p.set(W.pageX,W.pageY);else{const Ce=We(W),Te=.5*(W.pageX+Ce.x),He=.5*(W.pageY+Ce.y);p.set(Te,He)}f.subVectors(p,d).multiplyScalar(s.rotateSpeed);const z=s.domElement;N(2*Math.PI*f.x/z.clientHeight),k(2*Math.PI*f.y/z.clientHeight),d.copy(p)}function Ee(W){if(w.length===1)y.set(W.pageX,W.pageY);else{const z=We(W),Ce=.5*(W.pageX+z.x),Te=.5*(W.pageY+z.y);y.set(Ce,Te)}m.subVectors(y,g).multiplyScalar(s.panSpeed),C(m.x,m.y),g.copy(y)}function $e(W){const z=We(W),Ce=W.pageX-z.x,Te=W.pageY-z.y,He=Math.sqrt(Ce*Ce+Te*Te);v.set(0,He),b.set(0,Math.pow(v.y/x.y,s.zoomSpeed)),R(b.y),x.copy(v)}function ie(W){s.enableZoom&&$e(W),s.enablePan&&Ee(W)}function de(W){s.enableZoom&&$e(W),s.enableRotate&&pe(W)}function ge(W){s.enabled!==!1&&(w.length===0&&(s.domElement.setPointerCapture(W.pointerId),s.domElement.addEventListener("pointermove",ke),s.domElement.addEventListener("pointerup",be)),Ne(W),W.pointerType==="touch"?F(W):Be(W))}function ke(W){s.enabled!==!1&&(W.pointerType==="touch"?fe(W):nt(W))}function be(W){Se(W),w.length===0&&(s.domElement.releasePointerCapture(W.pointerId),s.domElement.removeEventListener("pointermove",ke),s.domElement.removeEventListener("pointerup",be)),s.dispatchEvent(k1),r=i.NONE}function ze(W){Se(W)}function Be(W){let z;switch(W.button){case 0:z=s.mouseButtons.LEFT;break;case 1:z=s.mouseButtons.MIDDLE;break;case 2:z=s.mouseButtons.RIGHT;break;default:z=-1}switch(z){case Ra.DOLLY:if(s.enableZoom===!1)return;O(W),r=i.DOLLY;break;case Ra.ROTATE:if(W.ctrlKey||W.metaKey||W.shiftKey){if(s.enablePan===!1)return;G(W),r=i.PAN}else{if(s.enableRotate===!1)return;$(W),r=i.ROTATE}break;case Ra.PAN:if(W.ctrlKey||W.metaKey||W.shiftKey){if(s.enableRotate===!1)return;$(W),r=i.ROTATE}else{if(s.enablePan===!1)return;G(W),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&s.dispatchEvent(Sg)}function nt(W){if(s.enabled!==!1)switch(r){case i.ROTATE:if(s.enableRotate===!1)return;Z(W);break;case i.DOLLY:if(s.enableZoom===!1)return;H(W);break;case i.PAN:if(s.enablePan===!1)return;j(W);break}}function it(W){s.enabled===!1||s.enableZoom===!1||r!==i.NONE||(W.preventDefault(),s.dispatchEvent(Sg),ne(W),s.dispatchEvent(k1))}function B(W){s.enabled===!1||s.enablePan===!1||ee(W)}function F(W){switch(qe(W),w.length){case 1:switch(s.touches.ONE){case $a.ROTATE:if(s.enableRotate===!1)return;oe(),r=i.TOUCH_ROTATE;break;case $a.PAN:if(s.enablePan===!1)return;ue(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(s.touches.TWO){case $a.DOLLY_PAN:if(s.enableZoom===!1&&s.enablePan===!1)return;_e(),r=i.TOUCH_DOLLY_PAN;break;case $a.DOLLY_ROTATE:if(s.enableZoom===!1&&s.enableRotate===!1)return;ye(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&s.dispatchEvent(Sg)}function fe(W){switch(qe(W),r){case i.TOUCH_ROTATE:if(s.enableRotate===!1)return;pe(W),s.update();break;case i.TOUCH_PAN:if(s.enablePan===!1)return;Ee(W),s.update();break;case i.TOUCH_DOLLY_PAN:if(s.enableZoom===!1&&s.enablePan===!1)return;ie(W),s.update();break;case i.TOUCH_DOLLY_ROTATE:if(s.enableZoom===!1&&s.enableRotate===!1)return;de(W),s.update();break;default:r=i.NONE}}function we(W){s.enabled!==!1&&W.preventDefault()}function Ne(W){w.push(W)}function Se(W){delete S[W.pointerId];for(let z=0;z<w.length;z++)if(w[z].pointerId==W.pointerId){w.splice(z,1);return}}function qe(W){let z=S[W.pointerId];z===void 0&&(z=new Ie,S[W.pointerId]=z),z.set(W.pageX,W.pageY)}function We(W){const z=W.pointerId===w[0].pointerId?w[1]:w[0];return S[z.pointerId]}s.domElement.addEventListener("contextmenu",we),s.domElement.addEventListener("pointerdown",ge),s.domElement.addEventListener("pointercancel",ze),s.domElement.addEventListener("wheel",it,{passive:!1}),this.update()}}var Pz="abcdefghijklmnopqrstuvwxyz".split("");function _g(n){return Pz[n]}var Qd=Date.now();function Er(n){if(n===null){Qd=Date.now();return}if(typeof n!="number")throw Error("Unable to setSeed as provided seed was not a valid number");if(n===Number.MAX_SAFE_INTEGER)throw Error("Unable to setSeed because the seed was already the maximum safe JavaScript number allowed");if(n===Number.POSITIVE_INFINITY||n===Number.NEGATIVE_INFINITY)throw new Error("Unable to setSeed. Positive or negative infinity is not allowed");if(n<0)throw new Error("Unable to setSeed. Seed must be a number >= 0");Qd=n}var N1=/(\d{1,2})/g;function Oz(){for(var n=[],e=Qd.toString(),t=N1.exec(e);t;)n.push(t[0]),t=N1.exec(e);var s="_";return n.forEach(function(i){var r=+i;if(r>25){var o=i.split(""),a=o[0],l=o[1];s+=""+_g(+a)+_g(+l)}else s+=_g(r)}),Qd+=1,s}function zz(n){return""+n+Oz()}var Bz=[];function Vz(){return Bz}function Uz(n){return/&/g.test(n)}function Wz(n){return n.toLowerCase().startsWith("@media")}function Gz(n){return n.replace(/([A-Z])/g,function(e){return"-"+e.toLowerCase()})}function A1(n){return Object.entries(n).reduce(function(e,t){var s=t[0],i=t[1];return""+e+Gz(s)+":"+i+";"},"")}function dl(n,e,t,s){s===void 0&&(s=!1);for(var i={},r="",o="",a=Object.entries(n),l=!1,c=function(){l&&(r+="}"),l=!1},u=function(){var f=d[h],g=f[0],y=f[1];if(Wz(g)){if(typeof y!="object")throw new Error("Unable to map @media query because rules / props are an invalid type");c(),o+=g+"{";var m=dl(y,e,t),x=m[1],v=m[2];o+=x,o+="}",o+=v}else if(Uz(g)){if(!t)throw new Error("Unable to generate nested rule because parentSelector is missing");c();var b=g.replace(/&/g,t);b.split(/,\s*/).forEach(function(T){var C=dl(y,e,T),R=C[1],L=C[2];r+=R,o+=L})}else if(!t&&typeof y=="object"){c();var w=s?g:zz(g);i[g]=w;var S=(s?"":".")+w,_=dl(y,e,S),I=_[1],N=_[2];r+=I,o+=N}else{var k;if(!t)throw new Error("Unable to write css props because parent selector is null");if(l)r+=A1((k={},k[g]=y,k));else{var M;r+=t+"{"+A1((M={},M[g]=y,M)),l=!0}}},h=0,d=a;h<d.length;h++)u();return c(),[i,r,o]}function R1(n,e){for(var t=e,s=[],i=/\$\w([a-zA-Z0-9_-]+)?/gm,r=i.exec(t);r;)s.push(r[0].valueOf()),r=i.exec(t);for(var o=0,a=s;o<a.length;o++){var l=a[o];t=t.replace(l,"."+n[l.substring(1)])}return Vz().reduce(function(c,u){return u(c)},t)}function Hz(n){if(typeof document<"u"&&document.head&&document.head.appendChild&&typeof document.createElement=="function"){var e=document.createElement("style");return e.innerHTML=n,e}return null}function tT(n,e){var t=Hz(n);if(t){var s,i;if(e!=null&&e.insertAfter&&e!=null&&e.insertBefore)throw new Error("Both insertAfter and insertBefore were provided. Please choose only one.");e!=null&&(s=e.insertAfter)!=null&&s.after?e.insertAfter.after(t):e!=null&&(i=e.insertBefore)!=null&&i.before?e.insertBefore.before(t):document.head.appendChild(t)}return t}function nT(n){return{flush:n&&typeof n.flush=="boolean"?n.flush:!0}}function bi(n,e){var t=nT(e),s=dl(n,t,null,!0),i=s[1],r=s[2],o=""+i+r;return t.flush&&tT(o,e),o}function Mr(n,e){var t=nT(e),s=dl(n,t,null),i=s[0],r=s[1],o=s[2],a=""+r+o,l=R1(i,a),c=null,u=function(d){if(c){var p=dl(d,{},null),f=p[0],g=p[1],y=p[2],m=""+g+y,x=R1(i,m);return c.innerHTML=x,[f,x]}return null};return t.flush&&(c=tT(l,e)),[i,l,u]}const R0=()=>{const n=D().get("steps");return n!==void 0?n.reduce((e,t)=>t.status==="touch"||t.status==="wait"?e+t.movingLimit:e,0):(setTimeout(R0,1e3),0)},ga=()=>{const n=D().get("steps");return n!==void 0?n.reduce((e,t)=>t.status==="touch"?e+t.flwTimeAtStart:e,0):(setTimeout(ga,1e3),0)},Yl=()=>{const n=ga(),e=D().get("flwTimeMin");return e>=n?n:n+(n-e)};class jz extends Nt{constructor(e=document.createElement("div")){super(),this.element=e,this.element.style.position="absolute",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.addEventListener("removed",function(){this.traverse(function(t){t.element instanceof Element&&t.element.parentNode!==null&&t.element.parentNode.removeChild(t.element)})})}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this}}jz.prototype.isCSS2DObject=!0;const Ur=new V,$1=new Qe,D1=new Qe,L1=new V,F1=new V;class Xz{constructor(e={}){const t=this;let s,i,r,o;const a={objects:new WeakMap},l=e.element!==void 0?e.element:document.createElement("div");l.style.overflow="hidden",this.domElement=l,this.getSize=function(){return{width:s,height:i}},this.render=function(p,f){p.autoUpdate===!0&&p.updateMatrixWorld(),f.parent===null&&f.updateMatrixWorld(),$1.copy(f.matrixWorldInverse),D1.multiplyMatrices(f.projectionMatrix,$1),c(p,p,f),d(p)},this.setSize=function(p,f){s=p,i=f,r=s/2,o=i/2,l.style.width=p+"px",l.style.height=f+"px"};function c(p,f,g){if(p.isCSS2DObject){p.onBeforeRender(t,f,g),Ur.setFromMatrixPosition(p.matrixWorld),Ur.applyMatrix4(D1);const y=p.element;/apple/i.test(navigator.vendor)?y.style.transform="translate(-50%,-50%) translate("+Math.round(Ur.x*r+r)+"px,"+Math.round(-Ur.y*o+o)+"px)":y.style.transform="translate(-50%,-50%) translate("+(Ur.x*r+r)+"px,"+(-Ur.y*o+o)+"px)",y.style.display=p.visible&&Ur.z>=-1&&Ur.z<=1?"":"none";const m={distanceToCameraSquared:u(g,p)};a.objects.set(p,m),y.parentNode!==l&&l.appendChild(y),p.onAfterRender(t,f,g)}for(let y=0,m=p.children.length;y<m;y++)c(p.children[y],f,g)}function u(p,f){return L1.setFromMatrixPosition(p.matrixWorld),F1.setFromMatrixPosition(f.matrixWorld),L1.distanceToSquared(F1)}function h(p){const f=[];return p.traverse(function(g){g.isCSS2DObject&&f.push(g)}),f}function d(p){const f=h(p).sort(function(y,m){const x=a.objects.get(y).distanceToCameraSquared,v=a.objects.get(m).distanceToCameraSquared;return x-v}),g=f.length;for(let y=0,m=f.length;y<m;y++)f[y].element.style.zIndex=g-y}}}const Kp=n=>E().get("strtPosition").z-D().get("step")*n,qz=(n,e,t)=>{n.name=n.uuid,n.dStpIndex=t;for(const s of e)n[s.key]=s.value;return n},$0=(n,e)=>{const t=e*1.2,s="white",i="white",r="black",o=.25,a=document.createElement("canvas"),l=a.getContext("2d");l.font=`${e}px Verdana`;let c=0;for(const d of n){const p=l.measureText(d).width;p>c&&(c=p)}a.width=c*1.5,a.height=t*n.length+t;const u=2;l.globalAlpha=o,l.fillStyle=r,l.fillRect(0,0,a.width,a.height),l.globalAlpha=1,l.lineWidth=u,l.strokeStyle=i,l.strokeRect(u/2,u/2,a.width-u,a.height-u),l.fillStyle=s,l.font=`${e}px Verdana`,l.textBaseline="top";let h=t/2;for(const d of n){const p=l.measureText(d).width,f=(a.width-p)/2;l.fillText(d,f,h),h+=t}return a},Jl=()=>{let n=[];const e=E().get("flwMap");return e!==void 0&&(n=Object.keys(e).map(s=>e[s])),n},Zz=n=>{const e=D().get("steps")||[];if(e[n.dStpIndex]===void 0||n.dStpIndex===0)return;const t=e[n.dStpIndex];E().get("scnData").camera;const i=Jl()[n.dStpIndex];t.avAge=0;const r=[];i.forEach(m=>{r.push(m.dStepsAges[n.dStpIndex.toString()])});let o=r.reduce((m,x)=>m+x,0)/r.length;isNaN(o)&&(o=0),t.avAge=Math.round(o*100)/100,E().get("clckCbGroup");const a=t.movingLimit,l=t.avAge;let c=0;if(t.status==="touch"&&(c=t.movingDevUnits),a===n.Limit&&l===n.AvAg&&c===n.DvUnts)return;const u=[{key:"Limit",value:a.toString()}],h=D().get("devUnitsTerm");c!==0&&u.push({key:h,value:c});const d=25,p=u.map(m=>`${m.key}: ${m.value}`),f=$0(p,d),g=new Xp(f),y=new fa({map:g,transparent:!0,opacity:1,side:Sr});if(n.material)n.material.map.dispose(),n.material.dispose(),n.material.map=g,n.material=y,n.material.needsUpdate=!0;else{const m=new Hl(f.width/125,f.height/125);n.geometry=m,n.material=y}},Yz=(n,e,t,s,i,r,o,a,l,c,u)=>{setInterval(()=>{E().get("tmBox")!==void 0&&E().get("thrPutPerDay")!==void 0&&E().get("thrPutExpPerDay")!==void 0&&E().get("thrPut")!==void 0&&E().get("flwTime")!==void 0&&E().get("flwTmExp")!==void 0&&E().get("wip")!==void 0&&E().get("wipExp")!==void 0&&E().get("value")!==void 0&&E().get("started")!==void 0&&(l(E().get("tmBox")),t(E().get("thrPutPerDay")),s(E().get("thrPutExpPerDay")),e(E().get("thrPut")),n(E().get("flwTime")),r(E().get("flwTmExp")),i(E().get("wip")),o(E().get("wipExp")),a(E().get("value")),E().get("started")===!0&&!u?c(!0):c(!1))},1e3/D().get("fps"))},kr=(n="NOT VERY RANDOM")=>parseInt(n.split("").reduce((e,t)=>{const s=t.toLowerCase().charCodeAt(0)-97+1;return e+s.toString()},"")),Jz=()=>{Er(kr("flwmetrics"));const[n]=Mr({metricsContainer:{position:"absolute",zIndex:"10000",boxSizing:"border-box",width:"100%",padding:"0.5rem",backgroundColor:"rgba(0, 0, 0, 0)",color:"white",textShadow:"2px 2px 2px #444",marginTop:"1.2rem",top:"0"},metricsDivs:{display:"flex",flexWrap:"nowrap",justifyContent:"space-evenly"},metricsSpans:{display:"block",boxSizing:"border-box",color:"white",textShadow:"2px 2px 2px #444",fontSize:"min(6vw, 30px)",lineHeight:"1.2em",whiteSpace:"nowrap"},metricsSpansTopRow:{},stepName:{boxSizing:"border-box",border:"1px solid white",padding:"0.3rem",textAlign:"center",margin:"1px",padding:"0.2rem",marginTop:"0.7rem",fontSize:"0.9em"},stpMetrics:{boxSizing:"border-box",border:"1px solid white",padding:"0.2rem",margin:"1px",fontSize:"0.9em",whiteSpace:"nowrap"}});return n},Kz=()=>({}),Qz=n=>{const[e,t]=Kt(0),[s,i]=Kt(0),[r,o]=Kt(0),[a,l]=Kt(0),[c,u]=Kt(0),[h,d]=Kt(0),[p,f]=Kt(0),[g,y]=Kt(0),[m,x]=Kt(0),[v,b]=Kt(!1),[w,S]=Kt({});return Bt(()=>{bi(Kz()),S(Jz())},[]),Bt(eB(v),[v]),Bt(()=>{Yz(t,i,o,l,u,d,f,y,x,b,v)},[]),Fe`
    <div id="metrics-container" className="${w.metricsContainer}">
      <div className="${w.metricsDivs}">
        <div className="${w.metricsSpans} ${w.metricsSpansTopRow}">
          TmBox: ${m}
        </div>
        <div className="${w.metricsSpans} ${w.metricsSpansTopRow}">
          Value: ${g}
        </div>
        <div className="${w.metricsSpans} ${w.metricsSpansTopRow}">
          FlwVlcty: ${s}
        </div>
      </div>
      <div className="${w.metricsDivs}">
        <div className="${w.metricsSpans}">FlwTm: ${e}</div>
        <div className="${w.metricsSpans}">ThrPt: ${r}</div>
        <div id="wip-running-total" className="${w.metricsSpans}">
          FlwLoad(WIP): ${c}
        </div>
      </div>
      ${D().get("expdtQueueLength")>0&&Fe` <div className="${w.metricsDivs}">
        <div className="${w.metricsSpans}">FlwTmExp: ${h}</div>
        <div className="${w.metricsSpans}"
          >ThrPtExp: ${a}</span
        >
        <div className="${w.metricsSpans}">WIPExp: ${p}</div>
      </div>`}
    </div>
  `},eB=n=>()=>{const e=document.getElementById("metrics-container");e!==null&&(n===!0?e.style.display="block":e.style.display="none")},tB=(n,e)=>Math.floor(Math.random()*(e-n+1)+n),nB=async()=>{const n={...D().keyValuePairs};delete n.autoMode,delete n.easyStorage,n.fps=1,n.flwItmSizeLimit=1,typeof n.steps=="string"&&(n.steps=JSON.parse(n.steps)),Array.isArray(n.steps)&&(n.steps=n.steps.map(l=>(l.movingLimit=l.limit,l.movingDevUnits=l.devUnits,l)));const e=JSON.stringify(n),t=D().get("sid"),s=window.location.protocol,i=window.location.hostname,r=window.location.port,o=t.split("___")[0]||t,a=`${s}//${i}:${r}/?sid=${o}___${tB(1,1e6)}&share=${btoa(e)}`;try{await navigator.clipboard.writeText(a),alert("The URL has been copied to your clipboard: "+a)}catch(l){console.error("Failed to copy URL to clipboard",l)}};Er(kr("flwshare"));const[P1]=Mr({share:{position:"absolute",zIndex:"50000",boxSizing:"border-box",top:"1.2rem",right:"1.2rem",cursor:"pointer"},shareIcon:{fontSize:"54px",color:"white"}});bi({});const sB=n=>Fe`
    <div id="share-icon" className="${P1.share}">
      <span className="material-icons ${P1.shareIcon}" onClick="${nB}">
        share
      </span>
    </div>
  `;Er(kr("flwcontrols"));const[O1]=Mr({controls:{position:"absolute",zIndex:"50000",boxSizing:"border-box",bottom:"0.5rem",left:"0.5rem",cursor:"pointer"},controlsIcon:{fontSize:"54px",color:"white"}});bi({});const iB=n=>{const[e,t]=Ol(io),[s,i]=Kt(!1),[r,o]=Kt(!0);return Bt(()=>{setTimeout(()=>{oB()},20)},[]),Fe`
    <div id="controls-icon" className="${O1.controls}">
      <span
        className="material-icons ${O1.controlsIcon}"
        onClick="${rB(r,o)}"
      >
        ${r===!0&&Fe`pause_circle`}
        ${r===!1&&Fe`play_circle`}
      </span>
    </div>
  `},rB=(n,e)=>()=>{E().get("paused")===!0?(E().set("paused",!1),e(!0)):(E().set("paused",!0),e(!1))},oB=()=>{const n=document.getElementById("controls-icon");n!==null&&(n.style.display="none")},me=n=>e=>{E().set("isUpdtngCnfg",n)},sT=n=>Fe`
    <div>
      <p>
        The maximum number of days an item can remain in the backlog before
        being removed (0 = no limit). The default is 0.
      </p>
      <label for="backlogDeath"
        >Max. age for items in the backlog (0 = no limit):</label
      >
      <output
        id="backlogDeathOutput"
        name="backlogDeathOutput"
        for="backlogDeath"
        >${(n.backlogDeath||0).toString()}</output
      >
      <input
        type="range"
        id="backlogDeath"
        name="backlogDeath"
        min="0"
        max="500"
        step="1"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.backlogDeath||0).toString()}"
      />
    </div>
  `,iT=n=>Fe`
    <div>
      <p>
        The number of days after which a work item will be removed from the
        system (0 = no limit). The default is 0.
      </p>
      <label for="death">Lifespan for work items (0 = no limit):</label>
      <output id="deathOutput" name="deathOutput" for="death"
        >${(n.death||0).toString()}</output
      >
      <input
        type="range"
        id="death"
        name="death"
        min="0"
        max="500"
        step="1"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.death||0).toString()}"
      />
    </div>
  `,rT=n=>Fe`
    <div>
      <p>
        The percentage of dev units that will focus on expedited items. The
        default is 1 (100%).
      </p>
      <label for="expdtDvUnitsFactor"
        >% of dev units focused on expedited items:</label
      >
      <output
        id="expdtDvUnitsFactorOutput"
        name="expdtDvUnitsFactorOutput"
        for="expdtDvUnitsFactor"
        >${((n.expdtDvUnitsFactor||0)*100).toString()+"%"}</output
      >
      <input
        type="range"
        id="expdtDvUnitsFactor"
        name="expdtDvUnitsFactor"
        min="0"
        max="1"
        step="0.25"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.expdtDvUnitsFactor||0).toString()}"
      />
    </div>
  `,oT=n=>Fe`
    <div>
      <p>
        The number of expedited (unplanned) work items that can be in the system
        at any one time. The default is 0.
      </p>
      <label for="expdtQueueLength"
        >Number of expedited items in the system:</label
      >
      <output
        id="expdtQueueLengthOutput"
        name="expdtQueueLengthOutput"
        for="expdtQueueLength"
        >${(n.expdtQueueLength||0).toString()}</output
      >
      <input
        type="range"
        id="expdtQueueLength"
        name="expdtQueueLength"
        min="0"
        max="20"
        step="1"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.expdtQueueLength||0).toString()}"
      />
    </div>
  `,aT=n=>Fe`
    <div>
      <p>
        The Flow Item Size Limit constraint is closely related to the Pareto
        Point setting above - the point at which 80% of the value is delivered.
        By default the Pareto Point is set to 20%, meaning [a] that 20% of the
        work items in a workflow will deliver 80% of the value - or we might
        think of it in terms of each work item and say that [b] 20% of the work
        for each item will deliver 80% of the value for that item.
      </p>
      <p>
        Anyway, in a nutshell, making work items smaller increases their
        relative value. If the Pareto Point is set to 20%, then setting the Flow
        Item Size Limit to 20% will mean that each work item, although small, is
        delivering 80% of the value of the original larger work item. This is
        because it is the cream of the cream - the most important part of the
        feature. The rest of the work item - the 80% that delivers only 20% of
        the value - has to slog it out in the backlog for priority, where it
        will need to compete with the high-value 20% from the next lot of
        features, and so it might never get done. That's fine - "Maximise the
        work not done".
      </p>
      <label for="flwItmSizeLimit">Work Item Size Limit:</label>
      <output
        id="flwItmSizeLimitOutput"
        name="flwItmSizeLimitOutput"
        for="flwItmSizeLimit"
        >${((n.flwItmSizeLimit||0)*100).toString()+"%"}</output
      >
      <input
        type="range"
        id="flwItmSizeLimit"
        name="flwItmSizeLimit"
        min="0.2"
        max="1"
        step="0.1"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.flwItmSizeLimit||0).toString()}"
      />
    </div>
  `,lT=n=>{const{devUnitsMoveToWork:e,changeSetting:t}=n,[s,i]=Ol(io),r=D().get("devUnitsTerm");return Fe`
    <div>
      <p>
        If ${r} Move to Work is checked, ${r} will be free
        to move to any step where the work is, rather than being fixed to a
        specific step. This models a situation in which there are no 'silos'
        between or within teams. In the future, we plan to make this a sliding
        scale rather than a binary.
      </p>
      <input
        type="checkbox"
        id="devUnitsMoveToWork"
        name="devUnitsMoveToWork"
        checked=${e}
        onChange=${t}
      />
      <label for="devUnitsMoveToWork">
        Allow ${r} to move to the work
      </label>
    </div>
  `},cT=n=>(Bt(()=>{},[]),Fe`
    <div>
      <p>The frame rate of the simulation. The default is 1.</p>
      <label for="fps">FPS:</label>
      <output id="fpsOutput" name="fpsOutput" for="fps"
        >${(n.fps||0).toString()}</output
      >
      <input
        type="range"
        id="fps"
        name="fps"
        min="0.25"
        max="10"
        step="0.25"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.fps||0).toString()}"
      />
    </div>
  `),aB=n=>Fe`
    <div>
      <p>The scale of the work items and the environment. The default is 2.</p>
      <label for="scaleCm">Scale (cm):</label>
      <output id="scaleCmOutput" name="scaleCmOutput" for="scaleCm"
        >${(n.scaleCm||0).toString()}</output
      >
      <input
        type="range"
        id="scaleCm"
        name="scaleCm"
        min="1"
        max="100"
        step="0.5"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.scaleCm||0).toString()}"
      />
    </div>
  `,uT=n=>{const e=D().get("devUnitsTerm");return Fe`
    <div>
      <p>
        The Dev Power Fix is a device for tuning our simulation so that it gets
        as close as we can to the desired overall Flow Time. The reason is that
        we're modelling a complex system and it's pretty much impossible to
        control the overall Flow Time just by setting the Flow Time values for
        each step - the three body problem and all that. A value of 1 for Dev
        Power Fix does nothing. The existing settings for how quickly
        ${e} are getting through the work items is multiplied by 1.
        Values above 1 make ${e} more effective getting through the
        work items at each step and therefore reduce overall Flow Time. Values
        below 1 have the opposite effect - i.e. they increase overall Flow Time
        by making ${e} less effective.
      </p>
      <label for="devPowerFix">Dev Power Fix:</label>
      <output id="devPowerFixOutput" name="devPowerFixOutput" for="devPowerFix"
        >${(n.devPowerFix||1).toString()}</output
      >
      <input
        type="range"
        id="devPowerFix"
        name="devPowerFix"
        min="0"
        max="5"
        step="0.01"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.devPowerFix||1).toString()}"
      />
    </div>
  `},hT=n=>Fe`
    <div>
      <p>
        The percentage of dev capacity that is lost when there is too much WIP.
        The default is 0.
      </p>
      <label for="drag">Dev. capacity lost when there is too much WIP:</label>
      <output id="dragOutput" name="dragOutput" for="drag"
        >${(n.drag||0).toString()}</output
      >
      <input
        type="range"
        id="drag"
        name="drag"
        min="0"
        max="1"
        step="0.1"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.drag||0).toString()}"
      />
    </div>
  `,dT=n=>Fe`
    <div>
      <p>
        The WIP level (as a % of the limit) at which drag begins to take effect.
        The default is 0.5.
      </p>
      <label for="dragPoint">The point at which drag kicks in:</label>
      <output id="dragPointOutput" name="dragPointOutput" for="dragPoint"
        >${(n.dragPoint||0).toString()}</output
      >
      <input
        type="range"
        id="dragPoint"
        name="dragPoint"
        min="0"
        max="0.75"
        step="0.01"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.dragPoint||0).toString()}"
      />
    </div>
  `,pT=n=>Fe`
    <div>
      <p>
        The Pareto Point is 20% by default, meaning that 20% of the work items
        in a workflow will deliver 80% of the value. Setting it to, say, 80%
        means that 80% of the work items in a workflow will deliver 80% of the
        value. This would be basically saying that we always get the expected
        value from every work item, we're never wrong, we never have to guess,
        or iterate. We nail everything first time and users are always happy
        with the results, and use the features we build in the way we expect
        them to use them. Which is pretty unrealistic but it is a basic
        assumption that many people seem to make.
      </p>
      <label for="paretoPoint">80% of value comes from:</label>
      <output id="paretoPointOutput" name="paretoPointOutput" for="paretoPoint"
        >${((n.paretoPoint||0)*100).toString()+"%"}</output
      >
      <input
        type="range"
        id="paretoPoint"
        name="paretoPoint"
        min="0.2"
        max="0.8"
        step="0.1"
        onChange=${n.changeSetting}
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.paretoPoint||0).toString()}"
      />
    </div>
  `,fT=n=>Fe`
    <div>
      <p>
        The number of days in a timebox - e.g. a sprint, or a quarter. The unit
        of measurement is work days, but it is displayed as weeks, where a week
        is 5 work days. So, for a 2-week sprint, put 10 (10 days = 2 x 5 day
        week). For a 12-week quarter, put 60 (60 days = 12 x 5 day weeks).
      </p>
      <label for="timeBox">TimeBox:</label>
      <output id="timeBoxOutput" name="timeBoxOutput" for="timeBox"
        >${(n.timeBox||0).toString()}</output
      >
      <input
        type="range"
        id="timeBox"
        name="timeBox"
        min="1"
        max="60"
        step="1"
        onChange=${n.changeSetting}
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.timeBox||0).toString()}"
      />
    </div>
  `,mT=n=>Fe`
    <div>
      <p>
        The Arrival Rate is the number of new work items that arrive in the
        backlog (Step 0) each day. The WIP Limit of the backlog, if set, will
        override the Arrival Rate.
      </p>
      <p>
        You can set the Arrival Rate to 0, in which case no new work will come
        into the backlog and the workflow will effectively stop. You can also
        set the Arrival Rate to a decimal value, which will mean that the number
        of new work items arriving in the backlog will be a fraction of a work
        item per day. For example, an Arrival Rate of 0.25 means that one new
        work item will arrive in the backlog every 4 days.
      </p>
      <label for="arrivalRate">Arrival Rate:</label>
      <output id="arrivalRateOutput" name="arrivalRateOutput" for="arrivalRate"
        >${(n.arrivalRate||0).toString()}</output
      >
      <input
        type="range"
        id="arrivalRate"
        name="arrivalRate"
        min="0"
        max="100"
        step=".25"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.arrivalRate||0).toString()}"
      />
    </div>
  `,nu=()=>D().get("steps")===void 0?0:D().get("steps").reduce((n,e)=>e.status==="touch"?n+e.devUnits:n,0),Qp=()=>{const n=document.getElementById("start-button");n&&(n.innerHTML=D().get("displayName")||"START");const e=document.getElementById("ARButton");e&&(e.innerHTML=D().get("displayName")||"START")},Ke=(n,e)=>t=>{let s;t.target.type==="checkbox"?s=t.target.checked:(s=t.target.value,fn(s)&&(s=JSON.parse(s))),s!==!0&&s!==!1&&fn(s)&&(s=JSON.parse(s)),n==="easyStorage"||n==="autoMode"?D().setNoCache(n,s):D().set(n,s),e({type:"SET",payload:{key:n,value:s}}),n==="displayName"&&Qp()},lB=(n,e)=>t=>{let s=t.target.value;fn(s)&&(s=JSON.parse(s));const i=[...D().get("steps")],r=i[n],o=r.movingDevUnits;r.movingDevUnits=s,D().set("steps",i);let a=Gd(),l=nu();a>l&&(r.movingDevUnits=o,D().set("steps",i),a=Gd(),l=nu(),r.movingDevUnits+=l-a,D().set("steps",i)),e({type:"SET",payload:{key:"steps",value:i}})},cB=(n,e)=>t=>{let s=t.target.value;fn(s)&&(s=JSON.parse(s));const i=[...D().get("steps")],r=i[n];r.movingLimit=s,D().set("steps",i),e({type:"SET",payload:{key:"steps",value:i}})},uB=()=>{Er(kr("flwparams"));const[n]=Mr({inputHeading:{fontSize:"1rem",padding:"0.2rem",color:"white",fontWeight:"bold",textShadow:"2px 2px 2px #444",backgroundColor:"#ff7f00",marginBottom:"1rem",padding:"0.4rem"},paramsContainer:{position:"absolute",zIndex:"31000",boxSizing:"border-box",width:"100%",height:"100%",paddingTop:"3rem",backgroundColor:"rgba(0, 0, 0, 0.8)",padding:"3rem",paddingBottom:"6rem",top:"0"},params:{position:"absolute",zIndex:"50000",boxSizing:"border-box",bottom:".5rem",right:".5rem",cursor:"pointer"},paramsIcon:{fontSize:"54px",color:"white"},paramsClose:{position:"absolute",zIndex:"33000",boxSizing:"border-box",top:".4rem",right:".4rem",cursor:"pointer"},paramsCloseIcon:{fontSize:"54px",color:"white"}});return n},D0=()=>(bi({}),bi),z1=n=>()=>{const e=document.getElementById("params-container"),t=document.getElementById("params-icon"),s=document.getElementById("params-close-icon"),i=document.getElementById("config-icon"),r=document.getElementById("share-icon"),o=document.getElementById("controls-icon"),a=document.getElementById("linkedin-icon"),l=document.getElementById("home-icon"),c=document.getElementById("display-name");n===!0?(e&&(e.style.display="block"),s&&(s.style.display="block"),r&&(r.style.display="none"),o&&(o.style.display="none"),t&&(t.style.display="none"),i&&(i.style.display="none"),a&&(a.style.display="none"),l&&(l.style.display="none"),c&&(c.style.display="none")):(e&&(e.style.display="none"),s&&(s.style.display="none"),t&&(t.style.display="block"),r&&(r.style.display="block"),o&&(o.style.display="block"),l&&(l.style.display="block"),i&&(i.style.display="none"),a&&(a.style.display="none"),c&&(c.style.display="none"))},hB=n=>{const[e,t]=Kt({});Bt(()=>{bi(D0()),t(uB())},[]);const[s,i]=Ol(io),[r,o]=Kt(!1);Bt(z1(r),[r]),Bt(()=>{const l=setInterval(()=>{if(E().get("sceneInitialized")){const c=document.getElementById("params-icon");c&&(c.style.display="block"),clearInterval(l)}},20);return()=>clearInterval(l)},[]),Bt(()=>{setTimeout(()=>{z1(!1)()},0)},[]),Bt(()=>{setTimeout(()=>{dB()},20)},[]);const a=()=>{o(!r)};return Fe`
    <div
      id="params-close-icon"
      className="${e.paramsClose}"
      onClick="${a}"
    >
      <span className="material-icons ${e.paramsIcon}"> close </span>
    </div>

    <div id="params-container" className="${e.paramsContainer}">
      <fieldset>
        ${s.movingWipLimitsParam===!0&&Fe`
          <!-------------------------------------------------------------------->
          <!-- STEP WIP LIMIT -->
          <!-------------------------------------------------------------------->
          <div className="${e.inputHeading}">WIP Limits</div>
          ${(s.steps||[]).map((l,c)=>l.status==="done"?Fe``:Fe`
                <div>
                  <label for="step${c}MovingLimit"
                    >WIP limit for "${l.name}":</label
                  >
                  <output
                    id="step${c}MovingLimitOutput"
                    name="step${c}MovingLimitOutput"
                    for="step${c}MovingLimitOutput"
                    >${l.movingLimit.toString()}</output
                  >
                  <input
                    type="range"
                    id="step${c}MovingLimit"
                    name="step${c}MovingLimit"
                    min="0"
                    max="${s.paramsMaxWip}"
                    step="1"
                    onChange=${cB(c,i)}
                    onTouchStart=${me(!0)}
                    onTouchEnd=${me(!1)}
                    onMouseDown=${me(!0)}
                    onMouseUp=${me(!1)}
                    value="${l.movingLimit.toString()}"
                  />
                </div>
              `)}
        `}
        ${s.movingDevUnitsParam===!0&&Fe`
          <!-------------------------------------------------------------------->
          <!-- STEP DEV UNITS -->
          <!-------------------------------------------------------------------->
          <div className="${e.inputHeading}">
            Devs / Teams (${Gd()}/${nu()})
          </div>
          ${(s.steps||[]).map((l,c)=>l.status!=="touch"?Fe``:Fe`
                <div>
                  <label for="step${c}DevUnit"
                    >Dev units working on "${l.name}" items:</label
                  >s
                  <output
                    id="step${c}DevUnitsOutput"
                    name="step${c}DevUnitsOutput"
                    for="step${c}DevUnitsOutput"
                    >${(l.movingDevUnits||0).toString()}</output
                  >
                  <input
                    type="range"
                    id="step${c}DevUnit"
                    name="step${c}DevUnit"
                    min="0"
                    max="${nu()}"
                    step="1"
                    onChange=${lB(c,i)}
                    onTouchStart=${me(!0)}
                    onTouchEnd=${me(!1)}
                    onMouseDown=${me(!0)}
                    onMouseUp=${me(!1)}
                    value="${(l.movingDevUnits||0).toString()}"
                  />
                </div>
              `)}
        `}
        ${s.flwItmSizeLimitParam===!0&&Fe`
          <!-------------------------------------------------------------------->
          <!-- FLOW ITEMS SIZE LIMIT -->
          <!-------------------------------------------------------------------->
          <div className="${e.inputHeading}">
            Size Limit for Flow Items (% of current max. size)
          </div>
          <${aT}
            flwItmSizeLimit=${s.flwItmSizeLimit}
            changeSetting=${Ke("flwItmSizeLimit",i)}
          />
        `}
        ${(s.expdtQueueLengthParam===!0||s.expdtDvUnitsFactorParam===!0)&&Fe`
          <!-------------------------------------------------------------------->
          <!-- EXPEDITE QUEUE -->
          <!-------------------------------------------------------------------->
          <div className="${e.inputHeading}">Exptedite Queue</div>
          ${s.expdtQueueLengthParam===!0&&Fe`
            <!-------------------------------------------------------------------->
            <!-- expdtQueueLength -->
            <!-------------------------------------------------------------------->
            <${oT}
              expdtQueueLength=${s.expdtQueueLength}
              changeSetting=${Ke("expdtQueueLength",i)}
            />
          `}
          ${s.expdtDvUnitsFactorParam===!0&&Fe`
            <!-------------------------------------------------------------------->
            <!-- expdtDvUnitsFactor -->
            <!-------------------------------------------------------------------->
            <${rT}
              expdtDvUnitsFactor=${s.expdtDvUnitsFactor}
              changeSetting=${Ke("expdtDvUnitsFactor",i)}
            />
          `}
        `}
        ${(s.deathParam===!0||s.backlogDeathParam===!0)&&Fe`
          <!-------------------------------------------------------------------->
          <!-- AGE -->
          <!-------------------------------------------------------------------->
          <div className="${e.inputHeading}">Work Item Age</div>
          ${s.deathParam===!0&&Fe`
            <!-------------------------------------------------------------------->
            <!-- Death -->
            <!-------------------------------------------------------------------->
            <${iT}
              death=${s.death}
              changeSetting=${Ke("death",i)}
            />
          `}
          ${s.backlogDeathParam===!0&&Fe`
            <!-------------------------------------------------------------------->
            <!-- BacklogDeath -->
            <!-------------------------------------------------------------------->
            <${sT}
              backlogDeath=${s.backlogDeath}
              changeSetting=${Ke("backlogDeath",i)}
            />
          `}
        `}
        ${s.devUnitsMoveToWorkParam===!0&&Fe`
          <!-------------------------------------------------------------------->
          <!-- DEV UNITS MOVE TO WORK -->
          <!-------------------------------------------------------------------->
          <div className="${e.inputHeading}">
            Allow Devs to Move to the Work
          </div>
          <${lT}
            devUnitsMoveToWork=${s.devUnitsMoveToWork}
            changeSetting=${Ke("devUnitsMoveToWork",i)}
          />
        `}
        ${s.devPowerFixParam===!0&&Fe`
          <!-------------------------------------------------------------------->
          <!-- DevPowerFix -->
          <!-------------------------------------------------------------------->
          <div className="${e.inputHeading}">DevPower Fix</div>
          <${uT}
            devPowerFix=${s.devPowerFix}
            changeSetting=${Ke("devPowerFix",i)}
          />
        `}
        ${(s.dragParam===!0||s.dragPointParam===!0)&&Fe`
          <!------------------------------------------------------------------>
          <!-- DRAG -->
          <!------------------------------------------------------------------>
          <div className="${e.inputHeading}">Drag Factor</div>
          ${s.dragParam===!0&&Fe`
            <${hT}
              drag=${s.drag}
              changeSetting=${Ke("drag",i)}
            />
          `}
          ${s.dragPointParam===!0&&Fe`
            <${dT}
              dragPoint=${s.dragPoint}
              changeSetting=${Ke("dragPoint",i)}
            />
          `}
        `}
        ${s.paretoPointParam===!0&&Fe`
          <!------------------------------------------------------------------>
          <!-- PARETO POINT -->
          <!------------------------------------------------------------------>
          <div className="${e.inputHeading}">Pereto Point</div>
          <!-------------------------------------------------------------------->
          <!-- ParetoPoint -->
          <!-------------------------------------------------------------------->
          <${pT}
            paretoPoint=${s.paretoPoint}
            changeSetting=${Ke("paretoPoint",i)}
          />
        `}
        ${s.timeBoxParam===!0&&Fe`
          <!------------------------------------------------------------------>
          <!-- TIMEBOX -->
          <!------------------------------------------------------------------>
          <div className="${e.inputHeading}">TimeBox</div>
          <!-------------------------------------------------------------------->
          <!-- timeBox -->
          <!-------------------------------------------------------------------->
          <${fT}
            timeBox=${s.timeBox}
            changeSetting=${Ke("timeBox",i)}
          />
        `}
        ${s.arrivalRateParam===!0&&Fe`
          <!------------------------------------------------------------------>
          <!-- ARRIVAL RATE -->
          <!------------------------------------------------------------------>
          <div className="${e.inputHeading}">Arrival Rate</div>
          <!-------------------------------------------------------------------->
          <!-- ArrivalRate -->
          <!-------------------------------------------------------------------->
          <${mT}
            arrivalRate=${s.arrivalRate}
            changeSetting=${Ke("arrivalRate",i)}
          />
        `}
        ${s.fpsParam===!0&&Fe`
          <!------------------------------------------------------------------>
          <!-- DISPLAY -->
          <!------------------------------------------------------------------>
          <div className="${e.inputHeading}">Display</div>
          <!-------------------------------------------------------------------->
          <!-- DISPLAY: FRAMES PER SECOND -->
          <!-------------------------------------------------------------------->
          ${s.fpsParam===!0&&Fe`
            <${cT}
              fps=${s.fps}
              changeSetting=${Ke("fps",i)}
            />
          `}
        `}
      </fieldset>
    </div>
    <div
      id="params-icon"
      className="${e.params}"
      onClick="${a}"
    >
      <span className="material-icons ${e.paramsIcon}"> build </span>
    </div>
  `},dB=()=>{const n=document.getElementById("params-icon");n!==null&&(n.style.display="none")},pB=n=>Fe`
    <div>
      <p>
        The minimum time a work item can take to complete, in days. Because
        there's a 1:1 mapping between how long work items take to get done (Flow
        Time), cube size and the value delivered by each cube getting done, this
        is both a display setting for cube size, a factor in overall flow, and a
        factor in determining the value delivered. The default is 1.
      </p>
      <label for="flwTimeMin">Flow Time Min.:</label>
      <output id="flwTimeMinOutput" name="flwTimeMinOutput" for="flwTimeMin"
        >${(n.flwTimeMin||0).toString()}</output
      >
      <input
        type="range"
        id="flwTimeMin"
        name="flwTimeMin"
        min="1"
        max="200"
        step="1"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.flwTimeMin||0).toString()}"
      />
    </div>
  `,fB=n=>Fe`
    <div>
      <p>
        The target flow time for the simulation. The model will attempt to adjust the Dev Power Fix to achieve this value.
      </p>
      <label for="targetFlowTime">Target Flow Time:</label>
      <input
        type="text"
        id="targetFlowTime"
        name="targetFlowTime"
        onInput=${n.changeSetting}
        onFocus=${me(!0)}
        onBlur=${me(!1)}
        value="${(n.targetFlowTime||10).toString()}"
      />
    </div>
  `,mB=n=>Fe`
    <div>
      <p>
        The maximum range for the random distribution of work items in a step.
        The default is 10.
      </p>
      <label for="rangeMax">Range Max:</label>
      <output id="rangeMaxOutput" name="rangeMaxOutput" for="rangeMax"
        >${(n.rangeMax||0).toString()}</output
      >
      <input
        type="range"
        id="rangeMax"
        name="rangeMax"
        min="1"
        max="10"
        step="1"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.rangeMax||0).toString()}"
      />
    </div>
  `,gB=n=>Fe`
    <div>
      <p>
        The rate at which the range of the random distribution increases. The
        default is 0.1.
      </p>
      <label for="rangeIncreaseRate">Range Increase Rate:</label>
      <output
        id="rangeIncreaseRateOutput"
        name="rangeIncreaseRateOutput"
        for="rangeIncreaseRate"
        >${(n.rangeIncreaseRate||0).toString()}</output
      >
      <input
        type="range"
        id="rangeIncreaseRate"
        name="rangeIncreaseRate"
        min="0.1"
        max="1"
        step="0.1"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.rangeIncreaseRate||0).toString()}"
      />
    </div>
  `,xB=n=>Fe`
    <div>
      <p>
        The midpoint of the random distribution of work items in a step. The
        default is 0.1.
      </p>
      <label for="rangeMidpoint">Range Midpoint:</label>
      <output
        id="rangeMidpointOutput"
        name="rangeMidpointOutput"
        for="rangeMidpoint"
        >${(n.rangeMidpoint||0).toString()}</output
      >
      <input
        type="range"
        id="rangeMidpoint"
        name="rangeMidpoint"
        min="0.05"
        max="0.5"
        step="0.05"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.rangeMidpoint||0).toString()}"
      />
    </div>
  `,yB=n=>{const{devUnitsTerm:e,changeSetting:t}=n;return Fe`
    <div>
      <p>
        The Dev Units Term is used to describe the development units (e.g.,
        "Devs", "Engineers", "Squads", "Teams") in the UI. This is a setting
        partly because everyone has their own preference, but also because it
        allows for simulations of different levels or organisation - single
        team, or team of teams.
      </p>
      <label for="devUnitsTerm">Term for "Dev Units":</label>
      <input
        type="text"
        id="devUnitsTerm"
        name="devUnitsTerm"
        value=${e}
        onInput=${t}
        onFocus=${()=>me(!0)}
        onBlur=${()=>me(!1)}
      />
    </div>
  `},bB=n=>{const{displayName:e,changeSetting:t}=n,[s,i]=Ol(io);return Fe`
    <div>
      <p>
        The Display Name is the user-friendly name of the simulation, which will
        be displayed on the start button.
      </p>
      <label for="displayName">Display Name:</label>
      <input
        type="text"
        id="displayName"
        name="displayName"
        value=${e}
        onInput=${t}
        onFocus=${()=>me(!0)}
        onBlur=${()=>{}}
      />
    </div>
  `},vB=n=>{const{sid:e,changeSetting:t}=n;return Fe`
    <div>
      <p>
        The ID is a unique identifier for the simulation configuration. There's
        no database of configs - FlowAttractor is completely stateless. A new ID
        is a completely new simulation. So, before you change the ID (or any
        other config setting you might want to get back) make sure to click on
        the share button and save the link for the current version of the
        simulation.
      </p>
      <label for="sid">ID:</label>
      <input
        type="text"
        id="sid"
        name="sid"
        onInput=${t}
        value="${e}"
        onFocus=${()=>me(!0)}
        onBlur=${()=>me(!1)}
      />
    </div>
  `},wB=n=>Fe`
    <div>
      <label for="status${n.index}">Type of Step:</label>
      <select
        class="browser-default"
        id="status${n.index}"
        name="status${n.index}"
        onChange=${n.changeStepStatus}
        onFocus=${me(!0)}
        onBlur=${me(!1)}
      >
        ${n.status==="backlog"&&Fe`<option value="backlog" selected>Backlog</option>`}
        ${n.status!=="backlog"&&Fe`<option value="backlog">Backlog</option>`}
        ${n.status==="wait"&&Fe`<option value="wait" selected>Wait</option>`}
        ${n.status!=="wait"&&Fe`<option value="wait">Wait</option>`}
        ${n.status==="touch"&&Fe`<option value="touch" selected>Touch</option>`}
        ${n.status!=="touch"&&Fe`<option value="touch">Touch</option>`}
        ${n.status==="done"&&Fe`<option value="done" selected>Done</option>`}
        ${n.status!=="done"&&Fe`<option value="done">Done</option>`}
      </select>
      <br />
    </div>
  `,SB=n=>Fe`
    <div>
      <label for="step${n.index}Name">Name:</label>
      <input
        type="text"
        id="step${n.index}Name"
        name="step${n.index}Name"
        onInput=${n.changeStepName}
        value="${n.name}"
        onFocus=${me(!0)}
        onBlur=${me(!1)}
      />
    </div>
  `,_B=()=>{Er(kr("flwsettings"));const[n]=Mr({inputHeading:{fontSize:"1rem",padding:"0.2rem",color:"white",fontWeight:"bold",textShadow:"2px 2px 2px #444",backgroundColor:"#ff7f00",marginBottom:"1rem",padding:"0.4rem"},stepHeading:{fontSize:"1rem",padding:"0.2rem",marginTop:"1rem",marginBottom:"1rem",backgroundColor:"#fabd20",padding:"0.4rem"},settingsContainer:{position:"absolute",zIndex:"21000",boxSizing:"border-box",width:"100%",height:"100%",backgroundColor:"rgba(0, 0, 0, 0.8)",padding:"3rem",paddingBottom:"6rem",top:"0"},settings:{position:"absolute",zIndex:"50000",boxSizing:"border-box",bottom:"0.5rem",right:"5rem",cursor:"pointer"},settingsIcon:{fontSize:"54px",color:"white"},settingsClose:{position:"absolute",zIndex:"23000",boxSizing:"border-box",top:".4rem",right:".4rem",cursor:"pointer"},settingsCloseIcon:{fontSize:"54px",color:"white"},radioContainer:{display:"flex",marginBottom:"1rem"}});return n},CB=(n,e)=>t=>{let s=t.target.value;fn(s)&&(s=JSON.parse(s));const i=[...D().get("steps")],r=i[n];r.name=s,D().set("steps",i),e({type:"SET",payload:{key:"steps",value:i}})},TB=(n,e)=>t=>{let s=t.target.value;fn(s)&&(s=JSON.parse(s));const i=[...D().get("steps")],r=i[n];r.limit=s,r.movingLimit=s,D().set("steps",i),e({type:"SET",payload:{key:"steps",value:i}})},IB=(n,e)=>t=>{let s=t.target.value;fn(s)&&(s=JSON.parse(s));const i=[...D().get("steps")],r=i[n];r.devUnits=s,r.movingDevUnits=s,D().set("steps",i),e({type:"SET",payload:{key:"steps",value:i}})},EB=(n,e)=>t=>{let s=t.target.value;fn(s)&&(s=JSON.parse(s));const i=[...D().get("steps")],r=i[n];r.status=s,D().set("steps",i),e({type:"SET",payload:{key:"steps",value:i}})},MB=(n,e)=>t=>{let s=t.target.value;fn(s)&&(s=JSON.parse(s));const i=[...D().get("steps")],r=i[n];r.flwTimeAtStart=s,D().set("steps",i),e({type:"SET",payload:{key:"steps",value:i}})},kB=(n,e)=>t=>{let s=t.target.value;fn(s)&&(s=JSON.parse(s));const i=[...D().get("steps")],r=i[n];r.actualFlwTime=s,D().set("steps",i),e({type:"SET",payload:{key:"steps",value:i}})},NB=n=>{const[e,t]=Kt({});Bt(()=>{bi(D0()),t(_B())},[]);const[s,i]=Ol(io);return Fe`
    <!------------------------------------------------------------------>
    <!-- Steps -->
    <!------------------------------------------------------------------>
    <div>
      <p>
        If "Make WIP Limits per step an editable parameter" is checked, the
        users will be able to change the WIP limit of each step while the
        simulation is running.
      </p>
      <input
        type="checkbox"
        id="movingWipLimitsParam"
        name="movingWipLimitsParam"
        onChange=${Ke("movingWipLimitsParam",i)}
        checked=${s.movingWipLimitsParam===!0}
      />
      <label for="movingWipLimitsParam"
        >Make WIP Limits per step an editable parameter</label
      >
    </div>
    <div>
      <p>
        If "Make ${D().get("devUnitsTerm")} per step an editable
        parameter" is checked, the users will be able to change the number of
        ${D().get("devUnitsTerm")} for each step while the simulation is
        running.
      </p>
      <input
        type="checkbox"
        id="movingDevUnitsParam"
        name="movingDevUnitsParam"
        onChange=${Ke("movingDevUnitsParam",i)}
        checked=${s.movingDevUnitsParam===!0}
      />
      <label for="movingDevUnitsParam"
        >Make ${D().get("devUnitsTerm")} per step an editable
        parameter</label
      >
    </div>
    ${(s.steps||[]).map((r,o)=>Fe`
          <div>
            <div className="${e.stepHeading}">Step ${o}</div>

            <p>The name of the step appears as a label in the workflow UI.</p>
            <${SB}
              index=${o}
              name=${r.name}
              changeStepName=${CB(o,i)}
            />

            <p>
              There are 4 types of steps: "Backlog", "Wait", "Touch", and
              "Done". The first step (which is called "Step 0" because array
              notation) must be a "Backlog" step. "Touch" steps are active steps
              where work is being done. "Wait" steps are queues where work items
              wait for space in the next touch step (like "Ready for Test", for
              example). The last step must be a "Done" step.
            </p>
            <${wB}
              index=${o}
              status=${r.status}
              changeStepStatus=${EB(o,i)}
            />

            <p>
              The WIP limit for this step. If the number of work items in the
              step hits this limit, the step will not accept new work items
              until the number of work items is below the limit.
            </p>
            <p>
              In the real world, workflow steps usually have a limit - it just
              isn't explicitly stated. So, adding a WIP ("work in progress")
              limit to a step is simply a way of describing the implicit limit
              that already exists in the real-world workflow that we're trying
              to model.
            </p>
            <label for="step${o}Limit">WIP Limit:</label>
            <output
              id="step${o}LimitOutput"
              name="step${o}LimitOutput"
              for="step${o}LimitOutput"
              >${r.limit.toString()}</output
            >
            <input
              type="range"
              id="step${o}Limit"
              name="step${o}Limit"
              min="0"
              max="200"
              step="1"
              onChange=${TB(o,i)}
              onTouchStart=${me(!0)}
              onTouchEnd=${me(!1)}
              onMouseDown=${me(!0)}
              onMouseUp=${me(!1)}
              value="${r.limit.toString()}"
            />
          </div>

          ${r.status==="touch"&&Fe`
            <div>
              <p>
                The number of ${D().get("devUnitsTerm")} that are
                responsible for getting this step of the workflow done. Don't
                double-dip here - assume that each one of the
                ${D().get("devUnitsTerm")} is primarily responsible for
                one step in the workflow. Later, you can toggle a setting that
                will allow ${D().get("devUnitsTerm")} to be shared between
                steps.
              </p>
              <label for="step${o}DevUnits">Dev Units</label>
              <output
                id="step${o}DevUnitsOutput"
                name="step${o}DevUnitsOutput"
                for="step${o}DevUnitsOutput"
                >${(r.devUnits||0).toString()}</output
              >
              <input
                type="range"
                id="step${o}DevUnits"
                name="step${o}DevUnits"
                min="1"
                max="100"
                step="1"
                onChange=${IB(o,i)}
                onTouchStart=${me(!0)}
                onTouchEnd=${me(!1)}
                onMouseDown=${me(!0)}
                onMouseUp=${me(!1)}
                value="${(r.devUnits||0).toString()}"
              />
            </div>
            <div>
              <p>
                Flow Time at Start is the "ideal" time for a step. If you're
                setting it to be the same as the Actual Flow Time (below), then
                you're saying that the current actual flow time is the baseline
                - an arbitrary '100%' against which all future flow times will
                be measured.
              </p>
              <p>
                If you set it to something that is NOT the current actual flow
                time, then you're saying that the current actual flow time is
                NOT the baseline, and that the aim of improving the system is to
                get the flow time back to this "ideal" flow time.
              </p>
              <p>
                This setting is integral to the Value calculation, and these two
                approaches reflect different ways of thinking about the value
                produced by the team. Is the team doing fine but trying to
                increase the amount of value they produce to, say, 300% of the
                current total? Then make the Flow Time at Start the same as the
                Actual Flow Time. Is the team less productive than they think
                they should be (based on Little's Law, for example)? In that
                case, set the Flow Time at Start to be less than the Actual Fow
                Time, and try to improve the flow time <i>back</i> to the Flow
                Time at Start, which will be 100% Value.
              </p>

              <label for="step${o}FlwTimeAtStart"
                >Av. Flow Time at Start:</label
              >
              <output
                id="step${o}FlwTimeAtStartOutput"
                name="step${o}FlwTimeAtStartOutput"
                for="step${o}FlwTimeAtStartOutput"
                >${(r.flwTimeAtStart||0).toString()}</output
              >
              <input
                type="range"
                id="step${o}FlwTimeAtStart"
                name="step${o}FlwTimeAtStart"
                min="0.5"
                max="200"
                step="0.5"
                onChange=${MB(o,i)}
                onTouchStart=${me(!0)}
                onTouchEnd=${me(!1)}
                onMouseDown=${me(!0)}
                onMouseUp=${me(!1)}
                value="${(r.flwTimeAtStart||0).toString()}"
              />
            </div>
            <div>
              <p>
                The current, real-world time for a step, as gleaned from
                observation. For example, we might use a "time in status" Jira
                plugin, of else manually keep track of how long issues spend in
                which states.
              </p>
              <label for="step${o}ActualFlwTime"
                >Actual Av. Flow Time:</label
              >
              <output
                id="step${o}ActualFlwTimeOutput"
                name="step${o}ActualFlwTimeOutput"
                for="step${o}ActualFlwTimeOutput"
                >${(r.actualFlwTime||0).toString()}</output
              >
              <input
                type="range"
                id="step${o}ActualFlwTime"
                name="step${o}ActualFlwTime"
                min="0.5"
                max="200"
                step="0.5"
                onChange=${kB(o,i)}
                onTouchStart=${me(!0)}
                onTouchEnd=${me(!1)}
                onMouseDown=${me(!0)}
                onMouseUp=${me(!1)}
                value="${(r.actualFlwTime||0).toString()}"
              />
            </div>
          `}
        `)}
  `},AB=n=>Fe`
    <div>
      <p>
        The number of steps in the workflow, including the "backlog" and the
        "done" steps. For example, a simple "To Do", "Doing", "Done" workflow is
        3 steps. "To Do", "In Progress", "Ready for Review", "Reviewing", "Done"
        is 5 steps.
      </p>
      <label for="numberOfSteps">No. of Steps:</label>
      <output
        id="numberOfStepsOutput"
        name="numberOfStepsOutput"
        for="numberOfSteps"
        >${(n.numberOfSteps||0).toString()}</output
      >
      <input
        type="range"
        id="numberOfSteps"
        name="numberOfSteps"
        min="1"
        max="12"
        step="1"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.numberOfSteps||0).toString()}"
      />
    </div>
  `,RB=n=>Fe`
    <div>
      <p>
        The maximum value for the WIP limit sliders in the main UI. The default
        is 20.
      </p>
      <label for="paramsMaxWip">Params Max. WIP:</label>
      <output
        id="paramsMaxWipOutput"
        name="paramsMaxWipOutput"
        for="paramsMaxWip"
        >${(n.paramsMaxWip||0).toString()}</output
      >
      <input
        type="range"
        id="paramsMaxWip"
        name="paramsMaxWip"
        min="1"
        max="200"
        step="1"
        onChange=${n.changeSetting}
        onTouchStart=${me(!0)}
        onTouchEnd=${me(!1)}
        onMouseDown=${me(!0)}
        onMouseUp=${me(!1)}
        value="${(n.paramsMaxWip||0).toString()}"
      />
    </div>
  `,$B=n=>{const[e,t]=Kt(!1);Bt(()=>{try{E().set("isUpdtngCnfg",!0);const i=localStorage.getItem("staggeredStart");if(i){const r=i.split("___")[0];if(r){const o=JSON.parse(r);o!==n.staggeredStart?(console.log("Initial setting of staggeredStart from localStorage:",o),t(!0),n.changeSetting({target:{type:"checkbox",checked:o}}),D().set("staggeredStart",o),setTimeout(()=>{t(!1),E().set("isUpdtngCnfg",!1)},100)):E().set("isUpdtngCnfg",!1)}else E().set("isUpdtngCnfg",!1)}else E().set("isUpdtngCnfg",!1)}catch(i){console.error("Error reading staggeredStart from localStorage:",i),E().set("isUpdtngCnfg",!1)}},[]);const s=i=>{e||(E().set("isUpdtngCnfg",!0),n.changeSetting(i),console.log("StaggeredStart manually changed to:",i.target.checked),D().set("staggeredStart",i.target.checked),setTimeout(()=>{E().set("isUpdtngCnfg",!1)},100))};return Fe`
    <div data-cy="staggered-start">
      <label>Staggered Start:</label>
      <input
        type="checkbox"
        name="staggered-start"
        id="staggered-start-checkbox"
        checked=${n.staggeredStart===!0}
        onChange=${s}
      />
      <div>
        When enabled, new flow items will start with different ages and
        remaining days, simulating items that are already in progress. When
        disabled, all new items start with age 0 and full flow time.
      </div>
    </div>
  `},DB=n=>()=>{const e=document.getElementById("config-container"),t=document.getElementById("config-icon"),s=document.getElementById("config-close-icon"),i=document.getElementById("params-icon"),r=document.getElementById("share-icon"),o=document.getElementById("controls-icon"),a=document.getElementById("linkedin-icon");document.getElementById("home-icon");const l=document.getElementById("display-name");n===!0?(e&&(e.style.display="block"),t&&(t.style.display="none"),s&&(s.style.display="block"),i&&(i.style.display="none"),r&&(r.style.display="none"),o&&(o.style.display="none"),a&&(a.style.display="none"),l&&(l.style.display="none")):(t&&(t.style.display="block"),r&&(r.style.display="block"),a&&(a.style.display="block"),l&&(l.style.display="block"),e&&(e.style.display="none"),s&&(s.style.display="none"),i&&(i.style.display="none"),o&&(o.style.display="none"),Qp())},LB=()=>{Er(kr("flwconfig"));const[n]=Mr({configContainer:{position:"absolute",zIndex:"41000",boxSizing:"border-box",width:"100%",height:"100%",backgroundColor:"rgba(0, 0, 0, 0.8)",padding:"48px",paddingBottom:"96px",top:"0",overflowY:"auto",color:"white"},config:{position:"absolute",zIndex:"50000",boxSizing:"border-box",bottom:"8px",right:"8px",cursor:"pointer"},configIcon:{fontSize:"54px",color:"white"},configClose:{position:"absolute",zIndex:"43000",boxSizing:"border-box",top:"6px",right:"6px",cursor:"pointer"},field:{display:"grid",gridTemplateColumns:"1fr 200px",alignItems:"center",marginBottom:"16px","@media (max-width: 768px)":{gridTemplateColumns:"1fr"}},checkboxContainer:{display:"flex",alignItems:"center",justifySelf:"end","@media (max-width: 768px)":{justifySelf:"start",marginTop:"8px"}},stepHeading:{fontSize:"16px",padding:"3px",marginTop:"16px",marginBottom:"16px",backgroundColor:"#fabd20"},radioContainer:{display:"flex",marginBottom:"16px"},legend:{fontSize:"19px",fontWeight:"bold",marginBottom:"16px",color:"#ff7f00"},legendSub:{fontSize:"14px",fontWeight:"bold",color:"#fabd20"},legendH3:{fontSize:"14px",fontWeight:"bold",color:"#ff7f00"},editableCheckbox:{width:"20px",height:"20px"}});return n};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB=1e-7,PB=1e-4;class gT{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class L0{refCount(e){return vs("refCount")}incRef(e){return vs("incRef")}timerAvailable(){return!0}time(e){return vs("time")}read(e){return vs("read")}readSync(e){return vs("readSync")}readToGPU(e,t){return vs("readToGPU")}numDataIds(){return vs("numDataIds")}disposeData(e,t){return vs("disposeData")}write(e,t,s){return vs("write")}move(e,t,s,i,r){return vs("move")}createTensorFromGPUData(e,t,s){return vs("createTensorFromGPUData")}memory(){return vs("memory")}floatPrecision(){return vs("floatPrecision")}epsilon(){return this.floatPrecision()===32?FB:PB}dispose(){return vs("dispose")}}function vs(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,nl(n,e,t)}function ea(n,e,t){return Math.max(n,Math.min(e,t))}function F0(n){return n%2===0?n:n+1}function nl(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function zB(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function A(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function P0(n,e,t=""){A(Et(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function xT(n){A(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ce(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function Et(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Tl(n){return n%1===0}function ux(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function pl(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function B1(n,e=i=>0,t,s){return new Promise((i,r)=>{let o=0;const a=()=>{if(n()){i();return}o++;const l=e(o);if(t!=null&&o>=t){r();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function yT(n,e){let t=1,s=-1;for(let r=0;r<n.length;++r)if(n[r]>=0)t*=n[r];else if(n[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(n[r]<0)throw Error(`Shapes can not be < 0. Found ${n[r]} at dim ${r}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const i=n.slice();return i[s]=e/t,i}function dt(n,e){const t=e.length;return n=n==null?e.map((s,i)=>i):[].concat(n),A(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),A(n.every(s=>Tl(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function go(n,e){const t=[],s=[],i=e!=null&&Array.isArray(e)&&e.length===0,r=e==null||i?null:dt(e,n).sort();let o=0;for(let a=0;a<n.length;++a){if(r!=null){if(r[o]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(r[o]==null||r[o]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),r[o]<=a&&o++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}function Hn(n,e){return an(n,e)}function an(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function BB(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function VB(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function bT(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function ep(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function UB(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Cu(n){return typeof n=="string"||n instanceof String}function WB(n){return typeof n=="boolean"}function hx(n){return typeof n=="number"}function Kl(n){return Array.isArray(n)?Kl(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":hx(n)?"float32":Cu(n)?"string":WB(n)?"bool":"float32"}function dx(n){return!!(n&&n.constructor&&n.call&&n.apply)}function px(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function je(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function vT(n,e,t,s=!1){const i=new Array;if(e.length===1){const r=e[0]*(s?2:1);for(let o=0;o<r;o++)i[o]=t[n+o]}else{const r=e[0],o=e.slice(1),a=o.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<r;l++)i[l]=vT(n+l*a,o,t,s)}return i}function mi(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((i,r)=>i*r)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return vT(0,n,e,t)}function GB(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function O0(n,e){const t=jn(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function jn(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function wT(n,e){const t=n.reduce((s,i)=>s*i,1);if(e==null||e==="float32")return mi(n,new Float32Array(t));if(e==="int32")return mi(n,new Int32Array(t));if(e==="bool")return mi(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Nr(n){n.forEach(e=>{A(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function ji(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let i=0;i<n.length-1;++i)s+=t[i]*n[i];return s}function Ql(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let i=0;i<s.length-1;++i)s[i]=Math.floor(n/t[i]),n-=s[i]*t[i];return s[s.length-1]=n,s}function z0(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V1="tfjsflags";class HB{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=jB,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(se().getBool("IS_TEST")||se().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const i=this.urlFlags[e];se().getBool("IS_TEST")||se().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${i}.`),this.set(e,i)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(z0(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);V1 in e&&e[V1].split(",").forEach(s=>{const[i,r]=s.split(":");this.urlFlags[i]=qB(i,r)})}}function jB(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(XB(e,s[0],s[1]),s.join("="))),e}function XB(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function qB(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function se(){return ST}let ST=null;function ZB(n){ST=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Cg;function _T(){if(Cg==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Cg=n}return Cg}function YB(){const n=_T();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function B0(n,e){const t=YB();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const ef="Abs",Tu="Acos",Iu="Acosh",ec="Add",V0="AddN",U0="All",W0="Any",tf="ArgMax",nf="ArgMin",Eu="Asin",Mu="Asinh",ku="Atan",Nu="Atanh",Au="Atan2",sf="AvgPool",G0="AvgPoolGrad",rf="AvgPool3D",H0="AvgPool3DGrad",of="BatchMatMul",af="BatchToSpaceND",j0="Bincount",X0="BitwiseAnd",JB="BroadcastTo",CT="BroadcastArgs",Ru="Cast",$u="Ceil",Du="ClipByValue",q0="Complex",lf="ComplexAbs",cf="Concat",uf="Conv2D",Z0="Conv2DBackpropFilter",hf="Conv2DBackpropInput",df="Conv3D",Y0="Conv3DBackpropFilterV2",J0="Conv3DBackpropInputV2",Lu="Cos",Fu="Cosh",K0="Cumprod",pf="Cumsum",Q0="CropAndResize",ey="DenseBincount",ty="DepthToSpace",ff="DepthwiseConv2dNative",ny="DepthwiseConv2dNativeBackpropFilter",sy="DepthwiseConv2dNativeBackpropInput",TT="Diag",mf="Dilation2D",fx="Dilation2DBackpropInput",mx="Dilation2DBackpropFilter",KB="Draw",Pu="RealDiv",iy="Einsum",Ou="Elu",ry="EluGrad",zu="Erf",gf="Equal",Bu="Exp",xf="ExpandDims",Vu="Expm1",oy="FFT",ay="Fill",ly="FlipLeftRight",Uu="Floor",Wu="FloorDiv",yf="FusedBatchNorm",bf="GatherV2",IT="GatherNd",vf="Greater",Gu="GreaterEqual",Hu="Identity",cy="IFFT",uy="Imag",ju="IsFinite",Xu="IsInf",qu="IsNan",wf="LeakyRelu",Sf="Less",_f="LessEqual",ET="LinSpace",Zu="Log",Yu="Log1p",Cf="LogicalAnd",Tf="LogicalNot",If="LogicalOr",QB="LogSoftmax",Ef="LRN",hy="LRNGrad",Mf="Max",Ju="Maximum",kf="MaxPool",dy="MaxPoolGrad",Nf="MaxPool3D",py="MaxPool3DGrad",MT="MaxPoolWithArgmax",Af="Mean",Rf="Min",Ku="Minimum",$f="MirrorPad",Qu="Mod",kT="Multinomial",eh="Multiply",Df="Neg",Lf="NotEqual",fy="NonMaxSuppressionV3",my="NonMaxSuppressionV4",gy="NonMaxSuppressionV5",Ff="OnesLike",Pf="OneHot",Of="Pack",zf="PadV2",th="Pow",Bf="Prelu",Vf="Prod",NT="RaggedGather",AT="RaggedRange",RT="RaggedTensorToTensor",xy="Range",yy="Real",nh="Reciprocal",sh="Relu",Uf="Reshape",Wf="ResizeNearestNeighbor",by="ResizeNearestNeighborGrad",Gf="ResizeBilinear",vy="ResizeBilinearGrad",ih="Relu6",Hf="Reverse",rh="Round",oh="Rsqrt",$T="ScatterNd",DT="TensorScatterUpdate",LT="SearchSorted",jf="Select",ah="Selu",Xf="Slice",lh="Sin",ch="Sinh",uh="Sign",hh="Sigmoid",dh="Softplus",ph="Sqrt",qf="Sum",Zf="SpaceToBatchND",Yf="SplitV",Jf="Softmax",FT="SparseFillEmptyRows",PT="SparseReshape",OT="SparseSegmentMean",zT="SparseSegmentSum",BT="SparseToDense",fh="SquaredDifference",wy="Square",Sy="StaticRegexReplace",_y="StridedSlice",VT="StringNGrams",UT="StringSplit",WT="StringToHashBucketFast",mh="Sub",gh="Tan",xh="Tanh",yh="Tile",Cy="TopK",Ty="Transform",fl="Transpose",Iy="Unique",Kf="Unpack",Qf="UnsortedSegmentSum",em="ZerosLike",bh="Step",eV="FromPixels",Ey="RotateWithOffset",tp="_FusedMatMul",np="FusedConv2D",GT="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(...n){se().getBool("IS_TEST")||se().getBool("PROD")||console.warn(...n)}function tV(...n){se().getBool("IS_TEST")||se().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sp=B0("kernelRegistry",()=>new Map),gx=B0("gradRegistry",()=>new Map);function U1(n,e){const t=jT(n,e);return sp.get(t)}function W1(n){return gx.get(n)}function G1(n){const e=sp.entries(),t=[];for(;;){const{done:s,value:i}=e.next();if(s)break;const[r,o]=i,[a]=r.split("_");a===n&&t.push(o)}return t}function HT(n){const{kernelName:e,backendName:t}=n,s=jT(e,t);sp.has(s)&&Ls(`The kernel '${e}' for backend '${t}' is already registered`),sp.set(s,n)}function nV(n){const{kernelName:e}=n;gx.has(e)&&se().getBool("DEBUG")&&Ls(`Overriding the gradient for '${e}'`),gx.set(e,n)}function jT(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XT(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var xa=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function sV(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function iV(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var i=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,i.get?i:{enumerable:!0,get:function(){return n[s]}})}),t}var qT=Ht,js=null;try{js=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ht(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}Ht.prototype.__isLong__;Object.defineProperty(Ht.prototype,"__isLong__",{value:!0});function ks(n){return(n&&n.__isLong__)===!0}Ht.isLong=ks;var H1={},j1={};function ya(n,e){var t,s,i;return e?(n>>>=0,(i=0<=n&&n<256)&&(s=j1[n],s)?s:(t=jt(n,(n|0)<0?-1:0,!0),i&&(j1[n]=t),t)):(n|=0,(i=-128<=n&&n<128)&&(s=H1[n],s)?s:(t=jt(n,n<0?-1:0,!1),i&&(H1[n]=t),t))}Ht.fromInt=ya;function Xs(n,e){if(isNaN(n))return e?Vo:qs;if(e){if(n<0)return Vo;if(n>=ZT)return KT}else{if(n<=-q1)return Cs;if(n+1>=q1)return JT}return n<0?Xs(-n,e).neg():jt(n%Il|0,n/Il|0,e)}Ht.fromNumber=Xs;function jt(n,e,t){return new Ht(n,e,t)}Ht.fromBits=jt;var ip=Math.pow;function My(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return qs;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return My(n.substring(1),e,t).neg();for(var i=Xs(ip(t,8)),r=qs,o=0;o<n.length;o+=8){var a=Math.min(8,n.length-o),l=parseInt(n.substring(o,o+a),t);if(a<8){var c=Xs(ip(t,a));r=r.mul(c).add(Xs(l))}else r=r.mul(i),r=r.add(Xs(l))}return r.unsigned=e,r}Ht.fromString=My;function Ti(n,e){return typeof n=="number"?Xs(n,e):typeof n=="string"?My(n,e):jt(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}Ht.fromValue=Ti;var X1=65536,rV=1<<24,Il=X1*X1,ZT=Il*Il,q1=ZT/2,Z1=ya(rV),qs=ya(0);Ht.ZERO=qs;var Vo=ya(0,!0);Ht.UZERO=Vo;var cl=ya(1);Ht.ONE=cl;var YT=ya(1,!0);Ht.UONE=YT;var xx=ya(-1);Ht.NEG_ONE=xx;var JT=jt(-1,2147483647,!1);Ht.MAX_VALUE=JT;var KT=jt(-1,-1,!0);Ht.MAX_UNSIGNED_VALUE=KT;var Cs=jt(0,-2147483648,!1);Ht.MIN_VALUE=Cs;var Re=Ht.prototype;Re.toInt=function(){return this.unsigned?this.low>>>0:this.low};Re.toNumber=function(){return this.unsigned?(this.high>>>0)*Il+(this.low>>>0):this.high*Il+(this.low>>>0)};Re.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Cs)){var t=Xs(e),s=this.div(t),i=s.mul(t).sub(this);return s.toString(e)+i.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var r=Xs(ip(e,6),this.unsigned),o=this,a="";;){var l=o.div(r),c=o.sub(l.mul(r)).toInt()>>>0,u=c.toString(e);if(o=l,o.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};Re.getHighBits=function(){return this.high};Re.getHighBitsUnsigned=function(){return this.high>>>0};Re.getLowBits=function(){return this.low};Re.getLowBitsUnsigned=function(){return this.low>>>0};Re.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Cs)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};Re.isZero=function(){return this.high===0&&this.low===0};Re.eqz=Re.isZero;Re.isNegative=function(){return!this.unsigned&&this.high<0};Re.isPositive=function(){return this.unsigned||this.high>=0};Re.isOdd=function(){return(this.low&1)===1};Re.isEven=function(){return(this.low&1)===0};Re.equals=function(e){return ks(e)||(e=Ti(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Re.eq=Re.equals;Re.notEquals=function(e){return!this.eq(e)};Re.neq=Re.notEquals;Re.ne=Re.notEquals;Re.lessThan=function(e){return this.comp(e)<0};Re.lt=Re.lessThan;Re.lessThanOrEqual=function(e){return this.comp(e)<=0};Re.lte=Re.lessThanOrEqual;Re.le=Re.lessThanOrEqual;Re.greaterThan=function(e){return this.comp(e)>0};Re.gt=Re.greaterThan;Re.greaterThanOrEqual=function(e){return this.comp(e)>=0};Re.gte=Re.greaterThanOrEqual;Re.ge=Re.greaterThanOrEqual;Re.compare=function(e){if(ks(e)||(e=Ti(e)),this.eq(e))return 0;var t=this.isNegative(),s=e.isNegative();return t&&!s?-1:!t&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Re.comp=Re.compare;Re.negate=function(){return!this.unsigned&&this.eq(Cs)?Cs:this.not().add(cl)};Re.neg=Re.negate;Re.add=function(e){ks(e)||(e=Ti(e));var t=this.high>>>16,s=this.high&65535,i=this.low>>>16,r=this.low&65535,o=e.high>>>16,a=e.high&65535,l=e.low>>>16,c=e.low&65535,u=0,h=0,d=0,p=0;return p+=r+c,d+=p>>>16,p&=65535,d+=i+l,h+=d>>>16,d&=65535,h+=s+a,u+=h>>>16,h&=65535,u+=t+o,u&=65535,jt(d<<16|p,u<<16|h,this.unsigned)};Re.subtract=function(e){return ks(e)||(e=Ti(e)),this.add(e.neg())};Re.sub=Re.subtract;Re.multiply=function(e){if(this.isZero())return qs;if(ks(e)||(e=Ti(e)),js){var t=js.mul(this.low,this.high,e.low,e.high);return jt(t,js.get_high(),this.unsigned)}if(e.isZero())return qs;if(this.eq(Cs))return e.isOdd()?Cs:qs;if(e.eq(Cs))return this.isOdd()?Cs:qs;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Z1)&&e.lt(Z1))return Xs(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,i=this.high&65535,r=this.low>>>16,o=this.low&65535,a=e.high>>>16,l=e.high&65535,c=e.low>>>16,u=e.low&65535,h=0,d=0,p=0,f=0;return f+=o*u,p+=f>>>16,f&=65535,p+=r*u,d+=p>>>16,p&=65535,p+=o*c,d+=p>>>16,p&=65535,d+=i*u,h+=d>>>16,d&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=o*l,h+=d>>>16,d&=65535,h+=s*u+i*c+r*l+o*a,h&=65535,jt(p<<16|f,h<<16|d,this.unsigned)};Re.mul=Re.multiply;Re.divide=function(e){if(ks(e)||(e=Ti(e)),e.isZero())throw Error("division by zero");if(js){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?js.div_u:js.div_s)(this.low,this.high,e.low,e.high);return jt(t,js.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Vo:qs;var s,i,r;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Vo;if(e.gt(this.shru(1)))return YT;r=Vo}else{if(this.eq(Cs)){if(e.eq(cl)||e.eq(xx))return Cs;if(e.eq(Cs))return cl;var o=this.shr(1);return s=o.div(e).shl(1),s.eq(qs)?e.isNegative()?cl:xx:(i=this.sub(e.mul(s)),r=s.add(i.div(e)),r)}else if(e.eq(Cs))return this.unsigned?Vo:qs;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=qs}for(i=this;i.gte(e);){s=Math.max(1,Math.floor(i.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),l=a<=48?1:ip(2,a-48),c=Xs(s),u=c.mul(e);u.isNegative()||u.gt(i);)s-=l,c=Xs(s,this.unsigned),u=c.mul(e);c.isZero()&&(c=cl),r=r.add(c),i=i.sub(u)}return r};Re.div=Re.divide;Re.modulo=function(e){if(ks(e)||(e=Ti(e)),js){var t=(this.unsigned?js.rem_u:js.rem_s)(this.low,this.high,e.low,e.high);return jt(t,js.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Re.mod=Re.modulo;Re.rem=Re.modulo;Re.not=function(){return jt(~this.low,~this.high,this.unsigned)};Re.and=function(e){return ks(e)||(e=Ti(e)),jt(this.low&e.low,this.high&e.high,this.unsigned)};Re.or=function(e){return ks(e)||(e=Ti(e)),jt(this.low|e.low,this.high|e.high,this.unsigned)};Re.xor=function(e){return ks(e)||(e=Ti(e)),jt(this.low^e.low,this.high^e.high,this.unsigned)};Re.shiftLeft=function(e){return ks(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?jt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):jt(0,this.low<<e-32,this.unsigned)};Re.shl=Re.shiftLeft;Re.shiftRight=function(e){return ks(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?jt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):jt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Re.shr=Re.shiftRight;Re.shiftRightUnsigned=function(e){if(ks(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var s=this.low;return jt(s>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?jt(t,0,this.unsigned):jt(t>>>e-32,0,this.unsigned)};Re.shru=Re.shiftRightUnsigned;Re.shr_u=Re.shiftRightUnsigned;Re.toSigned=function(){return this.unsigned?jt(this.low,this.high,!1):this};Re.toUnsigned=function(){return this.unsigned?this:jt(this.low,this.high,!0)};Re.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Re.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Re.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Ht.fromBytes=function(e,t,s){return s?Ht.fromBytesLE(e,t):Ht.fromBytesBE(e,t)};Ht.fromBytesLE=function(e,t){return new Ht(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Ht.fromBytesBE=function(e,t){return new Ht(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const QT=sV(qT),oV=aR({__proto__:null,default:QT},[qT]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Po=QT||oV;function tm(n){return Po.fromString(n,!0,16)}const eI=tm("c3a5c85c97cb3127"),Do=tm("b492b66fbe98f273"),ns=tm("9ae16a3b2f90404f");function yx(n){return n.xor(n.shru(47))}function tI(n,e,t){const s=n.slice(e,e+t);return Po.fromBytes(Array.from(s),!0,!0)}function Ot(n,e){return tI(n,e,8)}function Y1(n,e){return tI(n,e,4)}function kn(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function eo(n,e,t=tm("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let i=e.xor(s).mul(t);return i=i.xor(i.shru(47)),i=i.mul(t),i}function aV(n,e,t,s,i,r){i=i.add(n),r=kn(r.add(i).add(s),21);const o=i;return i=i.add(e),i=i.add(t),r=r.add(kn(i,44)),[i.add(s),r.add(o)]}function Cd(n,e,t,s){return aV(Ot(n,e),Ot(n,e+8),Ot(n,e+16),Ot(n,e+24),t,s)}function lV(n,e=n.length){if(e>=8){const t=ns.add(e*2),s=Ot(n,0).add(ns),i=Ot(n,e-8),r=kn(i,37).mul(t).add(s),o=kn(s,25).add(i).mul(t);return eo(r,o,t)}if(e>=4){const t=ns.add(e*2),s=Y1(n,0);return eo(s.shl(3).add(e),Y1(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],i=n[e-1],r=t+(s<<8),o=e+(i<<2);return yx(ns.mul(r).xor(eI.mul(o))).mul(ns)}return ns}function cV(n,e=n.length){const t=ns.add(e*2),s=Ot(n,0).mul(Do),i=Ot(n,8),r=Ot(n,e-8).mul(t),o=Ot(n,e-16).mul(ns);return eo(kn(s.add(i),43).add(kn(r,30)).add(o),s.add(kn(i.add(ns),18)).add(r),t)}function uV(n,e=n.length){const t=ns.add(e*2),s=Ot(n,0).mul(ns),i=Ot(n,8),r=Ot(n,e-8).mul(t),o=Ot(n,e-16).mul(ns),a=kn(s.add(i),43).add(kn(r,30)).add(o),l=eo(a,s.add(kn(i.add(ns),18)).add(r),t),c=Ot(n,16).mul(t),u=Ot(n,24),h=a.add(Ot(n,e-32)).mul(t),d=l.add(Ot(n,e-24)).mul(t);return eo(kn(c.add(u),43).add(kn(h,30)).add(d),c.add(kn(u.add(s),18)).add(h),t)}function hV(n,e=n.length){const t=Po.fromNumber(81,!0);if(e<=32)return e<=16?lV(n,e):cV(n,e);if(e<=64)return uV(n,e);let s=t,i=t.mul(Do).add(113),r=yx(i.mul(ns).add(113)).mul(ns),o=[Po.UZERO,Po.UZERO],a=[Po.UZERO,Po.UZERO];s=s.mul(ns).add(Ot(n,0));let l=0;const c=(e-1>>6)*64,u=c+(e-1&63)-63;do s=kn(s.add(i).add(o[0]).add(Ot(n,l+8)),37).mul(Do),i=kn(i.add(o[1]).add(Ot(n,l+48)),42).mul(Do),s=s.xor(a[1]),i=i.add(o[0]).add(Ot(n,l+40)),r=kn(r.add(a[0]),33).mul(Do),o=Cd(n,l,o[1].mul(Do),s.add(a[0])),a=Cd(n,l+32,r.add(a[1]),i.add(Ot(n,l+16))),[r,s]=[s,r],l+=64;while(l!==c);const h=Do.add(r.and(255).shl(1));return l=u,a[0]=a[0].add(e-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),s=kn(s.add(i).add(o[0]).add(Ot(n,l+8)),37).mul(h),i=kn(i.add(o[1]).add(Ot(n,l+48)),42).mul(h),s=s.xor(a[1].mul(9)),i=i.add(o[0].mul(9).add(Ot(n,l+40))),r=kn(r.add(a[0]),33).mul(h),o=Cd(n,l,o[1].mul(h),s.add(a[0])),a=Cd(n,l+32,r.add(a[1]),i.add(Ot(n,l+16))),[r,s]=[s,r],eo(eo(o[0],a[0],h).add(yx(i).mul(eI)).add(r),eo(o[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(n,e){return e==="string"?to(n):ba([n],e)}function dV(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function ba(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=ta(n)),se().getBool("DEBUG")&&BB(n,e),dV(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function us(){return se().platform.now()}function to(n,e="utf-8"){return e=e||"utf-8",se().platform.encode(n,e)}function ao(n,e="utf-8"){return e=e||"utf-8",se().platform.decode(n,e)}function Qs(n){return se().platform.isTypedArray!=null?se().platform.isTypedArray(n):XT(n)}function ta(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||z0(n)||n==null||Qs(n)&&t)e.push(n);else if(Array.isArray(n)||Qs(n))for(let s=0;s<n.length;++s)ta(n[s],e,t);else{let s=-1;for(const i of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(i)&&(s=Math.max(s,Number(i)));for(let i=0;i<=s;i++)ta(n[i],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pV{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new mV)}profileKernel(e,t,s){let i;const r=()=>{i=s()};let o;const a=us();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(r);else{r();for(const c of i)c.dataSync();o=Promise.resolve({kernelMs:us()-a})}if(se().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<i.length;c++){const u=i[c];u.data().then(h=>{fV(h,u.dtype,e)})}return{kernelName:e,outputs:i,inputs:t,timeMs:o.then(c=>c.kernelMs),extraInfo:o.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:i,inputs:r,extraInfo:o}=e;s.forEach(a=>{Promise.all([a.data(),i,o]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],r,l[2])})})}}function fV(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const i=n[s];if(isNaN(i)||!isFinite(i))return console.warn(`Found ${i} in the result of '${t}'`),!0}return!1}class mV{logKernelProfile(e,t,s,i,r,o){const a=typeof i=="number"?pl(`${i}ms`,9):i.error,l=pl(e,25),c=t.rank,u=t.size,h=pl(t.shape.toString(),14);let d="";for(const p in r){const f=r[p];if(f!=null){const g=f.shape||t.shape,y=g.length;d+=`${p}: ${y}D ${y>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${h}	%c${u}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(n,e,t){const s={},i={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const c=n[l],u=c.inputs;for(const h in u){const d=u[h];let p=!1;for(let f=0;f<e.length;f++)if(s[d.id]){c.outputs.forEach(g=>s[g.id]=!0),p=!0,i[c.id]=!0;break}if(p)break}}const r={};r[t.id]=!0;const o={};for(let l=n.length-1;l>=0;l--){const c=n[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(r[c.outputs[h].id]){for(const d in u)r[u[d].id]=!0,o[c.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const c=n[l];if(i[c.id]&&o[c.id]){const u={};for(const d in c.inputs){const p=c.inputs[d];s[p.id]&&(u[d]=p)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,a.push(h)}}return a}function xV(n,e,t,s){for(let i=e.length-1;i>=0;i--){const r=e[i],o=[];if(r.outputs.forEach(l=>{const c=n[l.id];c!=null?o.push(c):o.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const a=r.gradient(o);for(const l in r.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=t(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=r.inputs[l];if(!Et(c.shape,u.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=c;else{const h=n[u.id];n[u.id]=s(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J1=20,Ic=3,Tg=7;function yV(n,e,t,s){const i=je(e),r=bV(n,e,t,i),o=e.length,a=zd(n,e,t,i,r),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${o}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function bV(n,e,t,s){const i=ce(e),r=s[s.length-1],o=new Array(r).fill(0),a=e.length,l=t==="complex64"?$c(n):n;if(a>1)for(let c=0;c<i/r;c++){const u=c*r;for(let h=0;h<r;h++)o[h]=Math.max(o[h],Rc(l[u+h],0,t).length)}return o}function Rc(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Tg))} + ${parseFloat(n[1].toFixed(Tg))}j`:Cu(n)?s=`'${n}'`:t==="bool"?s=nI(n):s=parseFloat(n.toFixed(Tg)).toString(),pl(s,e)}function nI(n){return n===0?"false":"true"}function zd(n,e,t,s,i,r=!0){const o=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){const g=$c(n);return[Rc(g[0],0,t)]}return t==="bool"?[nI(n[0])]:[n[0].toString()]}if(l===1){if(a>J1){const y=Ic*o;let m=Array.from(n.slice(0,y)),x=Array.from(n.slice((a-Ic)*o,a*o));return t==="complex64"&&(m=$c(m),x=$c(x)),["["+m.map((v,b)=>Rc(v,i[b],t)).join(", ")+", ..., "+x.map((v,b)=>Rc(v,i[a-Ic+b],t)).join(", ")+"]"]}return["["+(t==="complex64"?$c(n):Array.from(n)).map((y,m)=>Rc(y,i[m],t)).join(", ")+"]"]}const c=e.slice(1),u=s.slice(1),h=s[0]*o,d=[];if(a>J1){for(let g=0;g<Ic;g++){const y=g*h,m=y+h;d.push(...zd(n.slice(y,m),c,t,u,i,!1))}d.push("...");for(let g=a-Ic;g<a;g++){const y=g*h,m=y+h;d.push(...zd(n.slice(y,m),c,t,u,i,g===a-1))}}else for(let g=0;g<a;g++){const y=g*h,m=y+h;d.push(...zd(n.slice(y,m),c,t,u,i,g===a-1))}const p=l===2?",":"";d[0]="["+(a>0?d[0]+p:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=`,
`;for(let g=2;g<l;g++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":f),d}function $c(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class On{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=ce(e),s!=null){const i=s.length;A(i===this.size,()=>`Length of values '${i}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||an(t,this.size),this.strides=je(e)}set(e,...t){t.length===0&&(t=[0]),A(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const i of e){if(i<0||i>=this.shape[t]){const r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let s=e[e.length-1];for(let i=0;i<e.length-1;++i)s+=this.strides[i]*e[i];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return hi().makeTensor(this.values,this.shape,this.dtype)}}let hi=null,sl=null;function vV(n){hi=n}function wV(n){sl=n}class bn{constructor(e,t,s,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ce(e),this.strides=je(e),this.dataId=s,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return sl.buffer(this.shape,this.dtype,e)}bufferSync(){return sl.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return mi(this.shape,e,this.dtype==="complex64")}arraySync(){return mi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=hi().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>ao(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),hi().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=hi().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>ao(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await hi().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),hi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return sl.print(this,e)}clone(){return this.throwIfDisposed(),sl.clone(this)}toString(e=!1){const t=this.dataSync();return yV(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),sl.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),hi().makeVariable(this,e,t,s)}}Object.defineProperty(bn,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function ae(){return B0("Tensor",()=>bn)}ae();class rp extends bn{constructor(e,t,s,i){super(e.shape,e.dtype,e.dataId,i),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Et(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);hi().disposeTensor(this),this.dataId=e.dataId,hi().incRef(this,null)}dispose(){hi().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(rp,Symbol.hasInstance,{value:n=>n instanceof bn&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var K1;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(K1||(K1={}));var bx;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(bx||(bx={}));var vx;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(vx||(vx={}));var wx;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(wx||(wx={}));var Sx;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Sx||(Sx={}));const SV={float32:wx,int32:bx,bool:vx,complex64:Sx};function Is(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return SV[n][e]}function ky(n){return Is(n,"int32")}function sI(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function iI(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(n,e){if(n.dtype===e.dtype)return[n,e];const t=Is(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function rI(n){const e=[];return oI(n,e,new Set),e}function oI(n,e,t){if(n==null)return;if(n instanceof bn){e.push(n);return}if(!_V(n))return;const s=n;for(const i in s){const r=s[i];t.has(r)||(t.add(r),oI(r,e,t))}}function _V(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ig(n){return n.kernelName!=null}class Q1{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class El{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Q1}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(Ls(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new pV(this.backendInstance),!0}setupRegisteredKernels(){G1(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){G1(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof L0)&&typeof s.then=="function"){const i=++this.pendingBackendInitId,r=s.then(o=>i<this.pendingBackendInitId?!1:(this.registry[e]=o,this.pendingBackendInit=null,!0)).catch(o=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Ls(`Initialization of backend ${e} failed`),Ls(o.stack||o.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Ls(`Initialization of backend ${e} failed`),Ls(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:i,asyncInit:r}=this.initializeBackend(s);if(r||i)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),i=s.backend,r=this.readSync(t),o=i.refCount(t);i.disposeData(t,!0),s.backend=e,e.move(t,r,s.shape,s.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let i;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(i),()=>(i=t(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(e,t,s){e();try{const i=s();return t(),i}catch(i){throw t(),i}}nextTensorId(){return El.nextTensorId++}nextVariableId(){return El.nextVariableId++}clone(e){const t=Y.runKernel(Hu,{x:e}),s={x:e},i=o=>({x:()=>{const a="float32",l={x:o},c={dtype:a};return Y.runKernel(Ru,l,c)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[t],i,r,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(U1(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const i=this.backend.numDataIds();let r=0;s.forEach(l=>{r+=l.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=i-t-r-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const i=this.isTapeOn(),r=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=Ig(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Ig(e)){const{kernelName:f,inputs:g,attrs:y}=e;this.backendName==null&&this.backend;const m=U1(f,this.backendName);A(m!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const x=this.backend.numDataIds();l=m.kernelFunc({inputs:g,attrs:y,backend:this.backend});const v=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,v);const b=v.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(i){const w=this.getTensorsForGradient(f,g,b);s=this.saveTensorsForBackwardMode(w)}return b}}else{const{forwardFunc:f}=e,g=y=>{i&&(s=y.map(m=>this.keep(this.clone(m))))};a=()=>{const y=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,g));const m=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,m),m}}const{inputs:u,attrs:h}=e,d=Ig(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(p=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),i&&this.addTapeNode(c,u,t,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(f=>u[f]!=null?u[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const i=W1(e);if(i!=null){const r=i.inputsToSave||[],o=i.outputsToSave||[];let a;i.saveAllInputs?(A(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(c=>t[c])):a=r.map(c=>t[c]);const l=s.filter((c,u)=>o[u]);return a.concat(l)}return[]}makeTensor(e,t,s,i){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",i=i||this.backend;let r=e;s==="string"&&Cu(e[0])&&(r=e.map(l=>to(l)));const o=i.write(r,t,s),a=new bn(t,s,o,this.nextTensorId());if(this.trackTensor(a,i),s==="string"){const l=this.state.tensorInfo.get(o),c=UB(r);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(e,t,s,i){s=s||"float32";const r={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(r,i)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:i,dtype:r}=e,o=new bn(i,r,s,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e,t=!0,s,i){s=s||this.nextVariableId().toString(),i!=null&&i!==e.dtype&&(e=e.cast(i));const r=new rp(e,t,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*ep(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof rp||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*ep(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const i of this.state.activeProfile.kernels)i.kernelTimeMs=await i.kernelTimeMs,i.extraInfo=await i.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,i,r,o){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:r},l=W1(e);l!=null&&(i=l.gradFunc),i!=null&&(a.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=s[h],p=jn(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return u}),i(c.length>1?c:c[0],r,o))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=rI(e),s=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const o=this.state.activeScope.track[r];!o.kept&&!s.has(o.id)&&o.dispose()}const i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===i.id&&this.track(r)})}gradients(e,t,s,i=!1){if(A(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));A(r instanceof bn,()=>"The result y returned by f() must be a tensor.");const o=gV(this.state.activeTape,t,r);if(!i&&o.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[r.id]=s??CV(r.shape),xV(a,o,c=>this.tidy(c),TV);const l=t.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(e){return A(dx(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{A(t.every(a=>a instanceof bn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const i={};t.forEach((a,l)=>{i[l]=a});const r=(a,l)=>(s=e(...t,l),A(s.value instanceof bn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),A(dx(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),o=(a,l)=>{const c=s.gradFunc(a,l),u=Array.isArray(c)?c:[c];A(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),A(u.every(d=>d instanceof bn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:o,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=us(),s=await this.backend.time(e);return s.wallMs=us()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Q1;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}El.nextTensorId=0;El.nextVariableId=0;function CV(n){const e=O0(ce(n),"float32");return Y.makeTensor(e,n,"float32")}function aI(){const n=_T();if(n._tfengine==null){const e=new HB(n);n._tfengine=new El(e)}return ZB(n._tfengine.ENV),vV(()=>n._tfengine),n._tfengine}const Y=aI();function TV(n,e){const t={a:n,b:e};return Y.runKernel(ec,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(){return typeof navigator<"u"&&navigator!=null}function lI(n){if(n||IV()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function cI(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xs=se();xs.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});xs.registerFlag("IS_BROWSER",()=>cI());xs.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");xs.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));xs.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));xs.registerFlag("PROD",()=>!1);xs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>xs.getBool("DEBUG"));xs.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);xs.registerFlag("IS_TEST",()=>!1);xs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>xs.getBool("DEBUG"));xs.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);xs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);xs.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nm(n,e){let t=n;if(Qs(n))return e==="string"?[]:[n.length];if(sI(n)){const i=n.channels||"RGBA";return[n.height,n.width*i.length]}else if(iI(n))return[n.buffer.size/(e==null?4:ep(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||Qs(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&se().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&uI(n,s,[]),s}function uI(n,e,t){if(t=t||[],!Array.isArray(n)&&!Qs(n)){A(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}A(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),A(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let i=0;i<n.length;++i)uI(n[i],s,t.concat(i))}function eS(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function U(n,e,t,s="numeric"){if(n instanceof ae())return eS(s,n.dtype,e,t),n;let i=Kl(n);if(i!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(i=s),eS(s,i,e,t),n==null||!Qs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const r=nm(n,i);!Qs(n)&&!Array.isArray(n)&&(n=[n]);const a=i!=="string"?ba(n,i):ta(n,[],!0);return Y.makeTensor(a,r,i)}function hI(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((r,o)=>U(r,`${e}[${o}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EV="__op";function K(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+EV;const i=(...r)=>{Y.startScope(t);try{const o=s(...r);return z0(o)&&console.error("Cannot return a Promise inside of tidy."),Y.endScope(o),o}catch(o){throw Y.endScope(null),o}};return Object.defineProperty(i,"name",{value:t,configurable:!0}),i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n,e){const t=U(n,"real","complex"),s=U(e,"imag","complex");P0(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const i={real:t,imag:s};return Y.runKernel(q0,i)}const Ml=K({complex_:MV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sm(n,e,t,s){if(s==null)s=Kl(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(iI(n)||sI(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return Y.backend.createTensorFromGPUData(n,e||t,s)}if(!Qs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Nr(e);const i=ce(e),r=ce(t);A(i===r,()=>`Based on the provided shape, [${e}], the tensor should have ${i} values but has ${r}`);for(let o=0;o<t.length;++o){const a=t[o],l=o===t.length-1?a!==ce(e.slice(o)):!0;A(t[o]===e[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Qs(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?ba(n,s):ta(n,[],!0),Y.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dI(n,e,t){const s=nm(n,t);return sm(n,e,s,t)}class tc{static join(e){return new tc(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>Qs(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const i=e[s];s!==e.length-1&&i.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+i.byteLength;this.shards.push({buffer:i,start:t,end:r}),t=r}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const i=t-e,r=new ArrayBuffer(i),o=new Uint8Array(r);let a=0;for(let l=s;l<this.shards.length;l++){const c=this.shards[l],h=e+a-c.start,d=a,f=Math.min(t,c.end)-c.start,g=new Uint8Array(c.buffer,h,f-h);if(o.set(g,d),a+=g.length,t<c.end)break}return r}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(i){return e<i.start?-1:e>=i.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=kV(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function kV(n,e){let t=0,s=n.length;for(;t<=s;){const i=Math.floor((s-t)/2)+t,r=e(n[i]);if(r===0)return i;r<0?s=i:t=i+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $i(){return Y}function tS(){return Y.memory()}function te(n,e){return Y.tidy(n,e)}function ft(n){rI(n).forEach(t=>t.dispose())}function Xi(n){return Y.keep(n)}function pI(n,e,t=1){return Y.registerBackend(n,e,t)}function NV(){return Y.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nS=4;async function sS(n,e){const t=[],s=[],i=Array.isArray(n)?n.map(o=>o.name):Object.keys(n);for(let o=0;o<i.length;++o){const a=i[o],l=Array.isArray(n)?n[o].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((y,m)=>y+m.length,0)+nS*d.length,f=new Uint8Array(p);let g=0;for(let y=0;y<d.length;y++){const m=d[y],x=new Uint8Array(new Uint32Array([m.length]).buffer);f.set(x,g),g+=nS,f.set(m,g),g+=m.length}h(f)});s.push(u)}else s.push(l.data());e!=null&&(c.group=e),t.push(c)}const r=await Promise.all(s);return{data:AV(r),specs:t}}function AV(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(r=>{if(e+=r.byteLength,t.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(e);let i=0;return t.forEach(r=>{s.set(new Uint8Array(r.buffer),i),i+=r.byteLength}),s.buffer}const Ny=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function iS(n){return Ny?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function RV(n){if(Ny)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,i=e.length;s<i;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function $V(n){if(Ny){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function DV(n){return tc.join(n)}function fI(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:iS(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:iS(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new tc(n.weightData).byteLength}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Qn.instance==null&&(Qn.instance=new Qn),Qn.instance}static registerSaveRouter(e){Qn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Qn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Qn.getHandlers(e,"save")}static getLoadHandlers(e,t){return Qn.getHandlers(e,"load",t)}static getHandlers(e,t,s){const i=[];return(t==="load"?Qn.getInstance().loadRouters:Qn.getInstance().saveRouters).forEach(o=>{const a=o(e,s);a!==null&&i.push(a)}),i}}const LV=n=>Qn.getSaveHandlers(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _x="tensorflowjs",Cx=1,Uo="models_store",Hr="model_info_store";function mI(){if(!se().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Tx(n){const e=n.result;e.createObjectStore(Uo,{keyPath:"modelPath"}),e.createObjectStore(Hr,{keyPath:"modelPath"})}class na{constructor(e){if(this.indexedDB=mI(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,i)=>{const r=this.indexedDB.open(_x,Cx);r.onupgradeneeded=()=>Tx(r),r.onsuccess=()=>{const o=r.result;if(t==null){const a=o.transaction(Uo,"readonly"),c=a.objectStore(Uo).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return o.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=u=>(o.close(),i(c.error)),a.oncomplete=()=>o.close()}else{t.weightData=tc.join(t.weightData);const a=fI(t),l=o.transaction(Hr,"readwrite");let c=l.objectStore(Hr),u;try{u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(d){return i(d)}let h;u.onsuccess=()=>{h=o.transaction(Uo,"readwrite");const d=h.objectStore(Uo);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(f){return i(f)}p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{c=l.objectStore(Hr);const g=c.delete(this.modelPath);g.onsuccess=()=>(o.close(),i(p.error)),g.onerror=y=>(o.close(),i(p.error))}},u.onerror=d=>(o.close(),i(u.error)),l.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},r.onerror=o=>i(r.error)})}}na.URL_SCHEME="indexeddb://";const gI=n=>se().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(na.URL_SCHEME)?FV(n.slice(na.URL_SCHEME.length)):null;Qn.registerSaveRouter(gI);Qn.registerLoadRouter(gI);function FV(n){return new na(n)}function PV(n){return n.startsWith(na.URL_SCHEME)?n.slice(na.URL_SCHEME.length):n}class OV{constructor(){this.indexedDB=mI()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(_x,Cx);s.onupgradeneeded=()=>Tx(s),s.onsuccess=()=>{const i=s.result,r=i.transaction(Hr,"readonly"),a=r.objectStore(Hr).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;e(l)},a.onerror=l=>(i.close(),t(a.error)),r.oncomplete=()=>i.close()},s.onerror=i=>t(s.error)})}async removeModel(e){return e=PV(e),new Promise((t,s)=>{const i=this.indexedDB.open(_x,Cx);i.onupgradeneeded=()=>Tx(i),i.onsuccess=()=>{const r=i.result,o=r.transaction(Hr,"readwrite"),a=o.objectStore(Hr),l=a.get(e);let c;l.onsuccess=()=>{if(l.result==null)return r.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const u=a.delete(e),h=()=>{c=r.transaction(Uo,"readwrite");const p=c.objectStore(Uo).delete(e);p.onsuccess=()=>t(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};u.onsuccess=h,u.onerror=d=>(h(),r.close(),s(l.error))}},l.onerror=u=>(r.close(),s(l.error)),o.oncomplete=()=>{c==null?r.close():c.oncomplete=()=>r.close()}},i.onerror=r=>s(i.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gr="/",il="tensorflowjs_models",xI="info",zV="model_topology",BV="weight_specs",VV="weight_data",UV="model_metadata";function yI(n){return{info:[il,n,xI].join(gr),topology:[il,n,zV].join(gr),weightSpecs:[il,n,BV].join(gr),weightData:[il,n,VV].join(gr),modelMetadata:[il,n,UV].join(gr)}}function bI(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function WV(n){const e=n.split(gr);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(gr)}function GV(n){return n.startsWith(sa.URL_SCHEME)?n.slice(sa.URL_SCHEME.length):n}class sa{constructor(e){if(!se().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=yI(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),i=fI(e),r=tc.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,RV(r));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:i}}catch{throw bI(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=i;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const a=JSON.parse(r);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=$V(o),t}}sa.URL_SCHEME="localstorage://";const vI=n=>se().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(sa.URL_SCHEME)?HV(n.slice(sa.URL_SCHEME.length)):null;Qn.registerSaveRouter(vI);Qn.registerLoadRouter(vI);function HV(n){return new sa(n)}class jV{constructor(){A(se().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),A(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=il+gr,s=gr+xI;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(t)&&r.endsWith(s)){const o=WV(r);e[o]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=GV(e);const t=yI(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return bI(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rS="://";class Di{constructor(){this.managers={}}static getInstance(){return Di.instance==null&&(Di.instance=new Di),Di.instance}static registerManager(e,t){A(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(rS)&&(e=e.slice(0,e.indexOf(rS))),A(e.length>0,()=>"scheme must not be an empty string.");const s=Di.getInstance();A(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=Di.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Di.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XV{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!se().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const i=this.functionRefs[s.data.index];i(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return XT(e)}}if(se().get("IS_BROWSER")){se().setPlatform("browser",new XV);try{Di.registerManager(sa.URL_SCHEME,new jV)}catch{}try{Di.registerManager(na.URL_SCHEME,new OV)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qV={importFetch:()=>require("node-fetch")};let Eg;class ZV{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return se().global.fetch!=null?se().global.fetch(e,t):(Eg==null&&(Eg=qV.importFetch()),Eg(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}se().get("IS_NODE")&&!se().get("IS_BROWSER")&&se().setPlatform("node",new ZV);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ht(n,e="float32",t){return e=e||"float32",Nr(n),new On(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n,e){const t=U(n,"x","cast");if(!VB(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},i={dtype:e};return Y.runKernel(Ru,s,i)}const Oe=K({cast_:YV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n){const t={x:U(n,"x","clone","string_or_numeric")};return Y.runKernel(Hu,t)}const qo=K({clone_:JV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */aI();const QV={buffer:ht,cast:Oe,clone:qo,print:KV};wV(QV);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(n,e){let t=U(n,"a","add"),s=U(e,"b","add");[t,s]=cn(t,s);const i={a:t,b:s};return Y.runKernel(ec,i)}const Me=K({add_:eU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tU(n,e){let t=U(n,"a","floorDiv"),s=U(e,"b","floorDiv");[t,s]=cn(t,s);const i={a:t,b:s};return Y.runKernel(Wu,i)}const wI=K({floorDiv_:tU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n,e){let t=U(n,"a","div"),s=U(e,"b","div");if([t,s]=cn(t,s),t.dtype==="int32"&&s.dtype==="int32")return wI(t,s);const i={a:t,b:s},r={};return Y.runKernel(Pu,i,r)}const Je=K({div_:nU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n,e){let t=U(n,"a","mul"),s=U(e,"b","mul");[t,s]=cn(t,s);const i={a:t,b:s};return Y.runKernel(eh,i)}const q=K({mul_:sU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iU(n){const e=U(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return Y.runKernel(lf,t)}else{const t={x:e};return Y.runKernel(ef,t)}}const es=K({abs_:iU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(n){const t={x:U(n,"x","acos")};return Y.runKernel(Tu,t)}const oU=K({acos_:rU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(n){const t={x:U(n,"x","acosh")};return Y.runKernel(Iu,t)}const lU=K({acosh_:aU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cU(n,e=null,t=!1){const i={x:U(n,"x","all","bool")},r={axis:e,keepDims:t};return Y.runKernel(U0,i,r)}const SI=K({all_:cU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(n,e=null,t=!1){const i={x:U(n,"x","any","bool")},r={axis:e,keepDims:t};return Y.runKernel(W0,i,r)}const Ix=K({any_:uU});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hU(n,e=0){const s={x:U(n,"x","argMax")},i={axis:e};return Y.runKernel(tf,s,i)}const su=K({argMax_:hU});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(n,e=0){const s={x:U(n,"x","argMin")},i={axis:e};return Y.runKernel(nf,s,i)}const pU=K({argMin_:dU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fU(n){const t={x:U(n,"x","asin")};return Y.runKernel(Eu,t)}const mU=K({asin_:fU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gU(n){const t={x:U(n,"x","asinh")};return Y.runKernel(Mu,t)}const xU=K({asinh_:gU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(n){const t={x:U(n,"x","atan")};return Y.runKernel(ku,t)}const bU=K({atan_:yU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vU(n,e){let t=U(n,"a","atan2"),s=U(e,"b","atan2");[t,s]=cn(t,s);const i={a:t,b:s};return Y.runKernel(Au,i)}const wU=K({atan2_:vU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(n){const t={x:U(n,"x","atanh")};return Y.runKernel(Nu,t)}const _U=K({atanh_:SU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vh(n,e,t,s,i="NHWC",r){const o=n[3],a=[...e,o],l=Rr(i);return Bn(n,a,t,r,s,null,null,l)}function ti(n,e,t,s,i,r,o="channelsLast"){const[a,l]=iu(e);let c;if(o==="channelsLast")c=[a,l,n[3],n[3]];else if(o==="channelsFirst")c=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return Bn(n,c,t,s,i,r,!1,o)}function Ar(n,e,t,s,i,r,o="NDHWC"){const[a,l,c]=Ex(e);let u,h;if(o==="NDHWC")h="channelsLast",u=[a,l,c,n[4],n[4]];else if(o==="NCDHW")h="channelsFirst",u=[a,l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return yo(n,u,t,s,i,!1,h,r)}function Bn(n,e,t,s,i,r,o=!1,a="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h]=n;else if(a==="channelsFirst")[l,h,c,u]=n;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,f]=e,[g,y]=iu(t),[m,x]=iu(s),v=ml(d,m),b=ml(p,x),{padInfo:w,outHeight:S,outWidth:_}=IU(i,c,u,g,y,v,b,r,a),I=o?f*h:f;let N;return a==="channelsFirst"?N=[l,I,S,_]:a==="channelsLast"&&(N=[l,S,_,I]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:h,outHeight:S,outWidth:_,outChannels:I,padInfo:w,strideHeight:g,strideWidth:y,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:b,dilationHeight:m,dilationWidth:x,inShape:n,outShape:N,filterShape:e}}function yo(n,e,t,s,i,r=!1,o="channelsLast",a){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,h,d]=n;else if(o==="channelsFirst")[l,d,c,u,h]=n;else throw new Error(`Unknown dataFormat ${o}`);const[p,f,g,,y]=e,[m,x,v]=Ex(t),[b,w,S]=Ex(s),_=ml(p,b),I=ml(f,w),N=ml(g,S),{padInfo:k,outDepth:M,outHeight:T,outWidth:C}=EU(i,c,u,h,m,x,v,_,I,N,a),R=r?y*d:y;let L;return o==="channelsFirst"?L=[l,R,M,T,C]:o==="channelsLast"&&(L=[l,M,T,C,R]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:M,outHeight:T,outWidth:C,outChannels:R,padInfo:k,strideDepth:m,strideHeight:x,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:_,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationDepth:b,dilationHeight:w,dilationWidth:S,inShape:n,outShape:L,filterShape:e}}function CU(n,e,t,s,i){s==null&&(s=Ay(n,e,t));const r=n[0],o=n[1],a=ru((r-e+2*s)/t+1,i),l=ru((o-e+2*s)/t+1,i);return[a,l]}function TU(n,e,t,s,i,r){i==null&&(i=Ay(n,e[0],s[0]));const o=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*i>=e[a]&&(o[a]=ru((n[a]-e[a]+2*i)/s[a]+1,r));return o}function Ay(n,e,t,s=1){const i=ml(e,s);return Math.floor((n[0]*(t-1)-t+i)/2)}function iu(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Ex(n){return typeof n=="number"?[n,n,n]:n}function ml(n,e){return e<=1?n:n+(n-1)*(e-1)}function IU(n,e,t,s,i,r,o,a,l){let c,u,h;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=CU([e,t],r,s,n,a);u=p[0],h=p[1]}else if(n==="same"){u=Math.ceil(e/s),h=Math.ceil(t/i);const d=Math.max(0,(u-1)*s+r-e),p=Math.max(0,(h-1)*i+o-t),f=Math.floor(d/2),g=d-f,y=Math.floor(p/2),m=p-y;c={top:f,bottom:g,left:y,right:m,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-r+1)/s),h=Math.ceil((t-o+1)/i);else if(typeof n=="object"){const d=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],f=l==="channelsLast"?n[2][0]:n[3][0],g=l==="channelsLast"?n[2][1]:n[3][1];c={top:d,bottom:p,left:f,right:g,type:d===0&&p===0&&f===0&&g===0?"VALID":"EXPLICIT"},u=ru((e-r+d+p)/s+1,a),h=ru((t-o+f+g)/i+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:u,outWidth:h}}function EU(n,e,t,s,i,r,o,a,l,c,u){let h,d,p,f;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const y=TU([e,t,s,1],[a,l,c],1,[i,r,o],n,u);d=y[0],p=y[1],f=y[2]}else if(n==="same"){d=Math.ceil(e/i),p=Math.ceil(t/r),f=Math.ceil(s/o);const g=(d-1)*i+a-e,y=(p-1)*r+l-t,m=(f-1)*o+c-s,x=Math.floor(g/2),v=g-x,b=Math.floor(y/2),w=y-b,S=Math.floor(m/2),_=m-S;h={top:b,bottom:w,left:S,right:_,front:x,back:v,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function ru(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function ia(n){const[e,t,s]=iu(n);return e===1&&t===1&&s===1}function qn(n,e){return ia(n)||ia(e)}function ra(n){return iu(n).every(e=>e>0)}function Rr(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function bs(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")A(Tl(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(i=>{A(Tl(i),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${i}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MU(n,e){const s={x:U(n,"x","reshape","string_or_numeric")},i={shape:e};return Y.runKernel(Uf,s,i)}const J=K({reshape_:MU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(n,e,t,s,i){const r=U(n,"x","avgPool","float32"),o=1;A(qn(t,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);let a=r,l=!1;r.rank===3&&(l=!0,a=J(r,[1,r.shape[0],r.shape[1],r.shape[2]])),A(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),bs("avgPool",s,i);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:i};let h=Y.runKernel(sf,c,u);return h=Oe(h,r.dtype),l?J(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Ry=K({avgPool_:kU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(n,e,t,s,i,r="NDHWC"){const o=U(n,"x","avgPool3d","float32");let a=o,l=!1;o.rank===4&&(l=!0,a=J(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),A(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),A(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),bs("avgPool3d",s,i);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:i,dataFormat:r};let h=Y.runKernel(rf,c,u);return h=Oe(h,a.dtype),l?J(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const AU=K({avgPool3d_:NU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RU(n,e=0){A(n.length>=1,()=>"Pass at least one tensor to concat");const t=hI(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),t.length===1)return qo(t[0]);const s=t,i={axis:e};return Y.runKernel(cf,s,i)}const ms=K({concat_:RU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $U(n,e,t=!1,s=!1){let i=U(n,"a","matMul"),r=U(e,"b","matMul");[i,r]=cn(i,r);const o={a:i,b:r},a={transposeA:t,transposeB:s};return Y.runKernel(of,o,a)}const Tt=K({matMul_:$U});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(n){const t={x:U(n,"x","sigmoid","float32")};return Y.runKernel(hh,t)}const nc=K({sigmoid_:DU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LU(n,e,t){const s=U(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const i={x:s},r={begin:e,size:t};return Y.runKernel(Xf,i,r)}const zt=K({slice_:LU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(n){const t={x:U(n,"x","tanh","float32")};return Y.runKernel(xh,t)}const im=K({tanh_:FU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(n,e,t){const s=U(n,"x","batchToSpaceND"),i=e.reduce((a,l)=>a*l);A(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),A(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),A(s.shape[0]%i===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${i}`);const r={x:s},o={blockShape:e,crops:t};return Y.runKernel(af,r,o)}const $y=K({batchToSpaceND_:PU});function OU(n){let e;return n.rank===0||n.rank===1?e=J(n,[1,1,1,n.size]):n.rank===2?e=J(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=J(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(n,e,t,s,i,r){r==null&&(r=.001);const o=U(n,"x","batchNorm"),a=U(e,"mean","batchNorm"),l=U(t,"variance","batchNorm");let c;i!=null&&(c=U(i,"scale","batchNorm"));let u;s!=null&&(u=U(s,"offset","batchNorm")),A(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:OU(o),scale:c,offset:u,mean:a,variance:l},p={varianceEpsilon:r},f=Y.runKernel(yf,d,p);return J(f,o.shape)}const rm=K({batchNorm_:zU});function BU(n,e,t,s,i,r){const o=U(n,"x","batchNorm"),a=U(e,"mean","batchNorm"),l=U(t,"variance","batchNorm");let c;i!=null&&(c=U(i,"scale","batchNorm"));let u;return s!=null&&(u=U(s,"offset","batchNorm")),A(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),A(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),A(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&A(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&A(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),rm(o,a,l,u,c,r)}const VU=K({batchNorm2d_:BU});function UU(n,e,t,s,i,r){const o=U(n,"x","batchNorm"),a=U(e,"mean","batchNorm"),l=U(t,"variance","batchNorm");let c;i!=null&&(c=U(i,"scale","batchNorm"));let u;return s!=null&&(u=U(s,"offset","batchNorm")),A(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),A(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),A(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&A(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&A(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),rm(o,a,l,u,c,r)}const WU=K({batchNorm3d_:UU});function GU(n,e,t,s,i,r){const o=U(n,"x","batchNorm"),a=U(e,"mean","batchNorm"),l=U(t,"variance","batchNorm");let c;i!=null&&(c=U(i,"scale","batchNorm"));let u;return s!=null&&(u=U(s,"offset","batchNorm")),A(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),A(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),A(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&A(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&A(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),rm(o,a,l,u,c,r)}const HU=K({batchNorm4d_:GU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jU(n,e,t){const s=U(n,"x","bincount"),i=U(e,"weights","bincount");A(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(i.size===s.size||i.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${i.shape}.`);const r={x:s,weights:i},o={size:t};return Y.runKernel(j0,r,o)}const XU=K({bincount_:jU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qU(n,e){let t=U(n,"broadcastTo","x");const s=t.shape;if(Nr(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=J(t,c)}const i=t.shape,r=Array.from(e);for(let c=e.length-1;c>=0;c--)if(i[c]===e[c])r[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(r.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return qo(t);const a={x:t},l={reps:r};return Y.runKernel(yh,a,l)}const Gc=K({broadcastTo_:qU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZU(n){const t={x:U(n,"x","ceil","float32")};return Y.runKernel($u,t)}const YU=K({ceil_:ZU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function om(n,e,t){Nr(n),t=t||Kl(e);const s={shape:n,value:e,dtype:t};return Y.runKernel(ay,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(n,e,t){const s=U(n,"x","clipByValue");if(A(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return om(s.shape,e,s.dtype);const i={x:s},r={clipValueMin:e,clipValueMax:t};return Y.runKernel(Du,i,r)}const Os=K({clipByValue_:JU});function KU(n){return ms(n,0)}const QU=K({concat1d_:KU});function eW(n,e){return ms(n,e)}const tW=K({concat2d_:eW});function nW(n,e){return ms(n,e)}const sW=K({concat3d_:nW});function iW(n,e){return ms(n,e)}const rW=K({concat4d_:iW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(n,e,t,s,i="NHWC",r=[1,1],o){const a=U(n,"x","conv2d","float32"),l=U(e,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=J(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),A(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),bs("conv2d",s,o);const h=i==="NHWC"?c.shape[3]:c.shape[1];A(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),A(qn(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),A(ra(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),A(ra(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:c,filter:l},p={strides:t,pad:s,dataFormat:i,dilations:r,dimRoundingMode:o},f=Y.runKernel(uf,d,p);return u?J(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const oa=K({conv2d_:oW});function aW(n,e,t,s,i="NWC",r=1,o){const a=U(n,"x","conv1d"),l=U(e,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=J(a,[1,a.shape[0],a.shape[1]])),A(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),A(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),bs("conv1d",s,o),A(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),A(qn(t,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${r}'`),A(ra(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),A(ra(t),()=>"Error in conv1D: Stride should be larger than 0."),A(i==="NWC",()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const h=J(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=J(c,[c.shape[0],1,c.shape[1],c.shape[2]]),y=oa(d,h,[1,t],s,"NHWC",[1,r],o);return u?J(y,[y.shape[2],y.shape[3]]):J(y,[y.shape[0],y.shape[2],y.shape[3]])}const _I=K({conv1d_:aW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lW(n,e,t,s,i,r="NHWC",o){A(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,l=e,c=!1;e.rank===3&&(c=!0,l=J(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),A(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),A(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),A(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const u=r==="NHWC"?a[3]:a[1],h=r==="NHWC"?l.shape[3]:l.shape[1];A(u===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[2]}.`),A(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),bs("conv2dDerInput",i,o);const d={dy:l,filter:t},p={strides:s,pad:i,dataFormat:r,dimRoundingMode:o,inputShape:a},f=Y.runKernel(hf,d,p);return c?J(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Dy=K({conv2DBackpropInput_:lW});function cW(n,e,t,s,i,r){const o=U(n,"x","conv2dTranspose"),a=U(e,"filter","conv2dTranspose");return Dy(t,o,a,s,i,"NHWC",r)}const CI=K({conv2dTranspose_:cW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uW(n,e,t,s,i="NDHWC",r=[1,1,1]){const o=U(n,"x","conv3d"),a=U(e,"filter","conv3d");let l=o,c=!1;o.rank===4&&(c=!0,l=J(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),A(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),A(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),A(qn(t,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),A(i==="NDHWC",()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`),A(ra(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),A(ra(t),()=>"Error in conv3D: Strides should be larger than 0.");const u={x:l,filter:a},h={strides:t,pad:s,dataFormat:i,dilations:r},d=Y.runKernel(df,u,h);return c?J(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const hW=K({conv3d_:uW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(n,e,t,s,i){A(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let r=n,o=e,a=!1;e.rank===4&&(a=!0,o=J(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),r=[1,n[0],n[1],n[2],n[3]]);const l=r[4],c=o.shape[4];A(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),A(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),A(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),A(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),A(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const u={dy:o,filter:t},h={pad:i,strides:s,inputShape:r},d=Y.runKernel(J0,u,h);return a?J(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const TI=K({conv3DBackpropInput_:dW});function pW(n,e,t,s,i){const r=U(n,"x","conv3dTranspose"),o=U(e,"filter","conv3dTranspose");return TI(t,r,o,s,i)}const fW=K({conv3dTranspose_:pW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mW(n){const t={x:U(n,"x","cos","float32")};return Y.runKernel(Lu,t)}const Ly=K({cos_:mW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(n){const t={x:U(n,"x","cosh","float32")};return Y.runKernel(Fu,t)}const II=K({cosh_:gW});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xW(n,e=0,t=!1,s=!1){const r={x:U(n,"x","cumprod")},o={axis:e,exclusive:t,reverse:s};return Y.runKernel(K0,r,o)}const Mx=K({cumprod_:xW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yW(n,e=0,t=!1,s=!1){const r={x:U(n,"x","cumsum")},o={axis:e,exclusive:t,reverse:s};return Y.runKernel(pf,r,o)}const EI=K({cumsum_:yW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bW(n,e,t,s=!1){const i=U(n,"x","denseBincount"),r=U(e,"weights","denseBincount");A(i.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),A(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(r.size===i.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${r.shape}.`);const o={x:i,weights:r},a={size:t,binaryOutput:s};return Y.runKernel(ey,o,a)}const oS=K({denseBincount_:bW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW(n,e,t="NHWC"){const s=U(n,"x","depthToSpace","float32"),i=t==="NHWC"?s.shape[1]:s.shape[2],r=t==="NHWC"?s.shape[2]:s.shape[3],o=t==="NHWC"?s.shape[3]:s.shape[1];A(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),A(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e}  for depthToSpace with input shape
    ${s.shape}`),A(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e} for depthToSpace with input shape
        ${s.shape}`),A(o%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:t};return Y.runKernel(ty,a,l)}const wW=K({depthToSpace_:vW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(n,e,t,s,i="NHWC",r=[1,1],o){const a=U(n,"x","depthwiseConv2d","float32"),l=U(e,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=J(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),A(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=i==="NHWC"?c.shape[3]:c.shape[1];A(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),bs("depthwiseConv2d",s,o);const d={x:c,filter:l},p={strides:t,pad:s,dataFormat:i,dilations:r,dimRoundingMode:o},f=Y.runKernel(ff,d,p);return u?J(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Fy=K({depthwiseConv2d_:SW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(n,e,t,s,i=[1,1],r="NHWC"){const o=U(n,"x","dilation2d"),a=U(e,"filter","dilation2d");A(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),A(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),A(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=o,c=!1;o.rank===3&&(l=J(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0),A(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const u={x:l,filter:a},h={strides:t,pad:s,dilations:i},d=Y.runKernel(mf,u,h);return c?J(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const CW=K({dilation2d_:_W});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kl(n,e){const t=n.length,s=[];for(let i=0;i<t;i++){const r=t-1-i,o=n[r]||1;(e[e.length-1-i]||1)>1&&o===1&&s.unshift(r)}return s}function Cn(n,e){const t=[];for(let s=0;s<e.length;s++){const i=n[n.length-s-1],r=e.length-s-1,o=e[r];(i==null||i===1&&o>1)&&t.unshift(r)}return t}function lt(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let i=0;i<t;i++){let r=n[n.length-i-1];r==null&&(r=1);let o=e[e.length-i-1];if(o==null&&(o=1),r===1)s[t-i-1]=o;else if(o===1)s[t-i-1]=r;else if(r!==o){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else s[t-i-1]=r}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TW(n,e){let t=U(n,"a","equal","string_or_numeric"),s=U(e,"b","equal","string_or_numeric");[t,s]=cn(t,s),lt(t.shape,s.shape);const i={a:t,b:s};return Y.runKernel(gf,i)}const Qi=K({equal_:TW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(n,e,t){const s=U(e,"a","where"),i=U(t,"b","where"),r=U(n,"condition","where","bool"),o=lt(lt(r.shape,s.shape),i.shape),a=Gc(r,o),l=Gc(s,o),c=Gc(i,o),u={condition:a,t:l,e:c};return Y.runKernel(jf,u)}const rs=K({where_:IW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(n){const t={x:U(n,"x","zerosLike")};return Y.runKernel(em,t)}const vt=K({zerosLike_:EW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(n,e){let t=U(n,"a","div"),s=U(e,"b","div");[t,s]=cn(t,s);const i=Je(t,s),r=vt(i),o=Qi(s,r);return rs(o,r,i)}const kW=K({divNoNan_:MW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NW(n,e){const t=U(n,"t1","dot"),s=U(e,"t2","dot");A((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const i=t.rank===1?t.size:t.shape[1],r=s.rank===1?s.size:s.shape[0];if(A(i===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${r}.`),t.rank===1&&s.rank===1){const o=J(t,[1,-1]),a=J(s,[-1,1]),l=Tt(o,a);return J(l,[])}else if(t.rank===1&&s.rank===2){const o=J(t,[1,-1]),a=J(s,[s.shape[0],s.shape[1]]),l=Tt(o,a);return J(l,[l.size])}else if(t.rank===2&&s.rank===1){const o=J(s,[-1,1]),a=Tt(t,o);return J(a,[a.size])}else{const o=J(s,[s.shape[0],s.shape[1]]);return Tt(t,o)}}const AW=K({dot_:NW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(n,...e){const t=e.map((i,r)=>U(i,`tensors${r}`,"einsum")),s={equation:n};return Y.runKernel(iy,t,s)}const Ec=K({einsum_:RW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(n){const t={x:U(n,"x","elu","float32")};return Y.runKernel(Ou,t)}const am=K({elu_:$W});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DW(n){let e=U(n,"x","erf");A(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Oe(e,"float32"));const t={x:e};return Y.runKernel(zu,t)}const MI=K({erf_:DW});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Py(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function kI(n,e,t){const s=n.length+e.length,i=[];let r=0,o=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?i.push(n[r++]):i.push(e[o++]);return i}function Dn(n,e){const t=[],s=n.length;for(let r=0;r<s;r++)e.indexOf(r)===-1&&t.push(n[r]);const i=e.map(r=>n[r]);return[t,i]}function xn(n,e){const t=e.map(s=>1);return kI(n,t,e)}function Vn(n,e,t){A(Py(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function nn(n,e){if(Py(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function bo(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function un(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(n,e=null,t=!1){const i={x:U(n,"x","max")},r={reductionIndices:e,keepDims:t};return Y.runKernel(Mf,i,r)}const gi=K({max_:LW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(n,e=null,t=!1){const i={x:U(n,"x","min")},r={axis:e,keepDims:t};return Y.runKernel(Rf,i,r)}const op=K({min_:FW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(n,e){let t=U(n,"base","pow"),s=U(e,"exp","pow");[t,s]=cn(t,s);const i={a:t,b:s};return Y.runKernel(th,i)}const aa=K({pow_:PW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function It(n,e){if((Qs(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Qs(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sm(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(n){const t={x:U(n,"x","sqrt","float32")};return Y.runKernel(ph,t)}const Xn=K({sqrt_:OW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(n){const e=U(n,"x","square"),t={};return Y.runKernel("Square",{x:e},t)}const Gt=K({square_:zW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BW(n,e=null,t=!1){let s=U(n,"x","sum");s.dtype==="bool"&&(s=Oe(s,"int32"));const i={x:s},r={axis:e,keepDims:t};return Y.runKernel(qf,i,r)}const Ze=K({sum_:BW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VW(n,e="euclidean",t=null,s=!1){n=U(n,"x","norm");const i=NI(n,e,t);let r=i.shape;if(s){const o=dt(t,n.shape);r=xn(i.shape,o)}return J(i,r)}function NI(n,e,t=null){if(n.rank===0)return es(n);if(n.rank!==1&&t===null)return NI(J(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Ze(es(n),t);if(e===1/0)return gi(es(n),t);if(e===-1/0)return op(es(n),t);if(e==="euclidean"||e===2)return Xn(Ze(aa(es(n),It(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return gi(Ze(es(n),t[0]),t[1]-1);if(e===1/0)return gi(Ze(es(n),t[1]),t[0]);if(e===-1/0)return op(Ze(es(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Xn(Ze(Gt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const lm=K({norm_:VW});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(n,e=null,t=!1){return lm(n,"euclidean",e,t)}const WW=K({euclideanNorm_:UW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(n){const t={x:U(n,"x","exp")};return Y.runKernel(Bu,t)}const er=K({exp_:GW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HW(n,e=0){const t=U(n,"x","expandDims","string_or_numeric");A(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},i={dim:e};return Y.runKernel(xf,s,i)}const ds=K({expandDims_:HW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(n){const t={x:U(n,"x","expm1")};return Y.runKernel(Vu,t)}const XW=K({expm1_:jW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qW(n,e){const t=U(n,"x","tile","string_or_numeric");A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},i={reps:e};return Y.runKernel(yh,s,i)}const fi=K({tile_:qW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(n,e,t,s="float32"){e==null&&(e=n);const i=ht([n,e],s),r=n<=e?n:e;for(let a=0;a<r;++a)i.set(1,a,a);const o=J(i.toTensor(),[n,e]);if(t==null)return o;if(t.length===1)return fi(ds(o,0),[t[0],1,1]);if(t.length===2)return fi(ds(ds(o,0),0),[t[0],t[1],1,1]);if(t.length===3)return fi(ds(ds(ds(o,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const AI=K({eye_:ZW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(n){const t={x:U(n,"x","floor","float32")};return Y.runKernel(Uu,t)}const cm=K({floor_:YW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JW(n,e,t=0,s=0){const i=U(n,"x","gather"),r=U(e,"indices","gather","int32"),o={x:i,indices:r},a={axis:t,batchDims:s};return Y.runKernel(bf,o,a)}const Oy=K({gather_:JW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(n,e){let t=U(n,"a","greater","string_or_numeric"),s=U(e,"b","greater","string_or_numeric");[t,s]=cn(t,s),lt(t.shape,s.shape);const i={a:t,b:s};return Y.runKernel(vf,i)}const zs=K({greater_:KW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(n,e){let t=U(n,"a","greaterEqual","string_or_numeric"),s=U(e,"b","greaterEqual","string_or_numeric");[t,s]=cn(t,s),lt(t.shape,s.shape);const i={a:t,b:s};return Y.runKernel(Gu,i)}const va=K({greaterEqual_:QW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(n){const t={input:U(n,"input","imag")};return Y.runKernel(uy,t)}const zy=K({imag_:e4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(n){const t={x:U(n,"x","isFinite")};return Y.runKernel(ju,t)}const n4=K({isFinite_:t4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(n){const t={x:U(n,"x","isInf")};return Y.runKernel(Xu,t)}const i4=K({isInf_:s4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(n){const t={x:U(n,"x","isNaN")};return Y.runKernel(qu,t)}const o4=K({isNaN_:r4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(n,e=.2){const s={x:U(n,"x","leakyRelu")},i={alpha:e};return Y.runKernel(wf,s,i)}const By=K({leakyRelu_:a4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(n,e){let t=U(n,"a","less","string_or_numeric"),s=U(e,"b","less","string_or_numeric");[t,s]=cn(t,s),lt(t.shape,s.shape);const i={a:t,b:s};return Y.runKernel(Sf,i)}const ap=K({less_:l4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(n,e){let t=U(n,"a","lessEqual","string_or_numeric"),s=U(e,"b","lessEqual","string_or_numeric");[t,s]=cn(t,s),lt(t.shape,s.shape);const i={a:t,b:s};return Y.runKernel(_f,i)}const sc=K({lessEqual_:c4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(n,e=5,t=1,s=1,i=.5){const r=U(n,"x","localResponseNormalization");A(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),A(Tl(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let o=r,a=!1;r.rank===3&&(a=!0,o=J(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:o},c={depthRadius:e,bias:t,alpha:s,beta:i},u=Y.runKernel(Ef,l,c);return a?J(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const h4=K({localResponseNormalization_:u4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(n){const t={x:U(n,"x","log","float32")};return Y.runKernel(Zu,t)}const tr=K({log_:d4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n){const t={x:U(n,"x","log1p")};return Y.runKernel(Yu,t)}const RI=K({log1p_:p4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n,e){A(dx(n),()=>"The f passed in variableGrads(f) must be a function"),A(e==null||Array.isArray(e)&&e.every(c=>c instanceof rp),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in Y.registeredVariables)e.push(Y.registeredVariables[c])}const s=t?e.filter(c=>!c.trainable):null,i=e.length;e=e.filter(c=>c.trainable),A(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const r=!0,{value:o,grads:a}=Y.gradients(n,e,null,r);A(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return e.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:o,grads:l}}function Nl(n){return Y.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(n){const t={x:U(n,"x","neg")};return Y.runKernel(Df,t)}const ln=K({neg_:m4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g4(n){const t={x:U(n,"x","softplus")};return Y.runKernel(dh,t)}const wh=K({softplus_:g4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(n){const e=U(n,"x","logSigmoid");return Nl(s=>({value:ln(wh(ln(s))),gradFunc:o=>q(o,nc(ln(s)))}))(e)}const y4=K({logSigmoid_:x4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n,e){let t=U(n,"a","sub"),s=U(e,"b","sub");[t,s]=cn(t,s);const i={a:t,b:s};return Y.runKernel(mh,i)}const tt=K({sub_:b4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(n,e=-1){const t=U(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Nl((i,r)=>{const a=gi(i,e,!0),l=tt(i,a),c=tt(Oe(l,"float32"),tr(Ze(er(l),e,!0)));return r([c]),{value:c,gradFunc:(h,d)=>{const[p]=d,f=!0,g=er(p);return tt(h,q(Ze(h,e,f),g))}}})(t)}const $I=K({logSoftmax_:v4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(n,e=null,t=!1){const s=U(n,"x","logSumExp"),i=dt(e,s.shape),r=gi(s,i,!0),o=tt(s,r),a=er(o),l=Ze(a,i),c=tr(l),u=Me(J(r,c.shape),c);if(t){const h=xn(u.shape,i);return J(u,h)}return u}const DI=K({logSumExp_:w4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n,e){const t=U(n,"a","logicalAnd","bool"),s=U(e,"b","logicalAnd","bool");lt(t.shape,s.shape);const i={a:t,b:s};return Y.runKernel(Cf,i)}const _r=K({logicalAnd_:S4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(n){const t={x:U(n,"x","logicalNot","bool")};return Y.runKernel(Tf,t)}const Vy=K({logicalNot_:_4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(n,e){const t=U(n,"a","logicalOr","bool"),s=U(e,"b","logicalOr","bool");lt(t.shape,s.shape);const i={a:t,b:s};return Y.runKernel(If,i)}const LI=K({logicalOr_:C4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n,e){const t=U(n,"a","logicalXor","bool"),s=U(e,"b","logicalXor","bool");return lt(t.shape,s.shape),_r(LI(n,e),Vy(_r(n,e)))}const I4=K({logicalXor_:T4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(n,e,t,s,i){const r=U(n,"x","maxPool"),o=1;let a=r,l=!1;r.rank===3&&(l=!0,a=J(r,[1,r.shape[0],r.shape[1],r.shape[2]])),A(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),A(qn(t,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),bs("maxPool",s,i);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:i},h=Y.runKernel(kf,c,u);return l?J(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Uy=K({maxPool_:E4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(n,e=[1,1,1],t,s,i,r="NDHWC"){const o=U(n,"x","maxPool3d");let a=o,l=!1;o.rank===4&&(l=!0,a=J(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),A(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),bs("maxPool3d",s,i);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:i,dataFormat:r},h=Y.runKernel(Nf,c,u);return l?J(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const k4=K({maxPool3d_:M4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(n,e){let t=U(n,"a","maximum"),s=U(e,"b","maximum");[t,s]=cn(t,s),t.dtype==="bool"&&(t=Oe(t,"int32"),s=Oe(s,"int32")),lt(t.shape,s.shape);const i={a:t,b:s};return Y.runKernel(Ju,i)}const vo=K({maximum_:N4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n,e=null,t=!1){const i={x:U(n,"x","mean")},r={axis:e,keepDims:t};return Y.runKernel(Af,i,r)}const mn=K({mean_:A4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function An(n,e="float32"){if(Nr(n),e==="complex64"){const s=An(n,"float32"),i=An(n,"float32");return Ml(s,i)}const t=jn(ce(n),e);return Y.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wo(n,e="float32"){if(Nr(n),e==="complex64"){const s=wo(n,"float32"),i=An(n,"float32");return Ml(s,i)}const t=O0(ce(n),e);return Y.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(n,e){let t=U(n,"a","minimum"),s=U(e,"b","minimum");[t,s]=cn(t,s),t.dtype==="bool"&&(t=Oe(t,"int32"),s=Oe(s,"int32")),lt(t.shape,s.shape);const i={a:t,b:s};return Y.runKernel(Ku,i)}const ou=K({minimum_:R4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $4(n,e,t){A(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=U(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const i=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)A(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),A(e[a][0]>=0&&e[a][0]<=s.shape[a]-i&&e[a][1]>=0&&e[a][1]<=s.shape[a]-i,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-i} or less than 0 for input of shape ${s.shape}`);const r={paddings:e,mode:t},o={x:s};return Y.runKernel($f,o,r)}const D4=K({mirrorPad_:$4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(n,e){let t=U(n,"a","mod"),s=U(e,"b","mod");[t,s]=cn(t,s);const i={a:t,b:s};return Y.runKernel(Qu,i)}const F4=K({mod_:L4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(n,e=null,t=!1){n=U(n,"x","moments");const s=dt(e,n.shape),i=mn(n,s,t);let r=i.shape;t||(r=xn(i.shape,s));const o=Gt(tt(Oe(n,"float32"),J(i,r))),a=mn(o,s,t);return{mean:i,variance:a}}const Wy=K({moments_:P4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(n,e){let t=U(n,"a","notEqual","string_or_numeric"),s=U(e,"b","notEqual","string_or_numeric");[t,s]=cn(t,s),lt(t.shape,s.shape);const i={a:t,b:s};return Y.runKernel(Lf,i)}const lp=K({notEqual_:O4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z4(n,e,t=1,s=0,i="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const o={indices:U(n,"indices","oneHot","int32")},a={dtype:i,depth:e,onValue:t,offValue:s};return Y.runKernel(Pf,o,a)}const FI=K({oneHot_:z4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(n){const t={x:U(n,"x","onesLike")};return Y.runKernel(Ff,t)}const ei=K({onesLike_:B4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n,e,t=0){const s=U(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:t},r={x:s};return Y.runKernel(zf,r,i)}const Gy=K({pad_:V4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(n,e,t){const s=U(n,"x","spaceToBatchND");A(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),A(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),A(s.shape.reduce((o,a,l)=>l>0&&l<=e.length?o&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const i={x:s},r={blockShape:e,paddings:t};return Y.runKernel(Zf,i,r)}const Hy=K({spaceToBatchND_:U4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(n,e,t,s,i,r,o){i==null&&(i=[1,1]),r==null&&(r=1),s===0&&(s="valid");const a=U(n,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=J(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(qn(r,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`);const u=ti(l.shape,e,r,i,s),h=[u.dilationHeight,u.dilationWidth];let d;s==="same"?d=H4([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,g]=G4([u.inHeight,u.inWidth],h,d),y=p?s:"valid",m=p?l:Hy(l,h,f),v=(t==="avg"?()=>Ry(m,e,r,y,o):()=>Uy(m,e,r,y,o))(),b=p?v:$y(v,h,g);return c?J(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function G4(n,e,t){const s=t.map(u=>u[0]),i=t.map(u=>u[1]),r=n.concat(s,i),o=e.map((u,h)=>(u-r[h]%u)%u),a=i.map((u,h)=>u+o[h]),l=e.map((u,h)=>[s[h],a[h]]),c=e.map((u,h)=>[0,o[h]]);return[l,c]}function H4(n,e){const s=n.map((o,a)=>o+(o-1)*(e[a]-1)).map(o=>o-1),i=s.map(o=>Math.floor(o/2)),r=s.map((o,a)=>o-i[a]);return s.map((o,a)=>[i[a],r[a]])}const j4=K({pool_:W4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(n,e){const t=U(n,"x","prelu"),s=U(e,"alpha","prelu"),i={x:t,alpha:s};return Y.runKernel(Bf,i)}const jy=K({prelu_:X4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4(n,e=null,t=!1){let s=U(n,"x","prod");s.dtype==="bool"&&(s=Oe(s,"int32"));const i={x:s},r={axis:e,keepDims:t};return Y.runKernel(Vf,i,r)}const Z4=K({prod_:q4});var Xy={exports:{}};Xy.exports;(function(n){(function(e,t,s){function i(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function r(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function o(l,c){var u=new i(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,u),d.state=function(){return r(u,{})}),d}function a(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=o:this.alea=o})(xa,n)})(Xy);var Y4=Xy.exports,qy={exports:{}};qy.exports;(function(n){(function(e,t,s){function i(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=o:this.xor128=o})(xa,n)})(qy);var J4=qy.exports,Zy={exports:{}};Zy.exports;(function(n){(function(e,t,s){function i(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=o:this.xorwow=o})(xa,n)})(Zy);var K4=Zy.exports,Yy={exports:{}};Yy.exports;(function(n){(function(e,t,s){function i(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,p;return d=u[h],d^=d>>>7,p=d^d<<24,d=u[h+1&7],p^=d^d>>>10,d=u[h+3&7],p^=d^d>>>3,d=u[h+4&7],p^=d^d<<7,d=u[h+7&7],d=d^d<<13,p^=d^d<<9,u[h]=p,l.i=h+1&7,p};function c(u,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],u.x=p,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function r(a,l){return l.x=a.x.slice(),l.i=a.i,l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.x&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=o:this.xorshift7=o})(xa,n)})(Yy);var Q4=Yy.exports,Jy={exports:{}};Jy.exports;(function(n){(function(e,t,s){function i(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,p,f;return l.w=u=u+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(u^u>>>16)|0};function c(u,h){var d,p,f,g,y,m=[],x=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,x=Math.max(x,h.length)),f=0,g=-32;g<x;++g)h&&(p^=h.charCodeAt((g+32)%h.length)),g===0&&(y=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,g>=0&&(y=y+1640531527|0,d=m[g&127]^=p+y,f=d==0?f+1:0);for(f>=128&&(m[(h&&h.length||0)&127]=-1),f=127,g=4*128;g>0;--g)p=m[f+34&127],d=m[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,m[f]=p^d;u.w=y,u.X=m,u.i=f}c(l,a)}function r(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.X&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=o:this.xor4096=o})(xa,n)})(Jy);var eG=Jy.exports,Ky={exports:{}};Ky.exports;(function(n){(function(e,t,s){function i(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=o:this.tychei=o})(xa,n)})(Ky);var tG=Ky.exports,PI={exports:{}};const nG={},sG=Object.freeze(Object.defineProperty({__proto__:null,default:nG},Symbol.toStringTag,{value:"Module"})),iG=iV(sG);(function(n){(function(e,t,s){var i=256,r=6,o=52,a="random",l=s.pow(i,r),c=s.pow(2,o),u=c*2,h=i-1,d;function p(b,w,S){var _=[];w=w==!0?{entropy:!0}:w||{};var I=m(y(w.entropy?[b,v(t)]:b??x(),3),_),N=new f(_),k=function(){for(var M=N.g(r),T=l,C=0;M<c;)M=(M+C)*i,T*=i,C=N.g(1);for(;M>=u;)M/=2,T/=2,C>>>=1;return(M+C)/T};return k.int32=function(){return N.g(4)|0},k.quick=function(){return N.g(4)/4294967296},k.double=k,m(v(N.S),t),(w.pass||S||function(M,T,C,R){return R&&(R.S&&g(R,N),M.state=function(){return g(N,{})}),C?(s[a]=M,T):M})(k,I,"global"in w?w.global:this==s,w.state)}function f(b){var w,S=b.length,_=this,I=0,N=_.i=_.j=0,k=_.S=[];for(S||(b=[S++]);I<i;)k[I]=I++;for(I=0;I<i;I++)k[I]=k[N=h&N+b[I%S]+(w=k[I])],k[N]=w;(_.g=function(M){for(var T,C=0,R=_.i,L=_.j,$=_.S;M--;)T=$[R=h&R+1],C=C*i+$[h&($[R]=$[L=h&L+T])+($[L]=T)];return _.i=R,_.j=L,C})(i)}function g(b,w){return w.i=b.i,w.j=b.j,w.S=b.S.slice(),w}function y(b,w){var S=[],_=typeof b,I;if(w&&_=="object")for(I in b)try{S.push(y(b[I],w-1))}catch{}return S.length?S:_=="string"?b:b+"\0"}function m(b,w){for(var S=b+"",_,I=0;I<S.length;)w[h&I]=h&(_^=w[h&I]*19)+S.charCodeAt(I++);return v(w)}function x(){try{var b;return d&&(b=d.randomBytes)?b=b(i):(b=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(b)),v(b)}catch{var w=e.navigator,S=w&&w.plugins;return[+new Date,e,S,e.screen,v(t)]}}function v(b){return String.fromCharCode.apply(0,b)}if(m(s.random(),t),n.exports){n.exports=p;try{d=iG}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:xa,[],Math)})(PI);var rG=PI.exports,oG=Y4,aG=J4,lG=K4,cG=Q4,uG=eG,hG=tG,wa=rG;wa.alea=oG;wa.xor128=aG;wa.xorwow=lG;wa.xorshift7=cG;wa.xor4096=uG;wa.tychei=hG;var Qy=wa;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OI{constructor(e,t,s,i,r){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=r||Math.random();this.random=Qy.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const i=this.nextVal;return this.nextVal=NaN,i}let e,t,s=!1;for(;!s;){let i,r,o;do i=2*this.random()-1,r=2*this.random()-1,o=i*i+r*r;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*i*a,t=this.mean+this.stdDev*r*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class dG{constructor(e=0,t=1,s,i){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,i==null&&(i=Math.random()),typeof i=="number"&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Qy.alea(i)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(n,e=0,t=1,s,i){if(Nr(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new OI(e,t,s,!1,i),o=ht(n,s);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const fG=K({randomNormal_:pG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(n,e=0,t=1,s="float32",i){Nr(n);const r=ht(n,s),o=new dG(e,t,null,i);for(let a=0;a<r.values.length;a++)r.values[a]=o.nextValue();return r.toTensor()}const Sh=K({randomUniform_:mG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function au(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const i={start:n,stop:e,step:t,dtype:s};return Y.runKernel(xy,{},i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG(n){const t={input:U(n,"input","real")};return Y.runKernel(yy,t)}const cp=K({real_:gG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(n){const t={x:U(n,"x","reciprocal")};return Y.runKernel(nh,t)}const yG=K({reciprocal_:xG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bG(n){const t={x:U(n,"x","relu")};return Y.runKernel(sh,t)}const Sa=K({relu_:bG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vG(n){const t={x:U(n,"x","relu6")};return Y.runKernel(ih,t)}const zI=K({relu6_:vG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wG(n,e){const s={x:U(n,"x","reverse")},i={dims:e};return Y.runKernel(Hf,s,i)}const la=K({reverse_:wG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(n){const t={x:U(n,"x","round")};return Y.runKernel(rh,t)}const BI=K({round_:SG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(n){const t={x:U(n,"x","rsqrt","float32")};return Y.runKernel(oh,t)}const VI=K({rsqrt_:_G});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CG(n){const t={x:U(n,"x","selu")};return Y.runKernel(ah,t)}const UI=K({selu_:CG});function TG(n,e,t,s,i,r=[1,1],o="NHWC"){const a=U(n,"x","separableConv2d"),l=U(e,"depthwiseFilter","separableConv2d"),c=U(t,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=J(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),A(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),A(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),A(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],p=l.shape[3];A(c.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${c.shape[2]}.`);const f=Fy(u,l,s,i,o,r),y=oa(f,c,1,"valid",o);return h?J(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const WI=K({separableConv2d_:TG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(n){const t={x:U(n,"x","sign")};return Y.runKernel(uh,t)}const EG=K({sign_:IG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MG(n){const t={x:U(n,"x","sin","float32")};return Y.runKernel(lh,t)}const GI=K({sin_:MG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kG(n){const t={x:U(n,"x","sinh")};return Y.runKernel(ch,t)}const HI=K({sinh_:kG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(n,e,t){const s=U(n,"x","slice1d");return A(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),zt(s,[e],[t])}const eb=K({slice1d_:NG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(n,e,t){const s=U(n,"x","slice2d");return A(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),zt(s,e,t)}const jI=K({slice2d_:AG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RG(n,e,t){const s=U(n,"x","slice3d");return A(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),zt(s,e,t)}const tb=K({slice3d_:RG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $G(n,e,t){const s=U(n,"x","slice4d");return A(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),zt(s,e,t)}const up=K({slice4d_:$G});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DG(n,e=-1){const t=U(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},i={dim:e};return Y.runKernel(Jf,s,i)}const nb=K({softmax_:DG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LG(n){A(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return Y.runKernel(oy,e)}const XI=K({fft_:LG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FG(n){A(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return Y.runKernel(cy,e)}const kx=K({ifft_:FG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PG(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const i=J(n,[t,e]);s=kx(i)}else{const i=[t,2*(e-1)],r=J(cp(n),[t,e]),o=J(zy(n),[t,e]),a=la(zt(r,[0,1],[t,e-2]),1),l=q(la(zt(o,[0,1],[t,e-2]),1),It(-1)),c=ms([r,a],1),u=ms([o,l],1),h=J(Ml(c,u),[i[0],i[1]]);s=kx(h)}if(s=cp(s),n.rank===3&&n.shape[0]!==0){const i=s,r=n.shape[0];s=J(s,[r,s.shape[0]/r,s.shape[1]]),i.dispose()}return s}const OG=K({irfft_:PG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zG(n,e,t=0){const i={x:U(n,"x","split")},r={numOrSizeSplits:e,axis:t};return Y.runKernel(Yf,i,r)}const Ps=K({split_:zG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BG(n,e){A(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let i;if(e!=null&&e<t){const f=n.shape.map(y=>0),g=n.shape.map(y=>y);g[n.shape.length-1]=e,i=zt(n,f,g),t=e}else if(e!=null&&e>t){const f=n.shape.map(g=>g);f[n.shape.length-1]=e-t,i=ms([n,An(f)],n.shape.length-1),t=e}else i=n;const r=vt(i),o=J(Ml(i,r),[s,t]),a=XI(o),l=Math.floor(t/2)+1,c=cp(a),u=zy(a),h=Ps(c,[l,t-l],c.shape.length-1),d=Ps(u,[l,t-l],u.shape.length-1),p=i.shape.slice();return p[i.shape.length-1]=l,J(Ml(h[0],d[0]),p)}const VG=K({rfft_:BG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(n,e){let t=U(n,"a","squaredDifference"),s=U(e,"b","squaredDifference");[t,s]=cn(t,s),lt(t.shape,s.shape);const i={a:t,b:s},r={};return Y.runKernel(fh,i,r)}const WG=K({squaredDifference_:UG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(n,e){const t=U(n,"x","squeeze","string_or_numeric");return J(t,go(t.shape,e).newShape)}const _h=K({squeeze_:GG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HG(n,e=0){const t=hI(n,"tensors","stack","string_or_numeric");A(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&A(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,i={axis:e};return Y.runKernel(Of,s,i)}const Cr=K({stack_:HG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jG(n,e=0){const s={x:U(n,"x","step")},i={alpha:e};return Y.runKernel(bh,s,i)}const Ch=K({step_:jG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(n,e,t,s,i=0,r=0,o=0,a=0,l=0){const u={x:U(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:s,beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return Y.runKernel(_y,u,h)}const qG=K({stridedSlice_:XG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(n){const t={x:U(n,"x","tan","float32")};return Y.runKernel(gh,t)}const YG=K({tan_:ZG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ts(n,e){xT(n);const t=nm(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sm(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(n,e,t){if(xT(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=nm(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sm(n,e,s,t)}function qI(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,i=e.rank>1?e.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${i}.`;if(t.rank<i)throw new Error(r+` update.rank < ${i}. `);if(n.length<s+(t.rank-i))throw new Error(r+` Output shape length < ${s+(t.rank-i)}`);if(t.rank!==i+n.length-s)throw new Error(r+` update.rank != ${i+n.length-s}`);for(let o=0;o<i;++o)if(t.shape[o]!==e.shape[o])throw new Error(r+` updates.shape[${o}] (${t.shape[o]}) != indices.shape[${o}] (${e.shape[o]}).`);for(let o=0;o<t.rank-i;++o)if(t.shape[o+i]!==n[o+s])throw new Error(r+` updates.shape[${o+i}] (${t.shape[o+i]}) != shape[${o+i}] (${n[o+i]})`)}function JG(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}qI(t,e,n)}function _a(n,e,t){const s=e.shape.length,i=s>1?e.shape[s-1]:1,r=t.length;let o=1;for(let h=i;h<r;++h)o*=t[h];const a=i<1?1:i,l=ce(e.shape)/a,c=[...je(t.slice(0,i)),1],u=ce(t);return{sliceRank:i,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KG(n,e=1,t=!0){const s=U(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const i=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${e}`);const r={x:s},o={k:e,sorted:t},[a,l]=Y.runKernel(Cy,r,o);return{values:a,indices:l}}const QG=K({topk_:KG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(n,e=0,t=1,s,i){if(Nr(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new OI(e,t,s,!0,i),o=ht(n,s);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const ZI=K({truncatedNormal_:eH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(n,e=0){const t=U(n,"x","unique","string_or_numeric");A(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},i={axis:e},[r,o]=Y.runKernel(Iy,s,i);return{values:r,indices:o}}const nH=K({unique_:tH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(n,e,t){const s=U(n,"x","unsortedSegmentSum"),i=U(e,"segmentIds","unsortedSegmentSum","int32");A(Tl(t),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:i},o={numSegments:t};return Y.runKernel(Qf,r,o)}const YI=K({unsortedSegmentSum_:sH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(n,e=0){const t=U(n,"x","unstack","string_or_numeric");A(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},i={axis:e};return Y.runKernel(Kf,s,i)}const ca=K({unstack_:iH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(n,e=!0,t,s){return Y.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JI(n,e){const t=[];for(let r=0;r<e.length;r++)e[r]&&t.push(r);const s=ht(n,"int32"),i=ht([t.length,n.length],"int32");for(let r=0;r<t.length;r++){const o=s.indexToLoc(t[r]),a=r*n.length;i.values.set(o,a)}return i.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(n,e,t){const s=U(n,"x","transpose");if(e==null&&(e=s.shape.map((o,a)=>a).reverse()),A(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(o=>{A(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const i={x:s},r={perm:e};return s.dtype==="complex64"?te(()=>{let o=cp(s),a=zy(s);return o=Y.runKernel(fl,{x:o},r),a=Y.runKernel(fl,{x:a},r),t&&(a=ln(a)),Ml(o,a)}):Y.runKernel(fl,i,r)}const bt=K({transpose_:oH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aH(n,e){if(e==null)return n.shape.slice();if(Et(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lH(n,e,t,s){const i=U(n,"x","dropout");if(A(i.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),A(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof bn?i.clone():i;const r=aH(i,t),o=1-e,a=Je(cm(Me(Sh(r,0,1,"float32",s),o)),o);return q(i,a)}const cH=K({dropout_:lH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(n,e,t,s,i,r="NHWC",o){let a=n;n.rank===3&&(a=J(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=J(e,[1,e.shape[0],e.shape[1],e.shape[2]])),A(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),A(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),A(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=r==="NHWC"?a.shape[3]:a.shape[1],u=r==="NHWC"?l.shape[3]:l.shape[1];A(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),A(u===t[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${t[3]}).`),bs("conv2dDerFilter",i,o);const h={x:a,dy:l},d={strides:s,pad:i,dataFormat:r,dimRoundingMode:o,filterShape:t};return Y.runKernel(Z0,h,d)}const sb=K({conv2DBackpropFilter_:uH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ib(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return q(n,Ch(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function rb(n,e){let t=e;const s=Cn(n.shape,e.shape);return s.length>0&&(t=Ze(t,s)),J(t,n.shape)}function ob(n,e,t,s){if(e==="linear")return n;if(e==="relu")return Sa(n);if(e==="elu")return am(n);if(e==="relu6")return zI(n);if(e==="prelu")return jy(n,t);if(e==="leakyrelu")return By(n,s);if(e==="sigmoid")return nc(n);throw new Error(`Unknown fused activation ${e}.`)}const ab=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH({x:n,filter:e,strides:t,pad:s,dataFormat:i="NHWC",dilations:r=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",ab(Y.state.gradientDepth,l)===!1){A(i==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let S=oa(n,e,t,s,i,r,o);return a!=null&&(S=Me(S,a)),ob(S,l,c,u)}const h=U(n,"x","conv2d","float32"),d=U(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=J(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),A(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),bs("fused conv2d",s,o);const g=i==="NHWC"?p.shape[3]:p.shape[1];A(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),A(qn(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`);const y=Bn(p.shape,d.shape,t,r,s,o);let m;a!=null&&(m=U(a,"bias","fused conv2d"),[m]=cn(m,h),i==="NHWC"?lt(y.outShape,m.shape):(A(m.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${m.shape.length}.`),A(m.shape.length===0||m.shape[0]===y.outChannels||m.shape[0]===1,()=>`Error in fused conv2d: bias shape (${m.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let x;if(c!=null){const S=c.shape;if(A(S.length<=1||S.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${S.length}.`),S.length===1)A(S[0]===1||S[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the number of output channels (${y.outChannels}).`);else if(S.length===3)try{lt(S,y.outShape)}catch{const I=`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(I)}x=U(c,"prelu weights","fused conv2d")}const v=(S,_)=>{A(i==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);const[I,N,k,M]=_,T=ib(S,k,l);A(ia(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const C=Dy(N.shape,T,I,t,s),R=sb(N,T,I.shape,t,s),L=[C,R];if(M!=null){const $=rb(M,T);L.push($)}return L},b={x:p,filter:d,bias:m,preluActivationWeights:x},w={strides:t,pad:s,dataFormat:i,dilations:r,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return a==null?Nl((_,I,N)=>{let k=Y.runKernel(np,b,w);return N([I,_,k]),f&&(k=J(k,[k.shape[1],k.shape[2],k.shape[3]])),{value:k,gradFunc:v}})(p,d):Nl((_,I,N,k)=>{let M=Y.runKernel(np,b,w);return k([I,_,M,N]),f&&(M=J(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:v}})(p,d,m)}const dH=K({fusedConv2d_:hH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(n,e,t,s,i,r=[1,1],o){let a=n;n.rank===3&&(a=J(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=J(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:a,dy:l},u={strides:s,pad:i,dimRoundingMode:o,dilations:r,filterShape:t};return Y.runKernel(ny,c,u)}const fH=K({depthwiseConv2dNativeBackpropFilter_:pH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(n,e,t,s,i,r=[1,1],o){let a=e,l=!1;e.rank===3&&(l=!0,a=J(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:a,filter:t},u={strides:s,pad:i,dimRoundingMode:o,dilations:r,inputShape:n},h=Y.runKernel(sy,c,u);return l?J(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const gH=K({depthwiseConv2dNativeBackpropInput_:mH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:i,activation:r="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(ab(Y.state.gradientDepth,r)===!1){let M=Tt(n,e,t,s);return i!=null&&(M=Me(M,i)),ob(M,r,o,a)}let l=U(n,"a","fused matMul"),c=U(e,"b","fused matMul");[l,c]=cn(l,c);const u=t?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?c.shape[c.rank-1]:c.shape[c.rank-2],d=t?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),g=c.shape.slice(0,-2),y=ce(f),m=ce(g);A(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${t} and transposeB=${s} must match.`);const v=lt(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,p]),b=t?J(l,[y,u,d]):J(l,[y,d,u]),w=s?J(c,[m,p,h]):J(c,[m,h,p]);let S;i!=null&&(S=U(i,"bias","fused matMul"),[S]=cn(S,l),lt(v,S.shape));let _;o!=null&&(_=U(o,"prelu weights","fused matMul"));const I=(M,T)=>{const[C,R,L,$]=T,O=ib(J(M,L.shape),L,r);let G,Z;if(!t&&!s?(G=Tt(O,R,!1,!0),Z=Tt(C,O,!0,!1)):!t&&s?(G=Tt(O,R,!1,!1),Z=Tt(O,C,!0,!1)):t&&!s?(G=Tt(R,O,!1,!0),Z=Tt(C,O,!1,!1)):(G=Tt(R,O,!0,!0),Z=Tt(O,C,!0,!0)),i!=null){const H=rb($,O);return[G,Z,H]}else return[G,Z]},N={a:b,b:w,bias:S,preluActivationWeights:_},k={transposeA:t,transposeB:s,activation:r,leakyreluAlpha:a};return i==null?Nl((T,C,R)=>{const L=Y.runKernel(tp,N,k);return R([T,C,L]),{value:J(L,v),gradFunc:I}})(b,w):Nl((T,C,R,L)=>{const $=Y.runKernel(tp,N,k);return L([T,C,$,R]),{value:J($,v),gradFunc:I}})(b,w,S)}const aS=K({fusedMatMul_:xH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yH(n,e,t,s,i="bilinear",r=0){const o=U(n,"image","cropAndResize"),a=U(e,"boxes","cropAndResize","float32"),l=U(t,"boxInd","cropAndResize","int32"),c=a.shape[0];A(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),A(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),A(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),A(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),A(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),A(i==="bilinear"||i==="nearest",()=>`method must be bilinear or nearest, but was ${i}`);const u={image:o,boxes:a,boxInd:l},h={method:i,extrapolationValue:r,cropSize:s};return Y.runKernel(Q0,u,h)}const bH=K({cropAndResize_:yH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(n){const e=U(n,"image","flipLeftRight","float32");A(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return Y.runKernel(ly,t,{})}const wH=K({flipLeftRight_:vH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(n){const e=U(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];A(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),A(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const i=new Array(e.rank);return i.fill(1,0,t),i[t]=3,fi(e,i)}const _H=K({grayscaleToRGB_:SH});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(n){const e=U(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];A(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),A(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const i=e.dtype,r=Oe(e,"float32"),o=Ts([.2989,.587,.114]);let a;switch(e.rank){case 2:a=Ec("ij,j->i",r,o);break;case 3:a=Ec("ijk,k->ij",r,o);break;case 4:a=Ec("ijkl,l->ijk",r,o);break;case 5:a=Ec("ijklm,m->ijkl",r,o);break;case 6:a=Ec("ijklmn,n->ijklm",r,o);break;default:throw new Error("Not a valid tensor rank.")}return a=ds(a,-1),Oe(a,i)}const TH=K({rgbToGrayscale_:CH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(n,e,t=0,s=.5){const i=U(n,"image","rotateWithOffset","float32");A(i.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const r={image:i},o={radians:e,fillValue:t,center:s};return Y.runKernel(Ey,r,o)}const EH=K({rotateWithOffset_:IH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ic(n,e,t,s,i,r){s==null&&(s=.5),i==null&&(i=Number.NEGATIVE_INFINITY),r==null&&(r=0);const o=n.shape[0];return t=Math.min(t,o),A(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),A(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),A(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),A(e.rank===1,()=>"scores must be a 1D tensor"),A(e.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`),A(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:i,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MH(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY){const r=U(n,"boxes","nonMaxSuppression","float32"),o=U(e,"scores","nonMaxSuppression","float32"),a=ic(r,o,t,s,i);t=a.maxOutputSize,s=a.iouThreshold,i=a.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:i};return Y.runKernel(fy,{boxes:r,scores:o},l)}const kH=K({nonMaxSuppression_:MH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(n,e,t){const s=AH(n,e,t),i=s<0?-(s+1):s;n.splice(i,0,e)}function AH(n,e,t){return $H(n,e,t||RH)}function RH(n,e){return n>e?1:n<e?-1:0}function $H(n,e,t){let s=0,i=n.length,r=0,o=!1;for(;s<i;){r=s+(i-s>>>1);const a=t(e,n[r]);a>0?s=r+1:(i=r,o=!a)}return o?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lb(n,e,t,s,i){return hb(n,e,t,s,i,0)}function cb(n,e,t,s,i,r){return hb(n,e,t,s,i,0,!1,r,!0)}function ub(n,e,t,s,i,r){return hb(n,e,t,s,i,r,!0)}function hb(n,e,t,s,i,r,o=!1,a=!1,l=!1){const c=[];for(let y=0;y<e.length;y++)e[y]>i&&c.push({score:e[y],boxIndex:y,suppressBeginIndex:0});c.sort(lS);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<t&&c.length>0;){const y=c.pop(),{score:m,boxIndex:x,suppressBeginIndex:v}=y;if(m<i)break;let b=!1;for(let w=h.length-1;w>=v;--w){const S=DH(n,x,h[w]);if(S>=s){b=!0;break}if(y.score=y.score*LH(s,u,S),y.score<=i)break}y.suppressBeginIndex=h.length,b||(y.score===m?(h.push(x),d.push(y.score)):y.score>i&&NH(c,y,lS))}const p=h.length,f=t-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return o&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function DH(n,e,t){const s=n.subarray(e*4,e*4+4),i=n.subarray(t*4,t*4+4),r=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(i[0],i[2]),u=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),p=(a-r)*(l-o),f=(h-c)*(d-u);if(p<=0||f<=0)return 0;const g=Math.max(r,c),y=Math.max(o,u),m=Math.min(a,h),x=Math.min(l,d),v=Math.max(m-g,0)*Math.max(x-y,0);return v/(p+f-v)}function LH(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function lS(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function FH(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY){const r=U(n,"boxes","nonMaxSuppressionAsync"),o=U(e,"scores","nonMaxSuppressionAsync"),a=ic(r,o,t,s,i);t=a.maxOutputSize,s=a.iouThreshold,i=a.scoreThreshold;const l=await Promise.all([r.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:h}=lb(c,u,t,s,i);return r!==n&&r.dispose(),o!==e&&o.dispose(),Ts(h,"int32")}const PH=FH;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OH(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=U(n,"boxes","nonMaxSuppression"),a=U(e,"scores","nonMaxSuppression"),l=ic(o,a,t,s,i,r);t=l.maxOutputSize,s=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c={boxes:o,scores:a},u={maxOutputSize:t,iouThreshold:s,scoreThreshold:i,softNmsSigma:r},h=Y.runKernel(gy,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const zH=K({nonMaxSuppressionWithScore_:OH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function BH(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=U(n,"boxes","nonMaxSuppressionAsync"),a=U(e,"scores","nonMaxSuppressionAsync"),l=ic(o,a,t,s,i,r);t=l.maxOutputSize,s=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c=await Promise.all([o.data(),a.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=ub(u,h,t,s,i,r);return o!==n&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:Ts(d,"int32"),selectedScores:Ts(p)}}const VH=BH;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UH(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=U(n,"boxes","nonMaxSuppression"),a=U(e,"scores","nonMaxSuppression"),l=ic(o,a,t,s,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:o,scores:a},p={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:r},f=Y.runKernel(my,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const WH=K({nonMaxSuppressionPadded_:UH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function GH(n,e,t,s=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=U(n,"boxes","nonMaxSuppressionAsync"),a=U(e,"scores","nonMaxSuppressionAsync"),l=ic(o,a,t,s,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([o.data(),a.data()]),{selectedIndices:f,validOutputs:g}=cb(d,p,c,u,h,r);return o!==n&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:Ts(f,"int32"),validOutputs:It(g,"int32")}}const HH=GH;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jH(n,e,t=!1,s=!1){const i=U(n,"images","resizeBilinear");A(i.rank===3||i.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),A(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),A(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=J(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:t,halfPixelCenters:s,size:e},c=Y.runKernel(Gf,a,l);return o?J(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const KI=K({resizeBilinear_:jH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(n,e,t=!1,s=!1){const i=U(n,"images","resizeNearestNeighbor");A(i.rank===3||i.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),A(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),A(i.dtype==="float32"||i.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),A(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=J(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:t,halfPixelCenters:s,size:e},c=Y.runKernel(Wf,a,l);return o?J(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const QI=K({resizeNearestNeighbor_:XH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(n,e="binary",t=!1,s=.5){const i=U(n,"image","threshold"),r=.2989,o=.587,a=.114,l=i.shape[0]*i.shape[1];let c=q(Ts([s]),255),u,h,d,p;if(A(i.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),A(i.shape[2]===3||i.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),A(i.dtype==="int32"||i.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),A(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),i.shape[2]===3){[u,h,d]=Ps(i,[1,1,1],-1);const y=q(u,r),m=q(h,o),x=q(d,a);p=Me(Me(y,m),x)}else p=n;if(e==="otsu"){const y=XU(Oe(BI(p),"int32"),dI([]),256);c=ZH(y,l)}const f=t?sc(p,c):zs(p,c);return Oe(q(f,255),"int32")}function ZH(n,e){let t=Ts([-1]),s=Ts([0]),i=Ts([0]),r,o,a,l,c,u;for(let h=0;h<n.size-1;h++){r=zt(n,0,h+1),o=zt(n,h+1),c=Je(Ze(r),e),u=Je(Ze(o),e);const d=Ze(q(r,au(0,r.size)));a=Je(d,Ze(r));const p=om(o.shape,r.size),f=Me(au(0,o.size),p),g=q(o,f);l=Je(Ze(g),Ze(o));const y=tt(a,l),m=tt(a,l),x=q(c,u);i=q(q(x,y),m);const v=zs(i,s);s=rs(v,i,s),t=rs(v,Ts([h]),t)}return t}const YH=K({threshold_:qH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JH(n,e,t="nearest",s="constant",i=0,r){const o=U(n,"image","transform","float32"),a=U(e,"transforms","transform","float32");A(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),A(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),A(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:o,transforms:a},c={interpolation:t,fillMode:s,fillValue:i,outputShape:r};return Y.runKernel(Ty,l,c)}const KH=K({transform_:JH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(n,e,t){const s=U(n,"a","bandPart");A(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const i=s.shape,[r,o]=s.shape.slice(-2);let a,l;typeof e=="number"?(A(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),A(e<=r,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${r}).`),a=U(e<0?r:e,"numLower","bandPart")):(A(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=rs(ap(e,0),r,ou(e,r))),typeof t=="number"?(A(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),A(t<=o,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${o}).`),l=U(t<0?o:t,"numUpper","bandPart")):(A(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=rs(ap(t,0),o,ou(t,o)));const c=J(au(0,r,1,"int32"),[-1,1]),u=au(0,o,1,"int32"),h=tt(c,u),d=_r(sc(h,a),va(h,ln(l))),p=An([r,o],s.dtype);return J(Cr(ca(J(s,[-1,r,o])).map(f=>rs(d,f,p))),i)}const e5=K({bandPart_:QH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(n){let e;if(Array.isArray(n)){e=!1,A(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const i=n[0].shape[0];for(let r=1;r<n.length;++r)A(n[r].shape[0]===i,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[r].shape[0]} vs. ${i})`)}else e=!0,n=Ps(n,n.shape[0],0).map(i=>_h(i,[0]));A(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let i=0;i<n.length;++i)t.push(Y.tidy(()=>{let r=s[i];if(i>0)for(let o=0;o<i;++o){const a=q(Ze(q(t[o],r)),t[o]);r=tt(r,a)}return Je(r,lm(r,"euclidean"))}));return e?Cr(t,0):t}const n5=K({gramSchmidt_:t5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s5(n,e=!1){if(A(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return cS(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,c)=>l*c),s=ca(J(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),i=[],r=[];s.forEach(l=>{const[c,u]=cS(l,e);i.push(c),r.push(u)});const o=J(Cr(i,0),n.shape),a=J(Cr(r,0),n.shape);return[o,a]}}function cS(n,e=!1){return Y.tidy(()=>{A(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let i=AI(t),r=qo(n);const o=Zo([[1]],[1,1]);let a=qo(o);const l=t>=s?s:t;for(let c=0;c<l;++c){const u=r,h=a,d=i;[a,r,i]=Y.tidy(()=>{const p=zt(r,[c,c],[t-c,1]),f=lm(p),g=zt(r,[c,c],[1,1]),y=rs(zs(g,0),Zo([[-1]]),Zo([[1]])),m=tt(g,q(y,f)),x=Je(p,m);x.shape[0]===1?a=qo(o):a=ms([o,zt(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const v=ln(Je(Tt(y,m),f)),b=zt(r,[c,0],[t-c,s]),w=q(v,a),S=bt(a);if(c===0)r=tt(b,Tt(w,Tt(S,b)));else{const N=tt(b,Tt(w,Tt(S,b)));r=ms([zt(r,[0,0],[c,s]),N],0)}const _=bt(w),I=zt(i,[0,c],[t,i.shape[1]-c]);if(c===0)i=tt(I,Tt(Tt(I,a),_));else{const N=tt(I,Tt(Tt(I,a),_));i=ms([zt(i,[0,0],[t,c]),N],1)}return[a,r,i]}),ft([u,h,d])}return!e&&t>s&&(i=zt(i,[0,0],[t,s]),r=zt(r,[0,0],[s,s])),[i,r]})}const i5=K({qr_:s5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xr={flipLeftRight:wH,grayscaleToRGB:_H,resizeNearestNeighbor:QI,resizeBilinear:KI,rgbToGrayscale:TH,rotateWithOffset:EH,cropAndResize:bH,nonMaxSuppression:kH,nonMaxSuppressionAsync:PH,nonMaxSuppressionWithScore:zH,nonMaxSuppressionWithScoreAsync:VH,nonMaxSuppressionPadded:WH,nonMaxSuppressionPaddedAsync:HH,threshold:YH,transform:KH},r5={bandPart:e5,gramSchmidt:n5,qr:i5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o5=new Map,a5=new Map;class rc{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Hs{constructor(){this.classNameMap={}}static getMap(){return Hs.instance==null&&(Hs.instance=new Hs),Hs.instance}static register(e){Hs.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ve(n,e,t){A(n.className!=null,()=>"Class being registered does not have the static className property defined."),A(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),A(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,i=e+">"+s;return Hs.register(n),o5.set(i,n),a5.set(n,i),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class So extends rc{minimize(e,t=!1,s){const{value:i,grads:r}=this.computeGradients(e,s);if(s!=null){const o=s.map(a=>({name:a.name,tensor:r[a.name]}));this.applyGradients(o)}else this.applyGradients(r);return ft(r),t?i:(i.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return f4(e,t)}dispose(){this.iterations_!=null&&ft(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:It(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(So,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eE extends So{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=Y.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,i)=>{const r=Y.registeredVariables[s],o=!1;this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${s}/accum_grad`,variable:te(()=>vt(r).variable(o))}),this.accumulatedUpdates[i]==null&&(this.accumulatedUpdates[i]={originalName:`${s}/accum_var`,variable:te(()=>vt(r).variable(o))});const a=Array.isArray(e)?e[i].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[i].variable,c=this.accumulatedUpdates[i].variable;te(()=>{const u=Me(q(l,this.rho),q(Gt(a),1-this.rho)),h=q(Je(Xn(Me(c,this.epsilon)),Xn(Me(l,this.epsilon))),a),d=Me(q(c,this.rho),q(Gt(h),1-this.rho));l.assign(u),c.assign(d);const p=Me(q(h,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ft(this.accumulatedGrads.map(e=>e.variable)),ft(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tE extends So{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,i)=>{const r=Y.registeredVariables[s];this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${s}/accumulator`,variable:te(()=>om(r.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(e)?e[i].tensor:e[s];if(o==null)return;const a=this.accumulatedGrads[i].variable;te(()=>{const l=Me(a,Gt(o));a.assign(l);const c=Me(q(Je(o,Xn(Me(l,Y.backend.epsilon()))),-this.learningRate),r);r.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ft(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nE extends So{static get className(){return"Adam"}constructor(e,t,s,i=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=i,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],te(()=>{this.accBeta1=It(t).variable(),this.accBeta2=It(s).variable()}),i==null&&(this.epsilon=Y.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);te(()=>{const s=tt(1,this.accBeta1),i=tt(1,this.accBeta2);t.forEach((r,o)=>{const a=Y.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:te(()=>vt(a).variable(l))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${r}/v`,variable:te(()=>vt(a).variable(l))});const c=Array.isArray(e)?e[o].tensor:e[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=Me(q(u,this.beta1),q(c,1-this.beta1)),p=Me(q(h,this.beta2),q(Gt(c),1-this.beta2)),f=Je(d,s),g=Je(p,i);u.assign(d),h.assign(p);const y=Me(q(Je(f,Me(Xn(g),this.epsilon)),-this.learningRate),a);a.assign(y)}),this.accBeta1.assign(q(this.accBeta1,this.beta1)),this.accBeta2.assign(q(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ft(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ft(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),te(()=>{this.accBeta1.assign(aa(this.beta1,this.iterations_+1)),this.accBeta2.assign(aa(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sE extends So{static get className(){return"Adamax"}constructor(e,t,s,i=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=i,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],te(()=>{this.iteration=It(0).variable(),this.accBeta1=It(t).variable()}),i==null&&(this.epsilon=Y.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);te(()=>{const s=tt(1,this.accBeta1),i=Je(-this.learningRate,Me(q(this.iteration,this.decay),1));t.forEach((r,o)=>{const a=Y.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:vt(a).variable(l)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${r}/v`,variable:vt(a).variable(l)});const c=Array.isArray(e)?e[o].tensor:e[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=Me(q(u,this.beta1),q(c,1-this.beta1)),p=q(h,this.beta2),f=es(c),g=vo(p,f);u.assign(d),h.assign(g);const y=Me(q(Je(i,s),Je(d,Me(g,this.epsilon))),a);a.assign(y)}),this.iteration.assign(Me(this.iteration,1)),this.accBeta1.assign(q(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ft(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ft(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class db extends So{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,i)=>{const r=Array.isArray(e)?e[i].tensor:e[s];if(r==null)return;const o=Y.registeredVariables[s];te(()=>{const a=Me(q(this.c,r),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Xi(It(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iE extends db{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=It(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,i)=>{const r=Y.registeredVariables[s];this.accumulations[i]==null&&(this.accumulations[i]={originalName:`${s}/momentum`,variable:te(()=>vt(r).variable(!1))});const o=this.accumulations[i].variable,a=Array.isArray(e)?e[i].tensor:e[s];a!=null&&te(()=>{let l;const c=Me(q(this.m,o),a);this.useNesterov?l=Me(q(this.c,Me(a,q(c,this.m))),r):l=Me(q(this.c,c),r),o.assign(c),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ft(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rE extends So{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,i=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=i,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,i==null&&(this.epsilon=Y.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,i)=>{const r=Y.registeredVariables[s],o=!1;this.accumulatedMeanSquares[i]==null&&(this.accumulatedMeanSquares[i]={originalName:`${s}/rms`,variable:te(()=>vt(r).variable(o))}),this.accumulatedMoments[i]==null&&(this.accumulatedMoments[i]={originalName:`${s}/momentum`,variable:te(()=>vt(r).variable(o))}),this.accumulatedMeanGrads[i]==null&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${s}/mg`,variable:te(()=>vt(r).variable(o))});const a=Array.isArray(e)?e[i].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[i].variable,c=this.accumulatedMoments[i].variable;te(()=>{const u=Me(q(l,this.decay),q(Gt(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[i].variable,d=Me(q(h,this.decay),q(a,1-this.decay)),p=Je(q(a,this.learningRate),Xn(tt(u,Me(Gt(d),this.epsilon)))),f=Me(q(c,this.momentum),p);l.assign(u),h.assign(d),c.assign(f);const g=tt(r,f);r.assign(g)}else{const h=Me(q(l,this.decay),q(Gt(a),1-this.decay)),d=Me(q(c,this.momentum),Je(q(a,this.learningRate),Xn(Me(h,this.epsilon))));l.assign(h),c.assign(d);const p=tt(r,d);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ft(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ft(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ft(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l5=[eE,tE,nE,sE,iE,rE,db];function c5(){for(const n of l5)ve(n)}function pb(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(ce(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const i=e.shape,r=i[i.length-1];let o=1;for(let h=0;h<i.length-1;++h)o*=i[h];const a=n.shape,l=i.slice();l.pop();let c=1;for(let h=r;h<t;++h)c*=a[h],l.push(a[h]);const u=[...je(n.shape).map(h=>h/c),1].slice(0,r);return[l,o,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nx=-2,u5=-1;function fb(n,e,t){const s=n.shape.length;A(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),A(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let i=0;i<s;++i)A(e[i]+t[i]<=n.shape[i],()=>`Error in slice${s}D: begin[${i}] + size[${i}] (${e[i]+t[i]}) would overflow input.shape[${i}] (${n.shape[i]})`)}function h5(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function mb(n,e,t){const s=[];for(let i=0;i<n.length;i++)s[i]=Math.ceil((e[i]-n[i])/t[i]);return s}function oE(n,e,t,s){const i=[...n];for(let r=i.length;r<s.length;r++)i.push(1);for(let r=0;r<t;r++)r===0?i[e]=1:(i.splice(e,0,1),i.pop());return i}function aE(n,e,t){return t<=n?t:t-(e-1)}function lE(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function d5(n,e,t,s,i,r,o,a,l){const c=n.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(e.length&&t>0){const p=e[0],f=t+1;u=cE(o,p,f,s,n),h=uE(a,p,f,i,n),d=oE(r,p,f,n)}else for(let p=0;p<c;p++)u[p]=dE(o,s,r,n,p,l),h[p]=pE(a,i,r,n,p,l),d[p]=hE(r,p,l);return{begin:u,end:h,strides:d}}function cE(n,e,t,s,i){const r=[...i],o=lE(t,e);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=0;else{const l=aE(e,t,a);let c=s[l];n&1<<l&&(c=0),r[a]=c}return r}function uE(n,e,t,s,i){const r=[...i],o=lE(t,e);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=Number.MAX_SAFE_INTEGER;else{const l=aE(e,t,a);let c=s[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),r[a]=c}for(let a=0;a<r.length;a++){const l=i[a];r[a]<0&&(r[a]+=l),r[a]=ea(0,r[a],i[a])}return r}function hE(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function dE(n,e,t,s,i,r){let o=e[i];const a=t[i]||1;(n&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const l=s[i];return o<0&&(o+=l),o=ea(0,o,l-1),o}function pE(n,e,t,s,i,r){let o=e[i];const a=t[i]||1;(n&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const l=s[i];return o<0&&(o+=l),a>0?o=ea(0,o,l):o=ea(-1,o,l-1),o}function gb(n,e,t){let s=t.length;for(let i=0;i<t.length;i++)if(t[i]>1){s=i;break}for(let i=s+1;i<t.length;i++)if(e[i]>0||t[i]!==n[i])return!1;return!0}function xb(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function um(n,e,t){let s;const i=n.shape.length;typeof e=="number"?s=[e,...new Array(i-1).fill(0)]:e.length<i?s=e.concat(new Array(i-e.length).fill(0)):s=e.slice(),s.forEach(o=>{A(o!==-1,()=>"slice() does not support negative begin indexing.")});let r;return t==null?r=new Array(i).fill(-1):typeof t=="number"?r=[t,...new Array(i-1).fill(-1)]:t.length<i?r=t.concat(new Array(i-t.length).fill(-1)):r=t,r=r.map((o,a)=>o>=0?o:(A(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,r]}function yb(n,e,t,s,i,r,o,a,l){let c;if(s==null?(c=new Array(e.length),c.fill(1)):c=s,o!=null&&o&o-1)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};for(let v=0;v<h.dims;v++)u&&1<<v&a&&h.numAddAxisAfterEllipsis++,1<<v&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};p5(h,d);let p=!0,f=!0,g=!0;const y=[],m=[];for(let v=0;v<n.length;++v){if(d.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);const b=!!(d.shrinkAxisMask&1<<v),w=n[v];if(w===-1){y.push(b?1:-1);continue}const S=[d.beginMask&1<<v,d.endMask&1<<v],_=[d.strides[v]>0?0:-1,d.strides[v]>0?w:w-1];if(b&&d.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[v]===1;const I=!!(d.beginMask&1<<v&&d.endMask&1<<v);if(d.beginValid&&d.endValid){if(b){const T=d.begin[v]<0?w+d.begin[v]:d.begin[v];if(d.begin[v]=T,d.end[v]=d.begin[v]+1,T<0||T>=w)throw Error(`slice index ${d.begin[v]} of dimension ${v} out of bounds.`)}else d.begin[v]=uS(d.begin[v],0,d.strides[v],w,S,_),d.end[v]=uS(d.end[v],1,d.strides[v],w,S,_);const M=d.strides[v]===1&&d.begin[v]===0&&d.end[v]===w;p=p&&M,f=f&&(v===0&&d.strides[v]===1||M)}else p=p&&d.strides[v]===1&&I,f=f&&(v===0&&d.strides[v]===1||I);let N,k=!1;if(d.beginValid&&d.endValid?(N=d.end[v]-d.begin[v],k=!0):b?(N=1,k=!0):I&&w>=0&&(d.strides[v]<0?N=-w:N=w,k=!0),k){let M;N===0||N<0!=d.strides[v]<0?M=0:M=Math.trunc(N/d.strides[v])+(N%d.strides[v]!==0?1:0),y.push(M)}else y.push(-1)}for(let v=0;v<d.finalShapeGatherIndices.length;++v){const b=d.finalShapeGatherIndices[v];b>=0?m.push(y[b]):b===Nx&&m.push(1)}return{finalShapeSparse:m.filter((v,b)=>d.finalShapeGatherIndices[b]!==Nx),finalShape:m,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function p5(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const i=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<i;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(Nx),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(u5),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function uS(n,e,t,s,i,r){if(i[e])return t>0?r[e]:r[e+1&1];{const o=n<0?s+n:n;return o<r[0]?r[0]:o>r[1]?r[1]:o}}const f5=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:fb,computeFlatOffset:xb,computeOutShape:mb,getNormalizedAxes:d5,isSliceContinous:gb,maskToAxes:h5,parseSliceParams:um,sliceInfo:yb,startForAxis:dE,startIndicesWithElidedDims:cE,stopForAxis:pE,stopIndicesWithElidedDims:uE,stridesForAxis:hE,stridesWithElidedDims:oE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m5{static sgd(e){return new db(e)}static momentum(e,t,s=!1){return new iE(e,t,s)}static rmsprop(e,t=.9,s=0,i=null,r=!1){return new rE(e,t,s,i,r)}static adam(e=.001,t=.9,s=.999,i=null){return new nE(e,t,s,i)}static adadelta(e=.001,t=.95,s=null){return new eE(e,t,s)}static adamax(e=.002,t=.9,s=.999,i=null,r=0){return new sE(e,t,s,i,r)}static adagrad(e,t=.1){return new tE(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lo=m5;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function fE(){return new Promise(n=>g5(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(n,e){const t=n[0].length;n.forEach((i,r)=>{A(i.length===t,()=>`Error in concat${t}D: rank of tensors[${r}] must be the same as the rank of the rest (${t})`)}),A(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((i,r)=>{for(let o=0;o<t;o++)A(o===e||i[o]===s[o],()=>`Error in concat${t}D: Shape of tensors[${r}] (${i}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function qi(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var di;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(di||(di={}));function mE(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let i=1;i<t.length;++i){const r=t[i],o=s[s.length-t.length+i],a=s[o];if(r>=0)if(a>=0){if(a!==r)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${i+n}] = ${r} but shape[${i+n}] = ${a}`)}else s[o]=r}return s}function gE(n){const e={FIRST_DIM_SIZE:di.FIRST_DIM_SIZE,VALUE_ROWIDS:di.VALUE_ROWIDS,ROW_LENGTHS:di.ROW_LENGTHS,ROW_SPLITS:di.ROW_SPLITS,ROW_LIMITS:di.ROW_LIMITS,ROW_STARTS:di.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function xE(n){return n.length===0?0:n[0]===di.FIRST_DIM_SIZE?n.length-1:n.length}function yE(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let i=0;i<Math.min(t,s-1);++i){const r=n[i],o=e[i+1];if(r>=0&&o>=0&&r!==1&&r!==o)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${i-n.length}] = ${r} but ragged tensor input.flatValues.shape[${i-n.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vb=30;function hm(n){return n<=vb?n:px(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wb(n,e,t){const s=t*(typeof n=="number"?n:n[0]),i=e*(typeof n=="number"?n:n[1]);return[s,i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Th(n,e,t,s=!0){let i=[];if(s)i=i.concat(e.slice(0)),i.push(n[0]/t),i=i.concat(n.slice(1));else{i=i.concat(n[0]);const r=e.length;for(let o=0;o<r;++o)i=i.concat([n[o+1]/e[o],e[o]]);i=i.concat(n.slice(r+1))}return i}function Ih(n,e,t=!0){const s=[];if(t){s.push(e);for(let i=e+1;i<n;++i)i<=2*e?(s.push(i),s.push(i-(e+1))):s.push(i)}else{const i=[],r=[];for(let o=1;o<n;++o)o>=e*2+1||o%2===1?r.push(o):i.push(o);s.push(...i),s.push(0),s.push(...r)}return s}function Eh(n,e,t,s=!0){const i=[];s?i.push(n[0]/t):i.push(n[0]*t);for(let r=1;r<n.length;++r)r<=e.length?s?i.push(e[r-1]*n[r]):i.push(n[r]/e[r-1]):i.push(n[r]);return i}function Sb(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function _b(n,e,t){const s=n.slice(0,1);for(let i=0;i<t;++i)s.push(n[i+1]-e[i][0]-e[i][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dm=1.7580993408473768,pm=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cb=.3275911,Tb=.254829592,Ib=-.284496736,Eb=1.421413741,Mb=-1.453152027,kb=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tr(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function bE(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function vE(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let i=0;i<n.length;i+=4)t[Math.floor(i/4)]=n[i],s[Math.floor(i/4)]=n[i+1];return{real:t,imag:s}}function wE(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let i=2;i<n.length;i+=4)t[Math.floor(i/4)]=n[i],s[Math.floor(i/4)]=n[i+1];return{real:t,imag:s}}function Nb(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function SE(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function _E(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let i=0;i<Math.ceil(n/2);i++){const r=(e?2:-2)*Math.PI*(i/n);t[i]=Math.cos(r),s[i]=Math.sin(r)}return{real:t,imag:s}}function CE(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),i=Math.cos(s),r=Math.sin(s);return{real:i,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mg="->",x5=/->/g,hS=",",dS="...";function Ab(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(x5,"").length)/Mg.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Mg}").`);const[s,i]=n.split(Mg);A(s.indexOf(dS)===-1,()=>`The ellipsis notation ("${dS}") is not supported yet.`);const r=s.split(hS),o=r.length;if(e!==o)throw new Error(`Expected ${o} input tensors, received ${e}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<i.length;++d){const p=i[d];if(!r.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];a.indexOf(p)===-1&&p!==hS&&a.push(p)}const l=new Array(r.length);for(let d=0;d<o;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<r[d].length;++p)l[d].push(a.indexOf(r[d][p]))}const c=a.length,u=i.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function Rb(n,e){let t=new Array(n);t.fill(-1);for(let i=0;i<e.length;++i)t[e[i]]=i;const s=[];for(let i=0;i<n;++i)t[i]===-1&&s.push(i);return t=t.filter(i=>i!==-1),{permutationIndices:t,expandDims:s}}function $b(n,e,t){const s=new Array(n);for(let i=0;i<t.length;++i){const r=t[i].shape;for(let o=0;o<e[i].length;++o)s[e[i][o]]===void 0?s[e[i][o]]=r[o]:A(s[e[i][o]]===r[o],()=>`Expected dimension ${s[e[i][o]]} at axis ${o} of input shaped ${JSON.stringify(r)}, but got dimension ${r[o]}`)}}function Db(n,e){const t=n,s=[];let i=0;n.length===0&&t.push(-1),i=n.length+1;for(let o=0;o<i;++o)s.push([]);const r=[];for(let o=0;o<t.length;++o){const a=t[o],l=y5(e,a);for(const c of l)r.indexOf(c)===-1&&(s[o].push(c),r.push(c))}return{path:t,steps:s}}function Lb(n){return n.every((e,t)=>e===t)}function y5(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function Fb(n,e,t=0){let s=[];if(typeof e=="number")A(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const i=e.reduce((o,a)=>(a===-1&&(o+=1),o),0);A(i<=1,()=>"There should be only one negative value in split array.");const r=e.indexOf(-1);if(r!==-1){const o=e.reduce((a,l)=>l>0?a+l:a);e[r]=n.shape[t]-o}A(n.shape[t]===e.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function IE(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function EE(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function kE(n,e){return`size ${n} must be non-negative, not ${e}`}function NE(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function AE(n,e){const t=ce(n),s=ce(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function RE(n,e){const t=ce(n),s=ce(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ax(){return"segment ids must be >= 0"}function $E(){return"segment ids are not increasing"}function DE(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function LE(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n,e){let t=!1,s;for(n<=vb?(s=n,t=!0):s=px(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=px(n,s+1);return s}function PE(n,e,t){const s=[],i=n.length;for(let r=0;r<i;r++)r!==e?s.push(n[r]):s.push(t);return s}function Pb(n,e,t,s){const i=e.shape.length,r=n.shape.length;if(s!==0&&(s<-i||s>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${s}`);if(s<0&&(s+=i),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const o=n.shape[t],a=[];let l=1,c=1,u=1;for(let h=0;h<s;++h)a.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<t;h++)a.push(n.shape[h]),c*=n.shape[h];for(let h=s;h<i;h++)a.push(e.shape[h]);for(let h=t+1;h<r;h++)a.push(n.shape[h]),u*=n.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:a}}const b5=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Pb,computeOutShape:PE,segOpComputeOptimalWindowSize:FE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ir(n){try{return n.map(e=>ao(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function OE(n){return n.map(e=>to(e))}const v5=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Tb,ERF_A2:Ib,ERF_A3:Eb,ERF_A4:Mb,ERF_A5:kb,ERF_P:Cb,PARALLELIZE_THRESHOLD:vb,get RowPartitionType(){return di},SELU_SCALE:pm,SELU_SCALEALPHA:dm,applyActivation:ob,assertAndGetBroadcastShape:lt,assertAxesAreInnerMostDims:Vn,assertParamsConsistent:bb,assignToTypedArray:SE,axesAreInnerMostDims:Py,calculateShapes:_a,checkEinsumDimSizes:$b,checkPadOnDimRoundingMode:bs,combineLocations:kI,combineRaggedTensorToTensorShapes:mE,complexWithEvenIndex:vE,complexWithOddIndex:wE,computeConv2DInfo:Bn,computeConv3DInfo:yo,computeDefaultPad:Ay,computeDilation2DInfo:vh,computeOptimalWindowSize:hm,computeOutAndReduceShapes:Dn,computeOutShape:qi,computePool2DInfo:ti,computePool3DInfo:Ar,convertConv2DDataFormat:Rr,decodeEinsumEquation:Ab,eitherStridesOrDilationsAreOne:qn,expandShapeToKeepDim:xn,exponent:CE,exponents:_E,fromStringArrayToUint8:OE,fromUint8ToStringArray:Ir,getAxesPermutation:nn,getBroadcastDims:kl,getComplexWithIndex:Nb,getEinsumComputePath:Db,getEinsumPermutation:Rb,getFusedBiasGradient:rb,getFusedDyActivation:ib,getImageCenter:wb,getInnerMostAxes:un,getPermuted:Ih,getRaggedRank:xE,getReductionAxes:Cn,getReshaped:Th,getReshapedPermuted:Eh,getRowPartitionTypesHelper:gE,getSliceBeginCoords:Sb,getSliceSize:_b,getSparseFillEmptyRowsIndicesDenseShapeMismatch:TE,getSparseFillEmptyRowsNegativeIndexErrorMessage:IE,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:EE,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:NE,getSparseReshapeInputOutputMismatchErrorMessage:RE,getSparseReshapeInputOutputMultipleErrorMessage:AE,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:ME,getSparseReshapeNegativeOutputDimErrorMessage:kE,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:LE,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Ax,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:$E,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:DE,getUndoAxesPermutation:bo,isIdentityPermutation:Lb,log:tV,mergeRealAndImagArrays:Tr,prepareAndValidate:pb,prepareSplitSize:Fb,segment_util:b5,shouldFuse:ab,slice_util:f5,splitRealAndImagArrays:bE,stridesOrDilationsArePositive:ra,tupleValuesAreOne:ia,upcastType:Is,validateDefaultValueShape:yE,validateInput:JG,validateUpdateShape:qI,warn:Ls},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */c5();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zE={kernelName:ef,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(n,Ch(Oe(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5={kernelName:Tu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Gt(Oe(t,"float32")),i=Xn(tt(It(1),s));return ln(Je(n,i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5={kernelName:Iu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Xn(tt(Gt(Oe(t,"float32")),1));return Je(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _5={kernelName:ec,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=lt(t.shape,s.shape);return{a:()=>{let a=n;const l=Cn(t.shape,i);return l.length>0&&(a=Ze(a,l)),J(a,t.shape)},b:()=>{let a=n;const l=Cn(s.shape,i);return l.length>0&&(a=Ze(a,l)),J(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5={kernelName:V0,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,i)=>{t[i]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T5={kernelName:tf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>vt(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I5={kernelName:nf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>vt(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5={kernelName:Eu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Je(n,Xn(tt(It(1),Gt(Oe(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5={kernelName:Mu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Xn(Me(It(1),Gt(Oe(t,"float32"))));return Je(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5={kernelName:Au,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=lt(t.shape,s.shape);return{a:()=>{const a=Me(Gt(t),Gt(s));let l=q(n,Je(s,a));const c=Cn(t.shape,i);return c.length>0&&(l=Ze(l,c)),J(l,t.shape)},b:()=>{const a=Me(Gt(t),Gt(s));let l=ln(q(n,Je(t,a)));const c=Cn(s.shape,i);return c.length>0&&(l=Ze(l,c)),J(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5={kernelName:ku,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Je(n,Me(Gt(Oe(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A5={kernelName:Nu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Je(n,tt(It(1),Gt(Oe(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(n,e,t,s,i,r){const o=U(n,"dy","avgPool3dGrad"),a=U(e,"input","avgPool3dGrad");let l=o,c=a,u=!1;a.rank===4&&(u=!0,l=J(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=J(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),A(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),bs("avgPool3dGrad",i,r);const h={dy:l,input:c},d={filterSize:t,strides:s,pad:i,dimRoundingMode:r},p=Y.runKernel(H0,h,d);return u?J(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const $5=K({avgPool3dGrad_:R5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D5={kernelName:rf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:i,strides:r,pad:o,dimRoundingMode:a}=t;return{x:()=>$5(n,s,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L5(n,e,t,s,i){const r=U(n,"dy","avgPoolGrad"),o=U(e,"input","avgPoolGrad");A(o.rank===r.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${r.rank})`);let a=o,l=r,c=!1;o.rank===3&&(c=!0,a=J(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=J(r,[1,r.shape[0],r.shape[1],r.shape[2]])),A(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),A(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},h={filterSize:t,strides:s,pad:i},d=Y.runKernel(G0,u,h);return c?J(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const F5=K({avgPoolGrad_:L5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5={kernelName:sf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:i,strides:r,pad:o}=t;return{x:()=>F5(n,s,i,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5={kernelName:of,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,i]=e,{transposeA:r,transposeB:o}=t;return!r&&!o?{a:()=>Tt(n,i,!1,!0),b:()=>Tt(s,n,!0,!1)}:!r&&o?{a:()=>Tt(n,i,!1,!1),b:()=>Tt(n,s,!0,!1)}:r&&!o?{a:()=>Tt(i,n,!1,!0),b:()=>Tt(s,n,!1,!1)}:{a:()=>Tt(i,n,!0,!0),b:()=>Tt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5={kernelName:af,gradFunc:(n,e,t)=>{const{blockShape:s,crops:i}=t;return{x:()=>Hy(n,s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5={kernelName:JB,gradFunc:(n,e,t)=>{const s=t,i=s.inputShape,r=s.shape,o=Array.from(r);for(let l=i.length-1;l>=0;l--)if(i[l]===r[l])o[l]=1;else if(i[l]!==1)throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${r}].`);const a=[];for(let l=0;l<o.length;l++)o[l]>1&&a.push(l);return{x:()=>Ze(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V5={kernelName:Ru,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U5={kernelName:$u,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5={kernelName:Du,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:i,clipValueMax:r}=t;return{x:()=>rs(_r(va(s,i),sc(s,r)),n,vt(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5={kernelName:lf,inputsToSave:["x"],gradFunc:zE.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5={kernelName:cf,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:i}=t,r=dt(i,e[0].shape)[0],o=s.map(l=>l[r]);return Ps(n,o,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j5={kernelName:uf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,i]=e,{dilations:r,strides:o,pad:a,dataFormat:l}=t;return A(ia(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>Dy(s.shape,n,i,o,a,l),filter:()=>sb(s,n,i.shape,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5={kernelName:hf,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,i]=e,{strides:r,pad:o,dataFormat:a,dimRoundingMode:l}=t;return{dy:()=>oa(n,i,r,o,a,1,l),filter:()=>sb(n,s,i.shape,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(n,e,t,s,i){let r=n;n.rank===4&&(r=J(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let o=e;o.rank===4&&(o=J(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),A(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),A(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),A(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),A(r.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${t[3]}.`),A(o.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:r,dy:o},l={strides:s,pad:i,filterShape:t};return Y.runKernel(Y0,a,l)}const Z5=K({conv3DBackpropFilter_:q5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5={kernelName:df,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:i,pad:r}=t;A(ia(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[o,a]=e;return{x:()=>TI(o.shape,n,a,i,r),filter:()=>Z5(o,n,a.shape,i,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J5={kernelName:Lu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(ln(GI(Oe(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K5={kernelName:Fu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(HI(Oe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5={kernelName:pf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:i,exclusive:r,reverse:o}=t;return{x:()=>{const a=nn([i],s.rank);let l=EI(n,i,r,!o);return a!=null&&(l=bt(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6={kernelName:ff,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:i,pad:r,dimRoundingMode:o}=t,a=s??[1,1];A(ia(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=e;return A(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),A(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),A(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),A(qn(i,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${a}'.`),bs("depthwiseConv2d",r,o),{x:()=>gH(l.shape,n,c,i,r,a,o),filter:()=>fH(l,n,c.shape,i,r,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6={kernelName:mf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,i]=e,r={x:s,filter:i,dy:n},o={x:s,filter:i,dy:n};return{x:()=>Y.runKernel(fx,r,t),filter:()=>Y.runKernel(mx,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n6={kernelName:Ou,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>Y.runKernel(ry,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6={kernelName:zu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=q(er(ln(Gt(t))),2/Math.sqrt(Math.PI));return{x:()=>q(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6={kernelName:Bu,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r6={kernelName:xf,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>J(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o6={kernelName:Vu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(n,er(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6={kernelName:Uu,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6={kernelName:Wu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=lt(t.shape,s.shape);return{a:()=>{const a=Je(n,Oe(s,"float32")),l=Cn(t.shape,i);return l.length>0?J(Ze(a,l),t.shape):a},b:()=>{let a=q(n,Oe(t,"float32"));const l=Cn(s.shape,i);l.length>0&&(a=J(Ze(a,l),s.shape));const c=Gt(s);return ln(Je(a,Oe(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c6={kernelName:yf,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[i,r,o,a]=e,l=a??It(1),c=Cn(r.shape,i.shape),u=[];if(r.rank===1){for(let b=0;b<i.shape.length-1;++b)u.push(i.shape[b]);u.push(1)}const h=tt(i,r),d=q(n,l),p=VI(Me(o,It(s))),f=q(q(q(p,p),p),It(-.5));return{x:()=>r.rank===1?J(q(q(n,fi(J(p,[1,1,1,r.shape[0]]),u)),l),i.shape):J(q(q(n,p),l),i.shape),mean:()=>{let b=q(q(p,It(-1)),d);return r.rank===1&&(b=Ze(b,c)),J(b,r.shape)},variance:()=>{let b=q(q(f,h),d);return r.rank===1&&(b=Ze(b,c)),J(b,r.shape)},scale:()=>{const b=q(h,p);let w=q(n,b);return r.rank===1&&(w=Ze(w,c)),J(w,r.shape)},offset:()=>{let b=n;return r.rank===1&&(b=Ze(b,c)),J(b,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6={kernelName:bf,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,i]=e,{axis:r,batchDims:o}=t,a=dt(r,s.shape)[0],l=(c,u,h)=>()=>{const d=c.shape,p=u.size,f=d.slice(0,a),g=f.length,y=d.slice(r,d.length).slice(1),m=y.length,x=pS(0,g),v=pS(g+1,g+1+m),b=fS([f,[p],y]),w=J(h,b),S=J(u,[p]),_=fS([[g],x,v]),I=bt(w,_);let N=YI(I,S,c.shape[a]);const k=bo(_);return N=bt(N,k),N};if(o===1){const c=s.shape[0],u=s.split(c,0);return{x:()=>Cr(u.map((p,f)=>l(p,i.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>i}}else return{x:l(s,i,n),indices:()=>i}}};function pS(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function fS(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h6={kernelName:Gu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>vt(t),b:()=>vt(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6={kernelName:Hu,gradFunc:n=>({x:()=>Oe(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p6={kernelName:ju,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f6={kernelName:Xu,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m6={kernelName:qu,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g6={kernelName:wf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:i}=t,r=zs(s,0);return{x:()=>rs(r,n,q(n,i))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6={kernelName:Yu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Je(n,Me(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6={kernelName:Zu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Je(n,Oe(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6={kernelName:QB,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:i}=t;return{logits:()=>{const o=er(s);return tt(n,q(Ze(n,i,!0),o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v6(n,e,t,s=5,i=1,r=1,o=.5){const a={x:n,y:e,dy:t},l={depthRadius:s,bias:i,alpha:r,beta:o};return Y.runKernel(hy,a,l)}const w6=K({localResponseNormalizationBackprop_:v6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6={kernelName:Ef,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,i]=e,{depthRadius:r,bias:o,alpha:a,beta:l}=t;return{x:()=>w6(s,i,n,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(n,e,t,s){return e.rank<t.rank&&(e=J(e,xn(e.shape,s))),n.rank<t.rank&&(n=J(n,xn(n.shape,s))),{x:()=>q(n,Oe(Qi(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mS={kernelName:Mf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:i}=s,r=e[0],o=e[1],a=dt(i,r.shape),l=BE(n,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6={kernelName:Ju,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>q(n,Oe(va(t,s),"float32")),b:()=>q(n,Oe(ap(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C6(n,e,t,s,i,r,o){const a=U(n,"dy","maxPool3dGrad"),l=U(e,"input","maxPool3dGrad"),c=U(t,"output","maxPool3dGrad");let u=a,h=l,d=c,p=!1;l.rank===4&&(p=!0,u=J(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=J(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=J(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),A(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),A(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),A(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),bs("maxPool3dGrad",r,o);const f={dy:u,input:h,output:d},g={filterSize:s,strides:i,pad:r,dimRoundingMode:o},y=Y.runKernel(py,f,g);return p?J(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const T6=K({maxPool3dGrad_:C6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6={kernelName:Nf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,i]=e,{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=t;return{x:()=>T6(n,s,i,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(n,e,t,s,i,r,o){const a=U(n,"dy","maxPoolGrad"),l=U(e,"input","maxPoolGrad"),c=U(t,"output","maxPoolGrad");A(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),A(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),A(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),bs("maxPoolGrad",r,o);const u={dy:a,input:l,output:c},h={filterSize:s,strides:i,pad:r,dimRoundingMode:o};return Y.runKernel(dy,u,h)}const M6=K({maxPoolGrad_:E6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6={kernelName:kf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,i]=e,{filterSize:r,strides:o,pad:a}=t;return{x:()=>M6(n,s,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6={kernelName:Af,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:i}=t,r=dt(i,s.shape),a=Dn(s.shape,r)[1],l=ce(a);return{x:()=>{const u=s.shape.slice();r.forEach(p=>{u[p]=1});const h=J(n,u);return Je(q(h,wo(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6={kernelName:Rf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:i}=s,[r,o]=e,a=dt(i,r.shape),l=BE(n,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6={kernelName:Ku,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>q(n,Oe(sc(t,s),"float32")),b:()=>q(n,Oe(zs(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6={kernelName:$f,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:i}=t,r=i.map(o=>o[0]);return{x:()=>zt(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6={kernelName:Qu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=lt(t.shape,s.shape);return{a:()=>{const a=Cn(t.shape,i);return a.length>0?J(Ze(n,a),t.shape):n},b:()=>{const a=q(n,ln(cm(Je(t,s)))),l=Cn(s.shape,i);return l.length>0?J(Ze(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6={kernelName:eh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=lt(t.shape,s.shape);return{a:()=>{const a=q(n,Oe(s,"float32")),l=Cn(t.shape,i);return l.length>0?J(Ze(a,l),t.shape):a},b:()=>{const a=q(n,Oe(t,"float32")),l=Cn(s.shape,i);return l.length>0?J(Ze(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6={kernelName:Df,gradFunc:n=>({x:()=>ln(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P6={kernelName:Pf,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>An(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6={kernelName:Ff,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6={kernelName:Of,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return ca(n,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gS={kernelName:zf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:i}=t,r=i.map(o=>o[0]);return{x:()=>zt(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6={kernelName:th,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,i]=e,r=t,o=s,a=lt(r.shape,o.shape);return{a:()=>{const u=Oe(o,"float32");let h=q(n,q(u,aa(r,tt(u,It(1)))));const d=Cn(r.shape,a);return d.length>0&&(h=Ze(h,d)),J(h,r.shape)},b:()=>{const u=zs(r,0),h=rs(u,tr(r),vt(r));let d=q(n,q(i,h));const p=Cn(o.shape,a);return p.length>0&&(d=Ze(d,p)),J(d,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V6={kernelName:Bf,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,i=zs(t,0);return{x:()=>rs(i,n,q(n,s)),alpha:()=>{let r=rs(i,vt(n),q(n,t));const o=Cn(s.shape,n.shape);return o.length>0&&(r=Ze(r,o)),J(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(n,e,t){const s=n.shape.slice();s[t]=1;const i=J(e,s),r=Mx(n,t,!0,!1),o=Mx(n,t,!0,!0),a=q(r,o);return q(i,a)}function W6(n,e,t){const s=n.shape.length,i=s-t.length,r=nn(t,s);let o=n;r!=null&&(o=bt(n,r));const a=o.shape.slice(),c=a.splice(s-t.length,t.length).reduce((d,p)=>d*p,1);a.push(c);const u=o.reshape(a);let h=U6(u,e,i);if(h=h.reshape(o.shape),r!=null){const d=bo(r);h=bt(h,d)}return h}const G6={kernelName:Vf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:i}=t;let r=[];return i==null?r=s.shape.map((o,a)=>a):typeof i=="number"?r=[i]:r=i,{x:()=>W6(s,n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H6={kernelName:Pu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=lt(t.shape,s.shape);return{a:()=>{const a=Je(n,Oe(s,"float32")),l=Cn(t.shape,i);return l.length>0?J(Ze(a,l),t.shape):a},b:()=>{let a=q(n,Oe(t,"float32"));const l=Cn(s.shape,i);l.length>0&&(a=J(Ze(a,l),s.shape));const c=Gt(s);return ln(Je(a,Oe(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6={kernelName:nh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Je(n,ln(Gt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X6={kernelName:ih,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=q(sc(t,6),Ch(t));return{x:()=>q(n,Oe(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6={kernelName:sh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(n,Oe(Ch(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6={kernelName:Uf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y6={kernelName:Gf,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,i={dy:n,images:s};return{images:()=>Y.runKernel(vy,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6={kernelName:Wf,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,i={dy:n,images:s};return{images:()=>Y.runKernel(by,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6={kernelName:Hf,gradFunc:(n,e,t)=>{const{dims:s}=t,i=dt(s,n.shape);return{x:()=>la(n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6={kernelName:rh,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ej={kernelName:oh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ln(Je(n,q(aa(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tj={kernelName:jf,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>Oe(vt(t),"float32"),t:()=>q(n,Oe(t,n.dtype)),e:()=>q(n,Oe(Vy(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj={kernelName:ah,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=zs(t,It(0)),i=It(dm),r=It(pm),o=q(n,r),a=q(q(n,i),er(Oe(t,"float32")));return rs(s,o,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj={kernelName:hh,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(n,q(t,tt(It(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij={kernelName:uh,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj={kernelName:lh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(Ly(Oe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oj={kernelName:ch,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(II(Oe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aj={kernelName:Xf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:i,size:r}=t,o=s.shape,[a,l]=um(s,i,r),c=[];for(let u=0;u<n.rank;u++)c.push([a[u],o[u]-a[u]-l[u]]);return{x:()=>Gy(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj={kernelName:Jf,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:i}=t,r=!0,o=q(n,s);return{logits:()=>tt(o,q(Ze(o,[i],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj={kernelName:dh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(n,nc(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xS={kernelName:Zf,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:i}=t;return{x:()=>$y(n,s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yS={kernelName:Yf,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>ms(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uj={kernelName:ph,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Je(n,q(Xn(Oe(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hj={kernelName:wy,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(n,q(Oe(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dj={kernelName:fh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=It(2);return{a:()=>q(n,q(i,tt(t,s))),b:()=>q(n,q(i,tt(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pj={kernelName:bh,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fj={kernelName:mh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,i=lt(t.shape,s.shape);return{a:()=>{let a=n;const l=Cn(t.shape,i);return l.length>0&&(a=Ze(a,l)),J(a,t.shape)},b:()=>{let a=n;const l=Cn(s.shape,i);return l.length>0&&(a=Ze(a,l)),J(ln(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mj={kernelName:qf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,i=s.shape.slice(),{axis:r}=t;dt(r,s.shape).forEach(c=>{i[c]=1});const a=J(n,i),l=q(a,wo(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj={kernelName:gh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Je(n,Gt(Ly(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xj={kernelName:xh,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(tt(It(1),Gt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yj={kernelName:yh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:i}=t;return{x:()=>{let o=vt(s);if(s.rank===1)for(let a=0;a<i[0];++a)o=Me(o,zt(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)o=Me(o,zt(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)o=Me(o,zt(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)for(let u=0;u<i[3];++u)o=Me(o,zt(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bj={kernelName:fl,gradFunc:(n,e,t)=>{const s=t,{perm:i}=s,r=bo(i);return{x:()=>bt(n,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj={kernelName:Kf,gradFunc:(n,e,t)=>{const s=t,{axis:i}=s;return{value:()=>Cr(n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wj={kernelName:Qf,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Sj(n,t)}}};function Sj(n,e){const t=vo(e,vt(e)),s=Oy(n,t);let i=va(e,It(0,"int32"));const r=s.rank-i.rank;for(let a=0;a<r;++a)i=ds(i,a+1);i=_r(i,wo(s.shape,"bool"));const o=vt(s);return rs(i,s,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _j={kernelName:em,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cj=[zE,w5,S5,_5,C5,T5,I5,E5,M5,k5,N5,A5,D5,P5,O5,z5,B5,V5,U5,W5,G5,H5,X5,j5,Y5,J5,K5,Q5,e6,t6,H6,n6,s6,i6,r6,o6,l6,a6,c6,u6,h6,d6,p6,f6,m6,g6,x6,y6,b6,S6,mS,mS,_6,I6,k6,N6,A6,R6,$6,D6,L6,F6,P6,O6,z6,gS,gS,B6,V6,G6,j6,X6,q6,Z6,Y6,J6,K6,Q6,ej,tj,nj,sj,ij,rj,oj,aj,lj,cj,xS,xS,yS,yS,uj,dj,hj,pj,fj,mj,gj,xj,yj,bj,vj,wj,_j];for(const n of Cj)nV(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.abs=function(){return this.throwIfDisposed(),es(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.acos=function(){return this.throwIfDisposed(),oU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.acosh=function(){return this.throwIfDisposed(),lU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.add=function(n){return this.throwIfDisposed(),Me(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.all=function(n,e){return this.throwIfDisposed(),SI(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.any=function(n,e){return this.throwIfDisposed(),Ix(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.argMax=function(n){return this.throwIfDisposed(),su(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.argMin=function(n){return this.throwIfDisposed(),pU(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.asScalar=function(){return this.throwIfDisposed(),A(this.size===1,()=>"The array must have only 1 element."),J(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.asType=function(n){return this.throwIfDisposed(),Oe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.as1D=function(){return this.throwIfDisposed(),J(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.as2D=function(n,e){return this.throwIfDisposed(),J(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),J(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),J(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.as5D=function(n,e,t,s,i){return this.throwIfDisposed(),J(this,[n,e,t,s,i])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.asin=function(){return this.throwIfDisposed(),mU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.asinh=function(){return this.throwIfDisposed(),xU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.atan=function(){return this.throwIfDisposed(),bU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.atan2=function(n){return this.throwIfDisposed(),wU(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.atanh=function(){return this.throwIfDisposed(),_U(this)};ae().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),Ry(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),$y(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.batchNorm=function(n,e,t,s,i){return this.throwIfDisposed(),rm(this,n,e,t,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Gc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.cast=function(n){return this.throwIfDisposed(),Oe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.ceil=function(){return this.throwIfDisposed(),YU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),Os(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof bn&&(n=[n]),ms([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.conv1d=function(n,e,t,s,i,r){return this.throwIfDisposed(),_I(this,n,e,t,s,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.conv2dTranspose=function(n,e,t,s,i){return this.throwIfDisposed(),CI(this,n,e,t,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.conv2d=function(n,e,t,s,i,r){return this.throwIfDisposed(),oa(this,n,e,t,s,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.cos=function(){return this.throwIfDisposed(),Ly(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.cosh=function(){return this.throwIfDisposed(),II(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),Mx(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),EI(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),wW(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.depthwiseConv2d=function(n,e,t,s,i,r){return this.throwIfDisposed(),Fy(this,n,e,t,s,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.dilation2d=function(n,e,t,s,i){return this.throwIfDisposed(),CW(this,n,e,t,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.divNoNan=function(n){return this.throwIfDisposed(),kW(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.div=function(n){return this.throwIfDisposed(),Je(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.dot=function(n){return this.throwIfDisposed(),AW(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.elu=function(){return this.throwIfDisposed(),am(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.equal=function(n){return this.throwIfDisposed(),Qi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.erf=function(){return this.throwIfDisposed(),MI(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),WW(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.exp=function(){return this.throwIfDisposed(),er(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.expandDims=function(n){return this.throwIfDisposed(),ds(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.expm1=function(){return this.throwIfDisposed(),XW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.fft=function(){return this.throwIfDisposed(),XI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.flatten=function(){return this.throwIfDisposed(),J(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.floor=function(){return this.throwIfDisposed(),cm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.floorDiv=function(n){return this.throwIfDisposed(),wI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.gather=function(n,e,t){return this.throwIfDisposed(),Oy(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.greaterEqual=function(n){return this.throwIfDisposed(),va(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.greater=function(n){return this.throwIfDisposed(),zs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.ifft=function(){return this.throwIfDisposed(),kx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.irfft=function(){return this.throwIfDisposed(),OG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.isFinite=function(){return this.throwIfDisposed(),n4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.isInf=function(){return this.throwIfDisposed(),i4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.isNaN=function(){return this.throwIfDisposed(),o4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.leakyRelu=function(n){return this.throwIfDisposed(),By(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.lessEqual=function(n){return this.throwIfDisposed(),sc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.less=function(n){return this.throwIfDisposed(),ap(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),h4(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logSigmoid=function(){return this.throwIfDisposed(),y4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logSoftmax=function(n){return this.throwIfDisposed(),$I(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),DI(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.log=function(){return this.throwIfDisposed(),tr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.log1p=function(){return this.throwIfDisposed(),RI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logicalAnd=function(n){return this.throwIfDisposed(),_r(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logicalNot=function(){return this.throwIfDisposed(),Vy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logicalOr=function(n){return this.throwIfDisposed(),LI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logicalXor=function(n){return this.throwIfDisposed(),I4(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Tt(this,n,e,t)};ae().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),Uy(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.max=function(n,e){return this.throwIfDisposed(),gi(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.maximum=function(n){return this.throwIfDisposed(),vo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.mean=function(n,e){return this.throwIfDisposed(),mn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.min=function(n,e){return this.throwIfDisposed(),op(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.minimum=function(n){return this.throwIfDisposed(),ou(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),D4(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.mod=function(n){return this.throwIfDisposed(),F4(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.mul=function(n){return this.throwIfDisposed(),q(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.neg=function(){return this.throwIfDisposed(),ln(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.norm=function(n,e,t){return this.throwIfDisposed(),lm(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.notEqual=function(n){return this.throwIfDisposed(),lp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),FI(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.onesLike=function(){return this.throwIfDisposed(),ei(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.pad=function(n,e){return this.throwIfDisposed(),Gy(this,n,e)};ae().prototype.pool=function(n,e,t,s,i,r){return this.throwIfDisposed(),j4(this,n,e,t,s,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.pow=function(n){return this.throwIfDisposed(),aa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.prelu=function(n){return this.throwIfDisposed(),jy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.prod=function(n,e){return this.throwIfDisposed(),Z4(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.reciprocal=function(){return this.throwIfDisposed(),yG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.relu=function(){return this.throwIfDisposed(),Sa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.relu6=function(){return this.throwIfDisposed(),zI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.reshapeAs=function(n){return this.throwIfDisposed(),J(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.reshape=function(n){return this.throwIfDisposed(),J(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),KI(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),QI(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.reverse=function(n){return this.throwIfDisposed(),la(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.rfft=function(){return this.throwIfDisposed(),VG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.round=function(){return this.throwIfDisposed(),BI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.rsqrt=function(){return this.throwIfDisposed(),VI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.selu=function(){return this.throwIfDisposed(),UI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.separableConv2d=function(n,e,t,s,i,r){return this.throwIfDisposed(),WI(this,n,e,t,s,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sigmoid=function(){return this.throwIfDisposed(),nc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sign=function(){return this.throwIfDisposed(),EG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sin=function(){return this.throwIfDisposed(),GI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sinh=function(){return this.throwIfDisposed(),HI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.slice=function(n,e){return this.throwIfDisposed(),zt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.softmax=function(n){return this.throwIfDisposed(),nb(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.softplus=function(){return this.throwIfDisposed(),wh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Hy(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.split=function(n,e){return this.throwIfDisposed(),Ps(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sqrt=function(){return this.throwIfDisposed(),Xn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.square=function(){return this.throwIfDisposed(),Gt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.squaredDifference=function(n){return this.throwIfDisposed(),WG(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.squeeze=function(n){return this.throwIfDisposed(),_h(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof bn?[this,n]:[this,...n];return Cr(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.step=function(n){return this.throwIfDisposed(),Ch(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.stridedSlice=function(n,e,t,s,i,r,o,a){return this.throwIfDisposed(),qG(this,n,e,t,s,i,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sub=function(n){return this.throwIfDisposed(),tt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sum=function(n,e){return this.throwIfDisposed(),Ze(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.tan=function(){return this.throwIfDisposed(),YG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.tanh=function(){return this.throwIfDisposed(),im(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.tile=function(n){return this.throwIfDisposed(),fi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.toBool=function(){return this.throwIfDisposed(),Oe(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.toFloat=function(){return this.throwIfDisposed(),Oe(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.toInt=function(){return this.throwIfDisposed(),Oe(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.topk=function(n,e){return this.throwIfDisposed(),QG(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.transpose=function(n){return this.throwIfDisposed(),bt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.unique=function(n){return this.throwIfDisposed(),nH(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),YI(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.unstack=function(n){return this.throwIfDisposed(),ca(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.where=function(n,e){return this.throwIfDisposed(),rs(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.zerosLike=function(){return this.throwIfDisposed(),vt(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Fi extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Fi.prototype)}}class Zs extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zs.prototype)}}class X extends Error{constructor(e){super(e),Object.setPrototypeOf(this,X.prototype)}}class ut extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ut.prototype)}}class Ob extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ob.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class VE{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ua(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Pi(n,e){if(!n)throw new Ob(e)}function bS(n,e){let t=0;for(const s of n)s===e&&t++;return t}function ps(n){return n.length===1?n[0]:n}function kt(n){return Array.isArray(n)?n:[n]}function fr(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Oo(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let Us={};function zb(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Rx(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Rx(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:Rx(s))}}}function Mh(n,e={},t={},s="object",i=!1){if(typeof n=="string"){const r=n;let o;if(r in t)o=t[r];else if(r in Us)o=Us[r];else if(o=e[r],o==null)throw new X(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const r=n;if(r.className==null||r.config==null)throw new X(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const o=r.className;let a,l;if(o in t?[a,l]=t[o]:o in Us?[a,l]=Us.className:o in e&&([a,l]=e[o]),a==null)throw new X(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const p of Object.keys(Us))c[p]=Us[p];for(const p of Object.keys(t))c[p]=t[p];const u=r.config;u.customObjects=c;const h=Object.assign({},Us);for(const p of Object.keys(t))Us[p]=t[p];Rx(r.config);const d=l(a,r.config,t,i);return Us=Object.assign({},h),d}else{const c=Object.assign({},Us);for(const h of Object.keys(t))Us[h]=t[h];const u=new a(r.config);return Us=Object.assign({},c),u}}}function Tj(n,e){return n<e?-1:n>e?1:0}function Td(n,e){return-1*Tj(n,e)}function no(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function Ij(n){if(n==null)throw new X(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Ca(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new X(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function Bb(n,e,t=0,s=1/0){return Pi(t>=0),Pi(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(i=>typeof i===e)}function Rn(n,e){Array.isArray(n)?(A(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>Rn(t,`element ${s+1} of ${e}`))):A(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${UE(n)}.`)}function UE(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>UE(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function Ej(n,e,t){let s=t!=null?t():us(),i;return(...o)=>{const a=t!=null?t():us();return a-s<e||(s=a,i=n(...o)),i}}function WE(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Mj=0;function GE(){return Mj++}const Id={};function fm(n=""){return n in Id||(Id[n]=0),Id[n]+=1,n+Id[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const kj=["channelsFirst","channelsLast"],Nj=["nearest","bilinear"],Aj=["valid","same","causal"],Rj=["max","avg"],$j=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Qa=new Map;function hn(n){Ca(kj,"DataFormat",n)}function Dj(n){Ca(Nj,"InterpolationFormat",n)}function Bs(n){Ca(Aj,"PaddingMode",n)}function HE(n){Ca(Rj,"PoolMode",n)}const Hc=[],vS="/";function Yo(n,e){Hc.push(n);try{const t=e();return Hc.pop(),t}catch(t){throw Hc.pop(),t}}function Lj(){return Hc.length===0?"":Hc.join(vS)+vS}function jE(n){if(!qE(n))throw new Error("Not a valid tensor name: '"+n+"'");return Lj()+n}function XE(n){if(!qE(n))throw new Error("Not a valid tensor name: '"+n+"'");Qa.has(n)||Qa.set(n,0);const e=Qa.get(n);if(Qa.set(n,Qa.get(n)+1),e>0){const t=`${n}_${e}`;return Qa.set(t,1),t}else return n}const Fj=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function qE(n){return!!n.match(Fj)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Pj(n){return n===parseInt(n.toString(),10)}function so(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let i=e;i<t;++i)s*=n[i];return s}function Al(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function lo(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function vi(n,e){if(e<n)throw new X(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let kg;function vn(){return kg==null&&(kg=NV().epsilon()),kg}function wi(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zi(n,e){return Oe(n,e)}function kh(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),J(n,t)}function Oj(n,e){return te(()=>{if(n.shape.length!==2)throw new X(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=kh(n,1);return $x(t,[1,e,1])})}function zj(n){const e=[so(n.shape)];return J(n,e)}function Bj(n){if(n.rank<=1)throw new X(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],so(n.shape,1)];return J(n,e)}function Jo(n,e,t){return te(()=>{switch(n.rank){case 1:return eb(n,e,t);case 2:return jI(n,[e,0],[t,n.shape[1]]);case 3:return tb(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return up(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return zt(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return zt(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new X(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Ng(n,e,t){return te(()=>{switch(n.rank){case 1:return eb(n,e,t);case 2:return jI(n,[0,e],[n.shape[0],t]);case 3:return tb(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return up(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Ed(n,e,t,s){return te(()=>{switch(n.rank){case 1:return eb(n,e,t);case 2:switch(s){case 1:return Jo(n,e,t);case 2:return Ng(n,e,t);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Jo(n,e,t);case 2:return tb(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Ng(n,e,t);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Jo(n,e,t);case 2:return up(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return up(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Ng(n,e,t);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Vb(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),ms(n,e)}function wS(n,e){switch(n.rank){case 1:return QU([n,e]);case 2:return tW([n,e],0);case 3:return sW([n,e],0);case 4:return rW([n,e],0);default:throw new X(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function $x(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new X(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return fi(n,e)}function mm(n,e=0,t=1,s,i){return fG(n,e,t,s,i)}function Yi(n,e,t,s){if(n.rank<2||e.rank<2)throw new ut(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const i=n.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(i!==r)throw new ut(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return aS({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Dx(n.rank,s,wi()):null,activation:t});{const i=n.shape.slice(),r=i.pop();n=J(n,[-1,r]);const o=e.shape.slice(),a=o.pop(),l=o.pop(),c=[...o,a],u=Array.from({length:e.rank},(f,g)=>g===0?e.rank-2:g<=e.rank-2?g-1:g);e=J(bt(e,u),[l,-1]);const h=[...i,...c];return J(aS({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Dx(n.rank,s,wi()):null,activation:t}),h)}}function ZE(n,e,t){return te(()=>(Array.isArray(e)?e=Ts(e,"int32"):e=Oe(e,"int32"),Oy(n,e,t)))}function Nh(n){return q(n,n)}function Dx(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new X(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?J(e,[1,s[0],1,1,1]):J(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?J(e,[1,1,1,1,s[0]]):J(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?J(e,[1,s[0],1,1]):J(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?J(e,[1,1,1,s[0]]):J(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?J(e,[1,s[0],1]):J(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?J(e,[1,1,s[0]]):J(e,[1].concat(s))}else if(n<3)return e;throw new X(`Unsupported input rank by biasAdd: ${e.rank}`)}function Ii(n,e,t){return te(()=>(t==null&&(t=wi()),hn(t),Me(n,Dx(n.rank,e,t))))}function Vj(n,e=1){if(e!==1)throw new ut(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return am(n)}function Uj(n){return te(()=>Je(n,Me(es(n),1)))}function YE(n,e,t,s){return te(()=>cH(n,e,t,s))}function Wj(n){return te(()=>{const e=Me(.5,q(.2,n));return Os(e,0,1)})}function Ah(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Gj=["fanIn","fanOut","fanAvg"],Hj=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jj(n){Ca(Gj,"FanMode",n)}function Xj(n){Ca(Hj,"Distribution",n)}class ni extends rc{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class JE extends ni{apply(e,t){return An(e,t)}}JE.className="Zeros";ve(JE);class Ub extends ni{apply(e,t){return wo(e,t)}}Ub.className="Ones";ve(Ub);class KE extends ni{constructor(e){if(super(),typeof e!="object")throw new X(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new X(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return te(()=>q(It(this.value),wo(e,t)))}getConfig(){return{value:this.value}}}KE.className="Constant";ve(KE);class QE extends ni{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Sh(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}QE.className="RandomUniform";ve(QE);class eM extends ni{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ut(`randomNormal does not support dType ${t}.`);return mm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}eM.className="RandomNormal";ve(eM);class tM extends ni{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ut(`truncatedNormal does not support dType ${t}.`);return ZI(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}tM.className="TruncatedNormal";ve(tM);class nM extends ni{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return te(()=>{if(e.length!==2||e[0]!==e[1])throw new X("Identity matrix initializer can only be used for 2D square matrices.");return q(this.gain,AI(e[0]))})}getConfig(){return{gain:this.gain}}}nM.className="Identity";ve(nM);function qj(n,e="channelsLast"){let t,s;if(hn(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const i=so(n,2);t=n[1]*i,s=n[0]*i}else if(e==="channelsLast"){const i=so(n,0,n.length-2);t=n[n.length-2]*i,s=n[n.length-1]*i}}else{const i=so(n);t=Math.sqrt(i),s=Math.sqrt(i)}return[t,s]}class Es extends ni{constructor(e){if(super(),e.scale<0)throw new X(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,jj(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,Xj(this.distribution),this.seed=e.seed}apply(e,t){const s=qj(e),i=s[0],r=s[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,i):this.mode==="fanOut"?o/=Math.max(1,r):o/=Math.max(1,(i+r)/2),this.distribution==="normal"){const a=Math.sqrt(o);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ut(`${this.getClassName()} does not support dType ${t}.`);return ZI(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*o);return Sh(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Es.className="VarianceScaling";ve(Es);class Wb extends Es{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Es.className}}Wb.className="GlorotUniform";ve(Wb);class Gb extends Es{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Es.className}}Gb.className="GlorotNormal";ve(Gb);class Hb extends Es{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Es.className}}Hb.className="HeNormal";ve(Hb);class jb extends Es{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Es.className}}jb.className="HeUniform";ve(jb);class Xb extends Es{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Es.className}}Xb.className="LeCunNormal";ve(Xb);class qb extends Es{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Es.className}}qb.className="LeCunUniform";ve(qb);class sM extends ni{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return te(()=>{if(e.length<2)throw new ut("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=ce(e.slice(0,-1)),i=e[e.length-1],r=s*i;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const o=[Math.max(i,s),Math.min(i,s)],a=mm(o,0,1,t,this.seed),l=r5.qr(a,!1);let c=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(i,s)*Math.min(i,s)],[Math.min(i,s)+1]);return c=q(c,h.sign()),s<i&&(c=c.transpose()),q(It(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}sM.className="Orthogonal";ve(sM);const SS={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function _S(n,e={}){return Mh(n,Hs.getMap().classNameMap,e,"initializer")}function en(n){return zb(n)}function Zt(n){if(typeof n=="string"){const e=n in SS?SS[n]:n;if(e==="GlorotNormal")return new Gb;if(e==="GlorotUniform")return new Wb;if(e==="HeNormal")return new Hb;if(e==="HeUniform")return new jb;if(e==="LeCunNormal")return new Xb;if(e==="LeCunUniform")return new qb;{const t={};return t.className=e,t.config={},_S(t)}}else return n instanceof ni?n:_S(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lx(n){return Array.isArray(n)&&Array.isArray(n[0])}function hp(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function st(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new X(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function _t(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new X(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dp(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,i)=>s*i);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const CS="Variable";class Zj{constructor(e,t="float32",s=CS,i=!0,r=null){this.dtype=t??"float32",this.shape=e.shape,this.id=GE(),s=s??CS,this.originalName=jE(s),this.name=XE(this.originalName),this.trainable_=i,this.constraint=r,this.val=rH(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),Yj(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Yj(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Fx(n){return n.map(e=>e.read())}function Zb(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class wn{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class nr{constructor(e,t,s,i,r,o,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=i,this.callArgs=r,this.outputTensorIndex=a,this.id=GE(),o!=null&&(this.originalName=jE(o),this.name=XE(this.originalName)),this.rank=t.length}}let Jj=0;class gm{constructor(e,t){this.callArgs=t,this.id=Jj++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Kj=0;class pt extends rc{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Kj++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=fr(s)+"_"+fm(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),s=[r].concat(e.inputShape)}this.batchInputShape=s;let i=e.dtype;i==null&&(i=e.inputDType),i==null&&(i="float32"),this.dtype=i}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Zs(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new X(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ps(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ps(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Fi(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Fi(`Layer ${this.name} is not connected, no input to return.`);return ps(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Fi(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Fi(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ps(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=kt(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=kt(this.inputSpec);if(t.length!==s.length)throw new X(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let i=0;i<t.length;i++){const r=t[i],o=s[i];if(o==null)continue;const a=r.rank;if(o.ndim!=null&&a!==o.ndim)throw new X(`Input ${i} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${a}`);if(o.maxNDim!=null&&a>o.maxNDim)throw new X(`Input ${i} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${a}`);if(o.minNDim!=null&&a<o.minNDim)throw new X(`Input ${i} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${a}.`);if(o.dtype!=null&&r.dtype!==o.dtype)throw new X(`Input ${i} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const l=r.shape;for(const c in o.axes){const u=Number(c),h=o.axes[c],d=u>=0?l[u]:l[l.length+u];if(h!=null&&[h,null].indexOf(d)===-1)throw new X(`Input ${i} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${h} but got shape ${l}.`)}}if(o.shape!=null)for(let l=0;l<o.shape.length;++l){const c=o.shape[l],u=r.shape[l];if(c!=null&&u!=null&&c!==u)throw new X(`Input ${i} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=kt(e),i=tX(e),r=nX(e);if(i===r)throw new X("Arguments to apply() must be all SymbolicTensors or all Tensors");return Yo(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const o=[];for(const a of kt(e))o.push(a.shape);this.build(ps(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let o=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,o);const a=kt(o),l=[];for(let c of a)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(o=ps(l),this.activityRegularizer!=null)throw new ut("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=Qj(e),a=this.computeOutputShape(o);let l;const c=eX(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?o[0]:o),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,h)=>new nr(c,u,this,kt(e),t,this.name,h)):l=new nr(c,a,this,kt(e),t,this.name),this.addInboundNode(e,l,null,null,o,a,t),this._refCount++,this.activityRegularizer!=null)throw new ut("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,i)=>{s!=null&&e[i]!=null&&e[i]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Fi(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Fi(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Zs(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return dp(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Fx(e?this.trainableWeights:this.weights)}setWeights(e){te(()=>{const t=this.weights;if(t.length!==e.length)throw new X(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],i=Fx(t);for(let r=0;r<i.length;++r){const o=i[r],a=t[r],l=e[r];if(!Et(o.shape,l.shape))throw new X(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}Zb(s)})}addWeight(e,t,s,i,r,o,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new X(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(i=l!=null?l():Zt("zeros"));const c=i.apply(t,s),u=new Zj(c,s,e,o,a);return c.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),o==null&&(o=!0),o?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=kt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const i=this.computeMask(e,s),r=kt(t),o=kt(i);if(r.length!==o.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let a=0;a<r.length;a++)r[a].kerasMask=o[a]}addInboundNode(e,t,s,i,r,o,a=null){const l=kt(e);t=kt(t),s=kt(s),i=kt(i),r=hp(r),o=hp(o);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new gm({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:i,inputShapes:r,outputShapes:o},a);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Qj(n){n=kt(n);const e=[];for(const t of n)e.push(t.shape);return ps(e)}function eX(n){return"float32"}function iM(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const i=[];for(let r=0;r<s.inboundLayers.length;r++){const o=s.inputTensors[r],a=s.inboundLayers[r],l=s.nodeIndices[r],c=iM(o,a,l);for(const u of c)i.indexOf(u)===-1&&i.push(u)}return i}}}function tX(n){let e=!0;for(const t of kt(n))if(!(t instanceof nr)){e=!1;break}return e}function nX(n){let e=!0;for(const t of kt(n))if(t instanceof nr){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rh extends pt{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:fm("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new X("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new X("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new X("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const i=new nr(this.dtype,this.batchInputShape,this,[],{},this.name);i.nodeIndex=0,i.tensorIndex=0,new gm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[i],outputTensors:[i],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new X(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Rh.className="InputLayer";ve(Rh);function sX(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new X("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new Rh({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iX(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return Oe(e,n.dtype)}catch{throw new X(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class jr{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof jr)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=iX(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new X(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof nr){if(this.id2Value[e.id]==null)throw new X(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new X(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof nr){if(this.id2Value[e.id]==null)throw new X(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new X(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&ft(this.id2Mask)}}const pp=new VE,fp=new VE;function rX(n){pp!=null&&pp.setMaxEntries(n),fp!=null&&fp.setMaxEntries(n)}function Dc(n,e,t,s){const i=t==null?!1:t.training,r=Array.isArray(n),o=r?n:[n],a=o.map(f=>f.name),l=[],c=e.names();for(const f of a)c.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);const u=a.join(",")+"|"+e.names().sort().join(",");let h=pp.get(u),d;if(h==null){const f=oX(o,e);h=f.sorted,d=f.recipientCounts,pp.put(u,h),fp.put(u,d)}d={},i||Object.assign(d,fp.get(u));const p=new jr(e);for(let f=0;f<h.length;++f){const g=h[f],y=g.sourceLayer;if(y instanceof Rh)continue;const m=[],x=[],v=[];let b=!1;for(const N of g.inputs){const k=p.getValue(N),M=p.getMask(N);m.push(k),x.push(M),M!=null&&(b=!0),i||(d[N.name]--,d[N.name]===0&&!e.hasKey(N)&&a.indexOf(N.name)===-1&&!k.isDisposed&&N.sourceLayer.stateful!==!0&&v.push(k))}b&&(t=t||{},t.mask=x[0]);const w=kt(y.apply(m,t));let S=null;y.supportsMasking&&(S=y.computeMask(m,x));const _=lX(g),I=Array.isArray(_)?_:[_];for(let N=0;N<I.length;++N){p.hasKey(I[N])||p.add(I[N],w[N],Array.isArray(S)?S[0]:S);const k=a.indexOf(I[N].name);k!==-1&&(l[k]=w[N])}i||ft(v)}return p.disposeMasks(),r?l:l[0]}function oX(n,e){A(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const i=TS(n[0],e);t=i.sorted,s=i.recipientMap}else{const i=new Set;for(const r of n){const{sorted:o,recipientMap:a}=TS(r,e);for(const l of o)i.has(l.name)||(t.push(l),i.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(c=>s[l].add(c))}}return{sorted:t,recipientCounts:aX(s)}}function aX(n){const e={};for(const t in n)e[t]=n[t].size;return e}function TS(n,e){const t=new Set,s=[],i={};for(const a of e.names())t.add(a);const r=[],o=[];for(r.push(n);r.length>0;){const a=r[r.length-1];if(t.has(a.name)){r.pop();continue}const l=o[o.length-1]===r.length-1;if(a.inputs.length===0||l)r.pop(),s.push(a),t.add(a.name),l&&o.pop();else{o.push(r.length-1);for(const c of a.inputs)i[c.name]==null&&(i[c.name]=new Set),i[c.name].add(a.name),!t.has(c.name)&&r.push(c)}}return{sorted:s,recipientMap:i}}function lX(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const i of n.sourceLayer.inboundNodes[s].outputTensors)if(i.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cX=se();cX.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,rX);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yb(n,e){return te(()=>Xn(Ze(q(n,n),e,!0)))}class $h extends rc{getConfig(){return{}}}class rM extends $h{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return te(()=>{const t=Yb(e,this.axis),s=Os(t,0,this.maxValue);return q(e,Je(s,Me(vn(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}rM.className="MaxNorm";ve(rM);class oM extends $h{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return te(()=>Je(e,Me(vn(),Yb(e,this.axis))))}getConfig(){return{axis:this.axis}}}oM.className="UnitNorm";ve(oM);class aM extends $h{apply(e){return Sa(e)}}aM.className="NonNeg";ve(aM);class lM extends $h{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return te(()=>{const t=Yb(e,this.axis),s=Me(q(this.rate,Os(t,this.minValue,this.maxValue)),q(1-this.rate,t));return q(e,Je(s,Me(vn(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}lM.className="MinMaxNorm";ve(lM);const IS={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Sn(n){return zb(n)}function ES(n,e={}){return Mh(n,Hs.getMap().classNameMap,e,"constraint")}function _n(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in IS?IS[n]:n,config:{}};return ES(t)}else return n instanceof $h?n:ES(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Ao(n){if(n==null)return;const e=[],t=[],s=[];for(const i in n){const r=n[i];if(typeof r!="number"){const o=r;e.push(o.data()),t.push(i),s.push(o)}}if(e.length>0){const i=await Promise.all(e);for(let r=0;r<i.length;++r)n[t[r]]=i[r][0];ft(s)}}function cM(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var MS;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(MS||(MS={}));const uX=125;class lu{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class hX{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class dX extends lu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const i in t){const r=t[i];if(typeof r=="number")this.totals.hasOwnProperty(i)||(this.totals[i]=0),this.totals[i]=this.totals[i]+r*s;else{let o;i in this.totals?o=this.totals[i]:this.totals[i]=0;const a=te(()=>Me(this.totals[i],q(r,s)));this.totals[i]=a,o!=null&&o.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:te(()=>{const i=q(Je(1,this.seen),this.totals[s]);t[s]=i,this.totals[s].dispose(),Xi(t[s])}))}}class pX extends lu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const r in this.history){const o=this.history[r];for(let a=0;a<o.length;++a)if(typeof o[a]!="number"){const l=o[a];e.push(l.data()),t.push(r),s.push(a)}}const i=await Promise.all(e);for(let r=0;r<i.length;++r)this.history[t[r]][s[r]].dispose(),this.history[t[r]][s[r]]=i[r][0]}}class fX extends lu{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||fE,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=uX),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");hx(this.yieldEvery)&&(this.maybeWait=Ej(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const i=[];this.yield!=null&&(await Ao(s),i.push(this.yield(e,t,s))),i.push(this.nextFrameFunc()),await Promise.all(i)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ao(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Ao(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ao(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Ao(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):hx(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Ao(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ao(e),await this.trainEnd(e))}}function uM(n,e){return n==null&&(n={}),n instanceof lu?[n]:Array.isArray(n)&&n[0]instanceof lu?n:kt(n).map(s=>new fX(s,e))}class Gs{constructor(){}static registerCallbackConstructor(e,t){A(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Gs.checkForDuplicate(t),Gs.constructors[e]==null&&(Gs.constructors[e]=[]),Gs.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Gs.constructors)Gs.constructors[+t].forEach(i=>{if(i===e)throw new X("Duplicate callback constructor.")})}static clear(){Gs.constructors={}}static createCallbacks(e){const t=[];for(const s in Gs.constructors){const i=+s;e>=i&&t.push(...Gs.constructors[i])}return t.map(s=>new s)}}Gs.constructors={};function hM(n,e,t,s,i,r,o,a,l){const c=new pX,u=[new dX,...Gs.createCallbacks(e)];n!=null&&u.push(...n),u.push(c);const h=new hX(u);return h.setParams({epochs:t,initialEpoch:s,samples:i,steps:r,batchSize:o,verbose:e,doValidation:a,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function br(n,e={},t=!1){return Mh(n,Hs.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mp(n,e){return te(()=>{n.dtype!=="float32"&&(n=Oe(n,"float32"));const t=Ze(Nh(n),e,!0),s=om(t.shape,vn()),i=Xn(vo(t,s));return Je(n,i)})}function xm(n,e){return te(()=>mn(Nh(tt(e,n)),-1))}function Jb(n,e){return te(()=>mn(es(tt(e,n)),-1))}function Kb(n,e){return te(()=>{const t=tt(n,e),s=Os(es(n),vn(),Number.MAX_VALUE),i=es(Je(t,s));return q(100,mn(i,-1))})}function mX(n,e){return te(()=>{const t=Os(e,vn(),Number.MAX_VALUE),s=tr(Me(1,t)),i=Os(n,vn(),Number.MAX_VALUE),r=tr(Me(1,i));return mn(Nh(tt(s,r)),-1)})}function gX(n,e){return te(()=>{const t=vo(0,tt(1,q(n,e)));return mn(Nh(t),-1)})}function xX(n,e){return te(()=>{const t=vo(0,tt(1,q(n,e)));return mn(t,-1)})}function yX(n,e){return te(()=>{const t=Ze(q(n,e),-1),s=gi(q(tt(1,n),e),-1);return vo(0,Me(1,tt(s,t)))})}function bX(n,e){return te(()=>{const t=Math.log(2),s=tt(e,n),i=tt(Me(s,wh(q(-2,s))),t);return mn(i,-1)})}function cu(n,e,t=!1){return te(()=>{if(t)e=nb(e);else{const s=Ze(e,e.shape.length-1,!0);e=Je(e,s)}return e=Os(e,vn(),1-vn()),ln(Ze(q(Oe(n,"float32"),tr(e)),e.shape.length-1))})}function gp(n,e,t=!1){return te(()=>{const s=Oe(cm(zj(n)),"int32");e=Os(e,vn(),1-vn());const i=e.shape,r=J(FI(s,i[i.length-1]),i);return cu(r,e,t)})}function vX(n,e){if(!Et(n.shape,e.shape))throw new X(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return te(()=>{const t=Sa(e),s=ln(es(e));return Me(tt(t,q(e,n)),RI(er(s)))})}function ym(n,e){return te(()=>{let t;return t=Os(e,vn(),1-vn()),t=tr(Je(t,tt(1,t))),mn(vX(n,t),-1)})}function wX(n,e){return te(()=>{const t=Os(n,vn(),1),s=Os(e,vn(),1);return Ze(q(n,tr(Je(t,s))),-1)})}function SX(n,e){return te(()=>{const t=tr(Me(vn(),e));return mn(tt(e,q(n,t)),-1)})}function dM(n,e){return te(()=>{const t=mp(n,-1),s=mp(e,-1),i=q(t,s);return ln(Ze(i,-1))})}const xp={meanSquaredError:xm,meanAbsoluteError:Jb,meanAbsolutePercentageError:Kb,meanSquaredLogarithmicError:mX,squaredHinge:gX,hinge:xX,categoricalHinge:yX,logcosh:bX,categoricalCrossentropy:cu,sparseCategoricalCrossentropy:gp,binaryCrossentropy:ym,kullbackLeiblerDivergence:wX,poisson:SX,cosineProximity:dM};function Ag(n){if(typeof n=="string"){if(n in xp)return xp[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new X(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pM(n,e){return te(()=>{const t=q(.5,ei(e)),s=Zi(zs(e,t),n.dtype);return mn(Qi(n,s),-1)})}function fM(n,e){return te(()=>Zi(Qi(su(n,-1),su(e,-1)),"float32"))}function _X(n,e){return te(()=>Oe(Ze(_r(Qi(n,1),Qi(e,1))),"float32"))}function CX(n,e){return te(()=>Oe(Ze(_r(Qi(n,0),Qi(e,1))),"float32"))}function TX(n,e){return te(()=>{const t=_X(n,e),s=CX(n,e),i=Me(t,s);return Oe(rs(zs(i,0),Je(t,i),0),"float32")})}function IX(n,e){return ym(n,e)}function EX(n,e){return n.rank===e.rank&&(n=_h(n,[n.rank-1])),e=su(e,-1),e.dtype!==n.dtype&&(e=Oe(e,n.dtype)),Oe(Qi(n,e),"float32")}const MX=xm,kX=xm,NX=Jb,AX=Jb,RX=Kb,$X=Kb,mM=cu,DX=dM,gM=gp,yp={binaryAccuracy:pM,categoricalAccuracy:fM,precision:TX,categoricalCrossentropy:mM,sparseCategoricalCrossentropy:gM,mse:MX,MSE:kX,mae:NX,MAE:AX,mape:RX,MAPE:$X,cosine:DX};function LX(n){if(typeof n=="string"&&n in yp)return yp[n];if(typeof n!="string"&&n!=null)return n;throw new X(`Unknown metric ${n}`)}function Md(n){if(Pi(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(xp))if(xp[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(yp))if(yp[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function FX(n){const e={Adagrad:()=>Lo.adagrad(.01),Adadelta:()=>Lo.adadelta(1,.95,vn()),Adam:()=>Lo.adam(.001,.9,.999,vn()),Adamax:()=>Lo.adamax(.002,.9,.999,vn(),0),RMSProp:()=>Lo.rmsprop(.001,.9,0,vn()),SGD:()=>Lo.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new X(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const kS=1*1024*1024;function NS(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!Px(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>kS&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${kS}.`)}}function Px(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!Px(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!Px(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function PX(n,e,t,s=console.log){const i=zX(n),r=["Layer (type)","Input Shape","Output shape","Param #"];i?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(u=>Math.floor(e*u)));let o;if(!i){r.push("Receives inputs"),o=[];for(const u in n.nodesByDepth)o.push(...n.nodesByDepth[u])}s("_".repeat(e)),bp(r,t,s),s("=".repeat(e));const a=n.layers;for(let u=0;u<a.length;++u)i?BX(a[u],t,s):VX(a[u],t,o,s),s((u===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=OX(n),c=dp(n.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(e))}function OX(n){let e;return n.collectedTrainableWeights!=null?e=dp(n.collectedTrainableWeights):e=dp(n.trainableWeights),e}function zX(n){let e=!0;const t=[],s=[];for(const i in n.nodesByDepth)t.push(n.nodesByDepth[i]);for(const i of t){if(i.length>1||i.length===1&&i[0].inboundLayers.length>1){e=!1;break}s.push(...i)}if(e)for(const i of n.layers){let r=!1;for(const o of i.inboundNodes)if(s.indexOf(o)!==-1)if(r){e=!1;break}else r=!0;if(!e)break}return e}function bp(n,e,t=console.log){let s="";for(let i=0;i<n.length;++i)i>0&&(s=s.slice(0,s.length-1)+" "),s+=n[i],s=s.slice(0,e[i]),s+=" ".repeat(e[i]-s.length);t(s)}function BX(n,e,t){let s,i;try{i=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{i="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,o=n.getClassName(),a=[`${r} (${o})`,i,s,n.countParams().toString()];bp(a,e,t)}function VX(n,e,t,s){let i,r;try{r=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{i=JSON.stringify(n.outputShape)}catch{i="multiple"}const o=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],g=h.tensorIndices[d];o.push(`${p}[${f}][${g}]`)}const a=n.name,l=n.getClassName(),c=o.length===0?"":o[0],u=[`${a} (${l})`,r,i,n.countParams().toString(),c];bp(u,e,s);for(let h=1;h<o.length;++h)bp(["","","","",o[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xM(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Ox(n,e){if(n===null)return null;if(typeof n=="string")return Oo(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let i=0;i<s;++i){const r=n[i];xM(e,i,r)?t.push(r):t.push(Ox(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const i=n[s];if(s==="name"&&typeof i=="string")t[s]=i;else{const r=Oo(s);t[r]=Ox(i,r)}}return t}}function zx(n,e){if(n==null)return null;if(typeof n=="string")return fr(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let i=0;i<s;++i){const r=n[i];xM(e,i,r)?t.push(r):t.push(zx(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const i=n[s],r=fr(s);(s==="name"||s==="className")&&typeof i=="string"?t[r]=i:t[r]=zx(i,s)}return t}}/** @license See the LICENSE file. */const yM="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const UX=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class ci extends pt{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=fm(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],no(this.inputs).length!==this.inputs.length)throw new X(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);no(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const v=x.sourceLayer,b=x.nodeIndex,w=x.tensorIndex;this.outputLayers.push(v),this.outputLayersNodeIndices.push(b),this.outputLayersTensorIndices.push(w)}for(const x of this.inputs){const v=x.sourceLayer,b=x.nodeIndex,w=x.tensorIndex;Pi(b===0,"input layer has >1 nodes"),Pi(w===0,"input layer has >1 tensors"),this.inputLayers.push(v),this.inputLayersNodeIndices.push(b),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const v=this.inputLayers[x];if(!(v instanceof Rh))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${v.getClassName()}.`);this.inputNames.push(v.name),this.feedInputShapes.push(v.batchInputShape),this.feedInputNames.push(v.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const t={},s={},i={},r={},o={},a=[],l=(x,v,b,w,S,_)=>{(w==null||S==null||_==null)&&(w=x.sourceLayer,S=x.nodeIndex,_=x.tensorIndex);const I=w.inboundNodes[S];if(b.indexOf(I)!==-1)throw new Zs(`The tensor ${x.name} at layer "${w.name}" is part of a cycle.`);if(v.indexOf(I)!==-1)return;this.containerNodes.add(ci.nodeKey(w,S)),w.id in o||(o[w.id]=Object.keys(o).length),b.indexOf(I)===-1&&b.push(I);const N=I.inboundLayers.length;for(let k=0;k<N;k++){const M=I.inputTensors[k],T=I.inboundLayers[k],C=I.nodeIndices[k],R=I.tensorIndices[k];l(M,v,b,T,C,R)}for(v.push(I);b.indexOf(I)>=0;)b.splice(b.indexOf(I),1);a.push(I)},c=[],u=[];for(const x of this.outputs)l(x,c,u);const h=a.slice().reverse();for(const x of h){s[x.id]=x,x.id in t||(t[x.id]=0);let v=t[x.id];const b=i[x.outboundLayer.id]==null?0:i[x.outboundLayer.id];v=Math.max(v,b),i[x.outboundLayer.id]=v,r[x.outboundLayer.id]=x.outboundLayer,t[x.id]=v;for(let w=0;w<x.inboundLayers.length;w++){const S=x.inboundLayers[w],_=x.nodeIndices[w],I=S.inboundNodes[_],N=t[I.id]==null?0:t[I.id];t[I.id]=Math.max(v+1,N),s[I.id]=I}}const d={};for(const x in t){const v=t[x];v in d||(d[v]=[]),d[v].push(s[x])}const p={};for(const x in i){const v=i[x];v in p||(p[v]=[]),p[v].push(r[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(Td);this.layers=[];for(const x of f){const v=p[x];v.sort((b,w)=>{const S=o[b.id],_=o[w.id];return S<_?-1:S>_?1:0});for(const b of v)b instanceof ci&&this.internalContainerRefs.push(b),this.layers.push(b)}this.layersByDepth=p,f=Object.keys(d).map(x=>parseInt(x,10)).sort(Td);const g=this.inputs.slice(),y=[];for(const x of f)for(const v of d[x]){const b=v.outboundLayer;if(b!=null){for(const w of v.inputTensors)if(g.indexOf(w)===-1)throw new Zs(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${b.name}". The following previous layers were accessed without issue: ${y}`);for(const w of v.outputTensors)g.push(w);y.push(b.name)}}this.nodesByDepth=d;const m=this.layers.map(x=>x.name);for(const x of m){const v=m.filter(b=>b===x).length;if(v!==1)throw new Zs(`The name "${x}" is used ${v} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new gm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new X("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let i=0;const r=UX(e);r&&this.parseWeights(e);for(const a of this.layers)for(const[l,c]of a.weights.entries()){const u=r?`${c.name.split("/").slice(0,-1).join("/")+"/"}${l}`:c.originalName;if(s[u]!=null)throw new X(`Duplicate weight name: ${u}`);s[u]=c,i++}const o=[];for(const a in e){let l=a;if(s[a]==null){const c=a.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[l]!=null)o.push([s[l],e[a]]);else if(t)throw new X(`Provided weight data has no target variable: ${a}`);delete s[l]}if(t){const a=[];for(const l in s)a.push(l);if(a.length>0)throw new X(`${a.length} of ${i} weights are not set: ${a}`)}Zb(o)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),i=["vars","layer_checkpoint_dependencies"],r=s.map(o=>o.startsWith("_")?o.slice(1):o).filter(o=>!i.includes(o)).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${yM}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=zx(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return te(()=>{e=kt(e);const s=new jr;for(let i=0;i<this.inputs.length;++i)s.add(this.inputs[i],e[i]);return Dc(this.outputs,s,t)})}computeMask(e,t){return te(()=>{e=kt(e);let s;return t==null?s=ua(null,e.length):s=kt(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=hp(e);if(t.length!==this.inputLayers.length)throw new X(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const l=this.inputLayers[a],c=t[a],u=l.name+"_0_0";s[u]=c}const i=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Td);if(i.length>1)for(const a of i){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(u.id)!==-1)continue;const h=[];for(let g=0;g<c.inboundLayers.length;g++){const y=c.inboundLayers[g],m=c.nodeIndices[g],x=c.tensorIndices[g],v=`${y.name}_${m}_${x}`,b=s[v];h.push(b)}const d=u.computeOutputShape(ps(h)),p=hp(d),f=u.inboundNodes.indexOf(c);for(let g=0;g<p.length;g++){const y=`${u.name}_${f}_${g}`;s[y]=p[g]}}}const r=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${l.name}_${c}_${u}`;o.push(h)}for(let a=0;a<o.length;a++){const l=o[a];Pi(l in s),r.push(s[l])}return ps(r)}runInternalGraph(e,t){t==null&&(t=ua(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=e[l],h=t[l];s[c.id]=[u,h]}const i=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Td);for(const l of i){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,p=u.outputTensors,f=new Array;for(const g of d)g.id in s&&f.push(s[g.id]);if(f.length===d.length){let g={},y,m,x,v;if(u.callArgs!=null&&(g=u.callArgs),f.length===1){const[b,w]=f[0];g.mask==null&&(g.mask=w),x=kt(h.call(b,g)),v=kt(h.computeMask(b,w)),y=[b],m=[w]}else y=f.map(b=>b[0]),m=f.map(b=>b[1]),g.mask==null&&(g.mask=m),x=kt(h.call(y,g)),v=kt(h.computeMask(y,m));if(h.activityRegularizer)throw new ut("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let b=0;b<p.length;++b){const w=p[b],S=x[b],_=v[b];s[w.id]=[S,_]}}}}const r=[],o=[],a=[];for(const l of this.outputs){Pi(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=s[l.id];a.push(c.shape),r.push(c),o.push(u)}return[r,o,a]}buildNodeConversionMap(e){const t={};let s;for(const i of this.layers){s=i instanceof ci?1:0;for(let r=0;r<i.inboundNodes.length;r++){const o=ci.nodeKey(i,r);this.containerNodes.has(o)&&(t[o]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new X("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new X(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new X(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return te(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const i=ci.nodeKey(t,s);this.containerNodes.has(i)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const o of this.layers){const a=o.getClassName(),l=o.getConfig(),c=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],p=ci.nodeKey(o,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const g=[];for(let y=0;y<d.inboundLayers.length;y++){const m=d.inboundLayers[y],x=d.nodeIndices[y],v=d.tensorIndices[y],b=ci.nodeKey(m,x);let w=t[b];w==null&&(w=0),g.push([m.name,w,v,f])}c.push(g)}}}const u={};u.name=o.name,u.className=a,u.config=l,u.inboundNodes=c,s.push(u)}e.layers=s;const i=[];for(let o=0;o<this.inputLayers.length;o++){const a=this.inputLayers[o],l=this.inputLayersNodeIndices[o],c=ci.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[o];i.push([a.name,u,h])}e.inputLayers=i;const r=[];for(let o=0;o<this.outputLayers.length;o++){const a=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=ci.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[o];r.push([a.name,u,h])}return e.outputLayers=r,e}static fromConfig(e,t,s={},i=!1){const r={},o={};function a(y,m){y.name in o?o[y.name].push(m):o[y.name]=[m]}function l(y,m){const x=[];let v;for(const b of m){const w=b[0],S=b[1],_=b[2];if(v=b[3]==null?{}:b[3],!(w in r)){a(y,m);return}const I=r[w];if(I.inboundNodes.length<=S){a(y,m);return}const N=I.inboundNodes[S];x.push(N.outputTensors[_])}x.length>0&&y.apply(ps(x),v)}function c(y){const m=y.name,x=br(y,t.customObjects!=null?t.customObjects:{});x.setFastWeightInitDuringBuild(i),r[m]=x,y.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new X(`Corrupted configuration, expected array for nodeData: ${b}`);a(x,b)})}const u=t.name,h=t.layers;for(const y of h)c(y);for(;!Ij(o);)for(const y of h){const m=r[y.name];if(m.name in o){const x=o[m.name];delete o[m.name];for(const v of x)l(m,v)}}const d=[],p=[],f=t.inputLayers;for(const y of f){const m=y[0],x=y[1],v=y[2];Pi(m in r);const w=r[m].inboundNodes[x].outputTensors;d.push(w[v])}const g=t.outputLayers;for(const y of g){const m=y[0],x=y[1],v=y[2];Pi(m in r);const w=r[m].inboundNodes[x].outputTensors;p.push(w[v])}return new e({inputs:d,outputs:p,name:u})}get stateful(){if(this._stateful)throw new X("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){te(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WX(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(i=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const i=[];return e.forEach(r=>{r in n?i.push(n[r]):i.push(null)}),i}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function bM(n,e){return WX(n,e,"classWeight")}async function vM(n,e,t,s){if(t!=null){const i=te(()=>{if(n.shape.length===1)return qo(n);if(n.shape.length===2){if(n.shape[1]>1)return su(n,1);if(n.shape[1]===1)return J(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await i.data());ft(i);const o=[];return r.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);o.push(t[a])}),Ts(o,"float32")}else return null}function GX(n,e){return q(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const HX=32;function wM(n,e){let t,s;const i=e;t=i.xs,s=i.ys,A(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const r=AS("input",n.inputNames,t),o=AS("output",n.outputNames,s),a=r[0].shape[0];A(r.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),A(o.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<r.length;l++)A(r[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${r[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<o.length;l++)A(o[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:r,ys:o}}function AS(n,e,t){if(t instanceof bn)return[t];if(Array.isArray(t))return A(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const i of e){if(t[i]==null)throw new X(`The feature data generated by the dataset lacks the required ${n} key '${i}'.`);s.push(t[i])}return s}}function jX(n){if(n.length===3)throw new ut("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function XX(n,e,t){const s=t.batchesPerEpoch!=null;if(A(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),A(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),A(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),A(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),A(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const i=t.validationData!=null;let r,o;if(i)if(RS(t.validationData))A(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const y=jX(t.validationData);r=y.xs,o=y.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let c;i?c=l.slice().concat(l.map(y=>"val_"+y)):c=l.slice();const u=uM(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=hM(u,h,t.epochs,null,null,qX(e,t),null,i,c);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,g=await e.iterator();for(;f<t.epochs;){const y={};await d.onEpochBegin(f);let m=0,x=0;for(s||(g=await e.iterator());!s||m<t.batchesPerEpoch;){const v=await g.next();if(s&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${m} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){const{xs:b,ys:w}=wM(n,v.value),S={};S.batch=x,S.size=b[0].shape[0],await d.onBatchBegin(x,S);const _=[];if(t.classWeight!=null){const k=bM(t.classWeight,n.outputNames);for(let M=0;M<k.length;++M)_.push(await vM(w[M],null,k[M]))}const I=b.concat(w).concat(_),N=a(I);ft(I);for(let k=0;k<l.length;++k){const M=l[k],T=N[k];S[M]=T,Xi(T)}await d.onBatchEnd(x,S),cM(S),x++,m++}if(s?m>=t.batchesPerEpoch:v.done){if(i){let b;RS(t.validationData)?b=kt(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):b=kt(n.evaluate(r,o,{batchSize:t.validationBatchSize==null?HX:t.validationBatchSize,verbose:0}));for(let w=0;w<n.metricsNames.length;++w)y[`val_${n.metricsNames[w]}`]=b[w]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,y),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function qX(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function RS(n){return typeof n.iterator=="function"}function ZX(n){return typeof n.next=="function"}async function YX(n,e,t){t=t||{};const s=t.batches!=null,i=n.testFunction;let r=[];if(t.verbose>0)throw new ut("Verbose mode is not implemented yet.");A(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const o=ZX(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<t.batches;){const c=await o.next();if(r=te(()=>{if(c.value){const{xs:u,ys:h}=wM(n,c.value),d=u.concat(h),p=te(()=>i(d));if(ft(d),l===0)for(let g=0;g<p.length;++g)r.push(It(0));const f=d[0].shape[0];for(let g=0;g<p.length;++g){const y=p[g],m=r[g];r[g]=te(()=>Me(r[g],q(f,y))),l>0&&ft(m)}ft(p),a+=f,++l}return r}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<r.length;++c){const u=r[c];r[c]=Je(r[c],a),ft(u)}return ps(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rg(n){A(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Mc(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>Jo(s,e,t-e)):Jo(n,e,t-e)}function Bx(n,e){return te(()=>n==null?null:Array.isArray(n)?n.map(t=>Bx(t,e)):ZE(n,e.dtype==="int32"?e:Oe(e,"int32")))}function $g(n,e){const t=[];let s=0,i=null;for(;s<n;)i=s+e,i>=n&&(i=n),t.push([s,i]),s=i;return t}function SM(n){const e=[];n instanceof bn&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(kh(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function li(n,e){if(n==null)return;const t=[];if(e instanceof bn)t.push(e.id);else if(Array.isArray(e))e.forEach(i=>t.push(i.id));else if(e!=null)for(const i in e){const r=e[i];t.push(r.id)}const s=[];if(n instanceof bn)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(i=>{t.indexOf(i.id)===-1&&s.push(i)});else if(n!=null)for(const i in n){const r=n[i];t.indexOf(r.id)===-1&&s.push(r)}s.forEach(i=>{i.isDisposed||i.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function JX(n){return n instanceof bn}function Vx(n){return Array.isArray(n)}function $S(n){return!JX(n)&&!Vx(n)}function DS(n,e,t,s=!0,i=""){if(e==null||e.length===0){if(n!=null){let o=!1;if(Vx(n)&&n.length>0)o=!0;else if($S(n)){for(const a in n)if(n.hasOwnProperty(a)){o=!0;break}}else o=!0;if(o)throw new X(`Error when checking model ${i} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(o=>null);let r;if($S(n)){n=n,r=[];for(const o of e){if(n[o]==null)throw new X(`No data provided for "${o}". Need data for each key in: ${e}`);r.push(n[o])}}else if(Vx(n)){if(n=n,n.length!==e.length)throw new X(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);r=n}else{if(n=n,e.length>1)throw new X(`The model ${i} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);r=[n]}if(r=SM(r),t!=null)for(let o=0;o<e.length;++o){if(t[o]==null)continue;const a=r[o];if(a.shape.length!==t[o].length)throw new X(`Error when checking ${i}: expected ${e[o]} to have ${t[o].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<t[o].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=t[o][l];if(u!=null&&u>=0&&c!==u)throw new X(`${i} expected a batch of elements where each example has shape [${t[o].slice(1,t[o].length)}] (i.e.,tensor shape [*,${t[o].slice(1,t[o].length)}]) but the ${i} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return r}function KX(n,e,t){const s=no(n.map(r=>r.shape[0]));s.sort();const i=no(e.map(r=>r.shape[0]));if(i.sort(),s.length>1)throw new X(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(r=>r.shape))}`);if(i.length>1)throw new X(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(r=>r.shape))}`);if(s.length>0&&i.length>0&&!Et(s,i))throw new X(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${i[0]} target sample(s).`)}function QX(n,e,t){const s=[xm,ym,cu];for(let i=0;i<n.length;++i){const r=n[i],o=e[i],a=t[i];if(o!=null){if(o===cu&&r.shape[r.shape.length-1]===1)throw new X(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){const l=r.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new X(`A target Tensor with shape ${r.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function LS(n,e,t,s=!0,i=""){let r;if(Array.isArray(n)){if(n.length!==e.length)throw new X(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);r=n}else{if(e.length>1)throw new X(`The model expects ${e.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);r=[n]}if(t!=null)for(let o=0;o<e.length;++o){if(t[o]==null)continue;const a=r[o];if(a.shape.length!==t[o].length)throw new X(`Error when checking ${i}: expected ${e[o]} to have ${t[o].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<t[o].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=t[o][l];if(u!=null&&u!==c)throw new X(`Error when checking ${i}: expected ${e[o]} to have shape ${JSON.stringify(t[o])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function e8(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const i of e){let r=t.hasOwnProperty(i)?t[i]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const t8="layers-model";class gl extends ci{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new X("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");PX(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=FX(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof So))throw new X("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const o in e.loss)if(this.outputNames.indexOf(o)===-1)throw new X(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)e.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),t.push(Ag(e.loss[o]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new X(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>Ag(a))}else{const o=Ag(e.loss);this.outputs.forEach(a=>{t.push(o)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const a=this.internalOutputShapes[o],l=this.outputNames[o];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[o])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Yo("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([a,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const i=e8(e.metrics,this.outputNames),r=(o,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[o]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,o])};Yo("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=i[o];(c=>{const u="";let h,d,p;for(const f of c){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const y=this.internalOutputShapes[o];y[y.length-1]===1||this.lossFunctions[o]===ym?["accuracy","acc"].indexOf(f)!==-1?d=pM:["crossentropy","ce"].indexOf(f)!==-1&&(d=IX):this.lossFunctions[o]===gp?["accuracy","acc"].indexOf(f)!==-1?d=EX:["crossentropy","ce"].indexOf(f)!==-1&&(d=gM):["accuracy","acc"].indexOf(f)!==-1?d=fM:["crossentropy","ce"].indexOf(f)!==-1&&(d=mM);let m;["accuracy","acc"].indexOf(f)!==-1?m="acc":["crossentropy","ce"].indexOf(f)!==-1&&(m="ce"),p=d,h=u+m}else p=LX(f),h=u+Md(f);let g;Yo(h,()=>{g=p}),r(o,h,g)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const i=s.batchSize==null?32:s.batchSize;Rg(i);const o=this.standardizeUserDataXY(e,t,!0,i);try{const a=o[0].concat(o[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,i,s.verbose,s.steps);return ps(c)}finally{li(o[0],e),li(o[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),YX(this,e,t)}checkNumSamples(e,t,s,i="steps"){let r;if(s!=null){if(r=null,t!=null)throw new X(`If ${i} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new X(`Either the input data should have a defined shape, or ${i} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new X("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),i=s?t:[t],r=this.retrieveSymbolicTensors(i),o=new jr;if(e instanceof bn&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new X(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)o.add(this.inputs[l],e[l])}else for(const l of this.inputs){const c=e[l.name];if(c==null)throw new X(`No value is provided for the model's input ${l.name}`);o.add(l,c)}const a=Dc(r,o);return s?a:a[0]}retrieveSymbolicTensors(e){const t=ua(null,e.length);let s=e.length;for(const i of this.layers){const r=Array.isArray(i.output)?i.output:[i.output],o=r.map(a=>a.name);for(let a=0;a<e.length;++a){const l=o.indexOf(e[a]);if(l!==-1&&(t[a]=r[l],s--),s===0)break}if(s===0)break}if(s>0){const i=[];throw t.forEach((r,o)=>{r==null&&i.push(e[o])}),new X(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(i)}`)}return t}predictLoop(e,t=32,s=!1){return te(()=>{const i=this.checkNumSamples(e);if(s)throw new ut("Verbose predictLoop() is not implemented yet.");const r=$g(i,t),o=this.outputs.map(a=>[]);for(let a=0;a<r.length;++a)te(()=>{const c=r[a][0],u=r[a][1],h=Mc(e,c,u),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new jr(d);return Dc(this.outputs,p)}).forEach((c,u)=>o[u].push(c));return ps(o.map(a=>ms(a,0)))})}predict(e,t={}){const s=SM(e);LS(s,this.inputNames,this.feedInputShapes,!1);try{const i=t.batchSize==null?32:t.batchSize;return Rg(i),this.predictLoop(s,i)}finally{li(s,e)}}predictOnBatch(e){LS(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,i){if(this.optimizer_==null)throw new Zs("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let o=0;o<this.feedOutputShapes.length;++o){const a=this.feedOutputShapes[o];this.feedLossFns[o]===gp?r.push(a.slice(0,a.length-1).concat([1])):r.push(a)}if(e=DS(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=DS(t,this.feedOutputNames,r,!1,"target"),KX(e,t),QX(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&i!=null&&i>0&&e[0].shape[0]%i!==0)throw new X(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${i}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,i,r=!0,o){const[a,l]=this.standardizeUserDataXY(e,t,r,o);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(i!=null){const u=bM(i,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await vM(l[h],null,u[h]))}return[a,l,c]}testLoop(e,t,s,i=0,r){return te(()=>{const o=this.checkNumSamples(t,s,r,"steps"),a=[];if(i>0)throw new ut("Verbose mode is not implemented yet.");if(r!=null)throw new ut("steps mode in testLoop() is not implemented yet");{const l=$g(o,s),c=Ts(vi(0,o));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],p=Jo(c,h,d-h),f=Bx(t,p),g=e(f);if(u===0)for(let y=0;y<g.length;++y)a.push(It(0));for(let y=0;y<g.length;++y){const m=g[y];a[y]=Me(a[y],q(d-h,m))}}for(let u=0;u<a.length;++u)a[u]=Je(a[u],o)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const i=e[s];let r=i;if(bS(e,i)>1){const o=bS(e.slice(0,s),i);r+=`_${o}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],a=()=>{const h=[];for(let g=0;g<this.inputs.length;++g)h.push({key:this.inputs[g],value:s[g]});const d=new jr(h),p=Dc(this.outputs,d,{training:!0});let f;for(let g=0;g<this.lossFunctions.length;++g){const y=this.lossFunctions[g];let m=y(i[g],p[g]);r[g]!=null&&(m=GX(m,r[g]));const x=mn(m);t.push(x),g===0?f=m:f=Me(f,m)}for(let g=0;g<this.metricsTensors.length;++g){let y;if(this.outputs.length>1&&g<this.outputs.length)y=t[g];else{const m=this.metricsTensors[g][0],x=this.metricsTensors[g][1];y=mn(m(i[x],p[x]))}Xi(y),o.push(y)}return f=mn(f),this.calculateLosses().forEach(g=>{f=Me(f,g)}),f},l=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(a,!0,l)].concat(o)}}makeTestFunction(){this.testFunction=e=>te(()=>{const t=[];let s;const i=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let c=0;c<this.inputs.length;++c)o.push({key:this.inputs[c],value:i[c]});const a=new jr(o),l=Dc(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=mn(u(r[c],l[c]));c===0?s=h:s=Me(s,h),t.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=mn(u(r[h],l[h]));t.push(d)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let i,r,o,a,l,c,u,h,d;try{const p=s.batchSize==null?32:s.batchSize;Rg(p);const g=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,p);i=g[0],r=g[1],d=g[2];let y=!1,m;if(s.validationData!=null&&s.validationData.length>0){if(y=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new ut("validationData including sample weights is not supported yet."):new X(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const k=await this.standardizeUserData(l,c,null,null,!0,p);u=k[0],h=k[1],m=u.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){y=!0;const N=Math.floor(i[0].shape[0]*(1-s.validationSplit)),k=i[0].shape[0];u=Mc(i,N,k),o=i,i=Mc(i,0,N),h=Mc(r,N,k),a=r,r=Mc(r,0,N),m=u.concat(h)}else s.validationSteps!=null&&(y=!0);const x=i.concat(r).concat(d);this.checkTrainableWeightsConsistency();const v=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let w,S;y?(this.makeTestFunction(),w=this.testFunction,S=b.slice().concat(b.map(N=>"val_"+N))):(w=null,m=[],S=b.slice());const _=uM(s.callbacks,s.yieldEvery);return await this.fitLoop(v,x,b,p,s.epochs,s.verbose,_,w,m,s.shuffle,S,s.initialEpoch,null,null)}finally{this.isTraining=!1,li(i,e),li(r,t),li(o,e),li(a,t),li(u,l),li(h,c),d!=null&&ft(d)}}async fitLoop(e,t,s,i,r,o,a,l,c,u,h,d,p,f){i==null&&(i=32),r==null&&(r=1),u==null&&(u=!0),d==null&&(d=0);let g=!1;if(l!=null&&c!=null&&(g=!0),f!=null&&(g=!0,p==null))throw new X("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=this.checkNumSamples(t,i,p,"steps_per_epoch");let m;y!=null&&(m=vi(0,y)),o==null&&(o=1);const{callbackList:x,history:v}=hM(a,o,r,d,y,p,i,g,h);x.setModel(this),this.history=v,await x.onTrainBegin(),this.stopTraining_=!1;for(let b=d;b<r;++b){await x.onEpochBegin(b);const w={};if(p!=null)throw new ut("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new ut("batch shuffling is not implemneted yet");u&&OB(m);const S=Ts(m),_=$g(y,i);for(let I=0;I<_.length;++I){const N={};if(await x.onBatchBegin(I,N),te(()=>{const k=_[I][0],M=_[I][1],T=Jo(S,k,M-k);N.batch=I,N.size=M-k;const C=Bx(t,T),R=e(C);for(let L=0;L<s.length;++L){const $=s[L],O=R[L];N[$]=O,Xi(O)}if(I===_.length-1&&g){const L=this.testLoop(l,c,i);for(let $=0;$<s.length;++$){const O=s[$],G=L[$];Xi(G),w["val_"+O]=G}}}),await x.onBatchEnd(I,N),cM(N),this.stopTraining_)break}S.dispose()}if(await x.onEpochEnd(b,w),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return XX(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),i=s[0],r=s[1],a=this.makeTrainFunction()(i.concat(r)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return ft(a),li(s[0],e),li(s[1],t),ps(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,i=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let o=0;o<i.length;++o)s&&!i[o].trainable||t.push({name:i[o].originalName,tensor:r[o]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=tS().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-tS().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=fr(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>fr(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const i of t)if(typeof s[i]=="string")e[i]=fr(s[i]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[fr(Md(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>fr(Md(e)));{const e={};for(const t in this.metrics)e[t]=fr(Md(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ox(e.optimizer_config),s=br(t);let i;if(typeof e.loss=="string")i=Oo(e.loss);else if(Array.isArray(e.loss))i=e.loss.map(o=>Oo(o));else if(e.loss!=null){i={};for(const o in e.loss)i[o]=Oo(e.loss[o])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(o=>Oo(o));else if(e.metrics!=null){r={};for(const o in e.metrics)r[o]=Oo(e.metrics[o])}this.compile({loss:i,metrics:r,optimizer:s})}async save(e,t){if(typeof e=="string"){const c=LV(e);if(c.length===0)throw new X(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new X(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new X("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await sS(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:t8,generatedBy:`TensorFlow.js tfjs-layers v${yM}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await sS(await this.optimizer.getWeights(),c);s.specs.push(...h),s.data=DV([s.data,u])}return this.userDefinedMetadata!=null&&(NS(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){NS(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}gl.className="Model";ve(gl);class _M extends gl{}_M.className="Functional";ve(_M);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rl extends gl{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:fm("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new X(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Rl||e instanceof gl;let s;if(t){if(s=e,s.outputs.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new X("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new X("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const i=sX({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(i)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new X(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=iM(this.outputs[0])}this.inboundNodes=[],new gm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ua(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(i=>i.shape),outputShapes:this.outputs[0].shape})}else{const i=e.apply(this.outputs[0]);if(Array.isArray(i))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[i],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(_t(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new gl({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new Zs("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new Zs("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new Zs("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new Zs("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},i=!1){let r,o={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new X("Legacy serialization format not supported yet.");r=t}else A(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,o=t;const a=new e(o);if(!(a instanceof Rl))throw new ut(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of r){const u=br(l,void 0,i);i&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(e){if(this.model==null)throw new X("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new X("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Rl.className="Sequential";ve(Rl);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function n8(n){return new Rl(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Zn=class extends rc{getConfig(){return{}}};class CM extends Zn{apply(e,t=1){return Vj(e,t)}}CM.className="elu";ve(CM);class TM extends Zn{apply(e){return UI(e)}}TM.className="selu";ve(TM);class IM extends Zn{apply(e){return Sa(e)}}IM.className="relu";ve(IM);class EM extends Zn{apply(e){return te(()=>ou(6,Sa(e)))}}EM.className="relu6";ve(EM);class MM extends Zn{apply(e){return e}}MM.className="linear";ve(MM);class kM extends Zn{apply(e){return nc(e)}}kM.className="sigmoid";ve(kM);class NM extends Zn{apply(e){return Wj(e)}}NM.className="hardSigmoid";ve(NM);class AM extends Zn{apply(e){return wh(e)}}AM.className="softplus";ve(AM);class RM extends Zn{apply(e){return Uj(e)}}RM.className="softsign";ve(RM);class $M extends Zn{apply(e){return im(e)}}$M.className="tanh";ve($M);let Qb=class extends Zn{apply(e,t=-1){return nb(e,t)}};Qb.className="softmax";ve(Qb);class DM extends Zn{apply(e,t=-1){return $I(e,t)}}DM.className="logSoftmax";ve(DM);class LM extends Zn{apply(e){return te(()=>te(()=>{const t=Math.sqrt(2),s=q(.5,Me(1,MI(Je(e,t))));return q(e,s)}))}}LM.className="gelu";ve(LM);class FM extends Zn{apply(e){return te(()=>q(.5,q(e,Me(1,im(q(Xn(Je(2,Math.PI)),Me(e,q(.044715,aa(e,3)))))))))}}FM.className="gelu_new";ve(FM);class PM extends Zn{apply(e){return te(()=>q(e,im(wh(e))))}}PM.className="mish";ve(PM);class OM extends Zn{apply(e,t=1){return te(()=>q(nc(q(e,t)),e))}}OM.className="swish";ve(OM);function co(n){return n.getClassName()}function Dg(n,e={}){return Mh(n,Hs.getMap().classNameMap,e,"activation")}function uo(n){if(n==null){const e={};return e.className="linear",e.config={},Dg(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Dg(e)}else return n instanceof Zn?n:Dg(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function s8(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class zM extends rc{}class BM extends zM{constructor(e){super(),s8(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return te(()=>{let t=An([1]);return this.hasL1&&(t=Me(t,Ze(q(this.l1,es(e))))),this.hasL2&&(t=Me(t,Ze(q(this.l2,Nh(e))))),J(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}BM.className="L1L2";ve(BM);const FS={l1l2:"L1L2"};function Ft(n){return zb(n)}function PS(n,e={}){return Mh(n,Hs.getMap().classNameMap,e,"regularizer")}function Yt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in FS?FS[n]:n,config:{}};return PS(t)}else return n instanceof zM?n:PS(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class VM extends pt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=st(e);let s=Sa(e);return this.maxValue!=null&&(s=Os(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}VM.className="ReLU";ve(VM);class UM extends pt{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=st(e);return By(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}UM.className="LeakyReLU";ve(UM);class WM extends pt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Zt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Yt(e.alphaRegularizer),this.alphaConstraint=_n(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new X(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=_t(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const i of this.sharedAxes)t[i-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let i=1;i<e.length;++i)s[i]=e[i];this.inputSpec=[new wn({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=st(e),jy(e,this.alpha.read())}getConfig(){const e={alphaInitializer:en(this.alphaInitializer),alphaRegularizer:Ft(this.alphaRegularizer),alphaConstraint:Sn(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}WM.className="PReLU";ve(WM);let GM=class extends pt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new ut(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=st(e);return am(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};GM.className="ELU";ve(GM);class HM extends pt{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=st(e);return q(s,Oe(zs(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}HM.className="ThresholdedReLU";ve(HM);class jM extends pt{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Qb().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return te(()=>{let s=st(e);const i=t.mask;if(i!=null){const r=q(tt(wo(s.shape),Oe(i,s.dtype)),It(-1e9));s=Me(s,r)}return this.axis instanceof Array?this.axis.length>1?er(tt(s,DI(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}jM.className="Softmax";ve(jM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xl(n,e,t){if(typeof n=="number")return ua(n,e);if(n.length!==e)throw new X(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const i=n[s];if(!Pj(i))throw new X(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${i}`)}return n}function xi(n,e,t,s,i=1){if(n==null)return n;const r=e+(e-1)*(i-1);let o;return t==="same"?o=n:o=n-r+1,Math.floor((o+s-1)/s)}function Oi(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+lo([t-e,0]);else if(s==="same")n=n*e;else throw new X(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ev(n,e){return te(()=>(hn(e),e==="channelsFirst"?bt(n,[0,2,3,1]):n))}function XM(n,e){return te(()=>(hn(e),e==="channelsFirst"?bt(n,[0,2,3,4,1]):n))}function i8(n,e,t,s=1,i="valid",r,o=1){return te(()=>{if(r==null&&(r=wi()),hn(r),n.shape.length!==3)throw new X(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new X(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new X(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(r==="channelsFirst"&&(n=bt(n,[0,2,1])),i==="causal")throw new ut("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=_I(n,e,s,i==="same"?"same":"valid","NWC",o);return t!=null&&(a=Ii(a,t)),a})}function OS(n,e,t,s=[1,1],i="valid",r,o,a=null){return te(()=>{if(r==null&&(r=wi()),hn(r),n.rank!==3&&n.rank!==4)throw new X(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new X(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=ev(n,r);if(i==="causal")throw new ut("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=dH({x:l,filter:e,strides:s,pad:i==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:t,activation:a}),r==="channelsFirst"&&(l=bt(l,[0,3,1,2])),l})}function r8(n,e,t,s=[1,1,1],i="valid",r,o){return te(()=>{if(r==null&&(r=wi()),hn(r),n.rank!==4&&n.rank!==5)throw new X(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new X(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=XM(n,r);if(i==="causal")throw new ut("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=hW(a,e,s,i==="same"?"same":"valid","NDHWC",o),t!=null&&(a=Ii(a,t)),r==="channelsFirst"&&(a=bt(a,[0,4,1,2,3])),a})}class bm extends pt{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",bm.verifyArgs(t),this.rank=e,Rn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ut(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=xl(t.kernelSize,e,"kernelSize"),this.strides=xl(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Bs(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,hn(this.dataFormat),this.activation=uo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Zt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=_n(t.biasConstraint),this.biasRegularizer=Yt(t.biasRegularizer),this.activityRegularizer=Yt(t.activityRegularizer),this.dilationRate=xl(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new X(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new X(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new X(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Pi("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Bb(e.kernelSize,"number",1,3))throw new X(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:co(this.activation),useBias:this.useBias,biasInitializer:en(this.biasInitializer),biasRegularizer:Ft(this.biasRegularizer),activityRegularizer:Ft(this.activityRegularizer),biasConstraint:Sn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class oc extends bm{constructor(e,t){super(e,t),this.kernel=null,oc.verifyArgs(t),this.filters=t.filters,Rn(this.filters,"filters"),this.kernelInitializer=Zt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=_n(t.kernelConstraint),this.kernelRegularizer=Yt(t.kernelRegularizer)}build(e){e=_t(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],i=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return te(()=>{e=st(e);let s;const i=this.bias==null?null:this.bias.read(),r=WE(this.activation.getClassName());if(r!=null&&this.rank===2)s=OS(e,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=i8(e,this.kernel.read(),i,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=OS(e,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=r8(e,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ut("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=_t(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<s.length;++r){const o=xi(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(o)}let i=[e[0]];return this.dataFormat==="channelsLast"?(i=i.concat(t),i.push(this.filters)):(i.push(this.filters),i=i.concat(t)),i}getConfig(){const e={filters:this.filters,kernelInitializer:en(this.kernelInitializer),kernelRegularizer:Ft(this.kernelRegularizer),kernelConstraint:Sn(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new X(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Dh extends oc{constructor(e){super(2,e),Dh.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Bb(e.kernelSize,"number",1,2))throw new X(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Dh.className="Conv2D";ve(Dh);class Lh extends oc{constructor(e){super(3,e),Lh.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new X(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Lh.className="Conv3D";ve(Lh);class qM extends Dh{constructor(e){if(super(e),this.inputSpec=[new wn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=_t(e),e.length!==4)throw new X("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],i=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new wn({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return te(()=>{let s=st(e);if(s.shape.length!==4)throw new X(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const i=s.shape,r=i[0];let o,a;this.dataFormat==="channelsFirst"?(o=2,a=3):(o=1,a=2);const l=i[o],c=i[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=Oi(l,d,u,this.padding),g=Oi(c,p,h,this.padding),y=[r,f,g,this.filters];this.dataFormat!=="channelsLast"&&(s=bt(s,[0,2,3,1]));let m=CI(s,this.kernel.read(),y,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(m=bt(m,[0,3,1,2])),this.bias!=null&&(m=Ii(m,this.bias.read(),this.dataFormat)),this.activation!=null&&(m=this.activation.apply(m)),m})}computeOutputShape(e){e=_t(e);const t=e.slice();let s,i,r;this.dataFormat==="channelsFirst"?(s=1,i=2,r=3):(s=3,i=1,r=2);const o=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return t[s]=this.filters,t[i]=Oi(t[i],l,o,this.padding),t[r]=Oi(t[r],c,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}qM.className="Conv2DTranspose";ve(qM);class ZM extends Lh{constructor(e){if(super(e),this.inputSpec=[new wn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=_t(e),e.length!==5)throw new X("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],i=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new wn({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return te(()=>{let s=st(e);if(s.shape.length!==5)throw new X(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const i=s.shape,r=i[0];let o,a,l;this.dataFormat==="channelsFirst"?(l=2,o=3,a=4):(l=1,o=2,a=3);const c=i[l],u=i[o],h=i[a],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],g=this.strides[0],y=this.strides[1],m=this.strides[2],x=Oi(c,g,d,this.padding),v=Oi(u,y,p,this.padding),b=Oi(h,m,f,this.padding),w=[r,x,v,b,this.filters];this.dataFormat!=="channelsLast"&&(s=bt(s,[0,2,3,4,1]));let S=fW(s,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=bt(S,[0,4,1,2,3])),this.bias!==null&&(S=Ii(S,this.bias.read(),this.dataFormat)),this.activation!==null&&(S=this.activation.apply(S)),S})}computeOutputShape(e){e=_t(e);const t=e.slice();let s,i,r,o;this.dataFormat==="channelsFirst"?(s=1,i=2,r=3,o=4):(s=4,i=1,r=2,o=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return t[s]=this.filters,t[i]=Oi(t[i],u,a,this.padding),t[r]=Oi(t[r],h,l,this.padding),t[o]=Oi(t[o],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ZM.className="Conv3DTranspose";ve(ZM);class YM extends oc{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new X("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new X("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new X(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Zt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Yt(t.depthwiseRegularizer),this.depthwiseConstraint=_n(t.depthwiseConstraint),this.pointwiseInitializer=Zt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Yt(t.pointwiseRegularizer),this.pointwiseConstraint=_n(t.pointwiseConstraint)}build(e){if(e=_t(e),e.length<this.rank+2)throw new X(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new X(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],i=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let a=0;a<this.rank;++a)r.push(1);r.push(s*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",i,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new wn({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return te(()=>{e=st(e);let s;if(this.rank===1)throw new ut("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=bt(e,[0,2,3,1])),s=WI(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Ii(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=bt(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=en(this.depthwiseInitializer),e.pointwiseInitializer=en(this.pointwiseInitializer),e.depthwiseRegularizer=Ft(this.depthwiseRegularizer),e.pointwiseRegularizer=Ft(this.pointwiseRegularizer),e.depthwiseConstraint=Sn(this.depthwiseConstraint),e.pointwiseConstraint=Sn(this.pointwiseConstraint),e}}YM.className="SeparableConv";class JM extends YM{constructor(e){super(2,e)}}JM.className="SeparableConv2D";ve(JM);class vm extends oc{constructor(e){super(1,e),vm.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Bb(e.kernelSize,"number",1,1))throw new X(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}vm.className="Conv1D";ve(vm);class KM extends pt{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return te(()=>{if(e=st(e),this.dataFormat==="channelsLast"){const s=Ed(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ed(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Ed(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ed(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}KM.className="Cropping2D";ve(KM);class QM extends pt{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,hn(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,Dj(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return te(()=>{let s=st(e);const i=s.shape;if(this.dataFormat==="channelsFirst"){s=bt(s,[0,2,3,1]);const r=this.size[0]*i[2],o=this.size[1]*i[3],a=this.interpolation==="nearest"?xr.resizeNearestNeighbor(s,[r,o]):xr.resizeBilinear(s,[r,o]);return bt(a,[0,3,1,2])}else{const r=this.size[0]*i[1],o=this.size[1]*i[2];return this.interpolation==="nearest"?xr.resizeNearestNeighbor(s,[r,o]):xr.resizeBilinear(s,[r,o])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}QM.className="UpSampling2D";ve(QM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function o8(n,e,t=[1,1],s="valid",i,r){return te(()=>{i==null&&(i=wi()),hn(i);let o=ev(n,i);if(n.rank!==4)throw new X(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new X(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return o=Fy(o,e,t,s==="same"?"same":"valid","NHWC",r),i==="channelsFirst"&&(o=bt(o,[0,3,1,2])),o})}class e2 extends bm{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Zt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=_n(e.depthwiseConstraint),this.depthwiseRegularizer=Yt(e.depthwiseRegularizer)}build(e){if(e=_t(e),e.length<4)throw new X(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new X(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],i=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",i,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return te(()=>{e=st(e);let s=o8(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Ii(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=_t(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],i=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=xi(t,this.kernelSize[0],this.padding,this.strides[0]),o=xi(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],i,r,o]:[e[0],r,o,i]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=en(this.depthwiseInitializer),e.depthwiseRegularizer=Ft(this.depthwiseRegularizer),e.depthwiseConstraint=Sn(this.depthwiseRegularizer),e}}e2.className="DepthwiseConv2D";ve(e2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function t2(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new X("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function i(r){return r==null||Array.isArray(r)?r:[r]}return e=i(e),t=i(t),{inputs:n,initialState:e,constants:t}}function n2(n,e,t,s=!1,i,r,o=!1,a=!1){return te(()=>{const l=e.shape.length;if(l<3)throw new X(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(vi(2,l));e=bt(e,c),o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),i!=null&&(i=Oe(Oe(i,"bool"),"float32"),i.rank===l-1&&(i=ds(i,-1)),i=bt(i,c)),s&&(e=la(e,0),i!=null&&(i=la(i,0)));const u=[];let h,d=t;const p=e.shape[0],f=ca(e);let g;i!=null&&(g=ca(i));for(let m=0;m<p;++m){const x=f[m],v=te(()=>n(x,d));if(i==null)h=v[0],d=v[1];else{const b=te(()=>{const w=g[m],S=tt(ei(w),w),_=Me(q(v[0],w),q(d[0],S)),I=d.map((N,k)=>Me(q(v[1][k],w),q(N,S)));return{output:_,newStates:I}});h=b.output,d=b.newStates}a&&u.push(h)}let y;return a&&(y=Cr(u,1)),[h,y,d]})}class _o extends pt{constructor(e){super(e);let t;if(e.cell==null)throw new X("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new sv({cells:e.cell}):t=e.cell,t.stateSize==null)throw new X("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new wn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return vi(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Lx(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let i;if(this.returnSequences?i=[e[0],e[1],s]:i=[e[0],s],this.returnState){const r=[];for(const o of t)r.push([e[0],o]);return[i].concat(r)}else return i}computeMask(e,t){return te(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const i=this.states.map(r=>null);return[s].concat(i)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new ut("Constants support is not implemented in RNN yet.");Lx(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new wn({shape:[t,null,...s]});const i=[e[0]].concat(e.slice(2));this.cell.build(i);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Et(this.stateSpec.map(o=>o.shape[o.shape.length-1]),r))throw new X(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(o=>new wn({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){te(()=>{if(!this.stateful)throw new Fi("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>An([s,i])):this.states_=[An([s,this.cell.stateSize])];else if(e==null)ft(this.states_),this.keptStates!=null&&(ft(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>An([s,i])):this.states_[0]=An([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):ft(this.states_);for(let i=0;i<this.states_.length;++i){const r=e[i],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[i]:this.cell.stateSize,a=[s,o];if(!Et(r.shape,a))throw new X(`State ${i} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[i]=r}}this.states_=this.states_.map(i=>Xi(i.clone()))})}apply(e,t){let s=t==null?null:t.initialState,i=t==null?null:t.constants;t==null&&(t={});const r=t2(e,s,i,this.numConstants);e=r.inputs,s=r.initialState,i=r.constants;let o=[],a=[];if(s!=null){t.initialState=s,o=o.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new wn({shape:c.shape}));a=a.concat(this.stateSpec)}if(i!=null&&(t.constants=i,o=o.concat(i),this.numConstants=i.length),o[0]instanceof nr){const c=[e].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return te(()=>{const s=t==null?null:t.mask,i=t==null?null:t.training;let r=t==null?null:t.initialState;e=st(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new X(`RNN Layer has ${o} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:i},c=n2((f,g)=>{const y=this.cell.call([f].concat(g),a);return[y[0],y.slice(1)]},e,r,this.goBackwards,s,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,i);const p=this.returnSequences?h:u;return this.returnState?[p].concat(d):p})}getInitialState(e){return te(()=>{let t=An(e.shape);return t=Ze(t,[1,2]),t=kh(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?$x(t,[1,s]):t):this.cell.stateSize>1?[$x(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===_o.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const i=t.cell,r=br(i,s);return new e(Object.assign(t,{cell:r}))}}_o.className="RNN";ve(_o);class wm extends pt{}class tv extends wm{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Rn(this.units,"units"),this.activation=uo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Zt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Yt(e.kernelRegularizer),this.recurrentRegularizer=Yt(e.recurrentRegularizer),this.biasRegularizer=Yt(e.biasRegularizer),this.kernelConstraint=_n(e.kernelConstraint),this.recurrentConstraint=_n(e.recurrentConstraint),this.biasConstraint=_n(e.biasConstraint),this.dropout=Al([1,lo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Al([1,lo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=_t(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return te(()=>{if(e=e,e.length!==2)throw new X(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const i=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ho({ones:()=>ei(e),rate:this.dropout,training:i,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ho({ones:()=>ei(s),rate:this.recurrentDropout,training:i,dropoutFunc:this.dropoutFunc}));let r;const o=this.dropoutMask,a=this.recurrentDropoutMask;o!=null?r=Yi(q(e,o),this.kernel.read()):r=Yi(e,this.kernel.read()),this.bias!=null&&(r=Ii(r,this.bias.read())),a!=null&&(s=q(s,a));let l=Me(r,Yi(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:co(this.activation),useBias:this.useBias,kernelInitializer:en(this.kernelInitializer),recurrentInitializer:en(this.recurrentInitializer),biasInitializer:en(this.biasInitializer),kernelRegularizer:Ft(this.kernelRegularizer),recurrentRegularizer:Ft(this.recurrentRegularizer),biasRegularizer:Ft(this.biasRegularizer),activityRegularizer:Ft(this.activityRegularizer),kernelConstraint:Sn(this.kernelConstraint),recurrentConstraint:Sn(this.recurrentConstraint),biasConstraint:Sn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}tv.className="SimpleRNNCell";ve(tv);class s2 extends _o{constructor(e){e.cell=new tv(e),super(e)}call(e,t){return te(()=>{this.cell.dropoutMask!=null&&(ft(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ft(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,i=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:i,initialState:r})})}static fromConfig(e,t){return new e(t)}}s2.className="SimpleRNN";ve(s2);class nv extends wm{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new X("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Rn(this.units,"units"),this.activation=uo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=uo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Zt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Yt(e.kernelRegularizer),this.recurrentRegularizer=Yt(e.recurrentRegularizer),this.biasRegularizer=Yt(e.biasRegularizer),this.kernelConstraint=_n(e.kernelConstraint),this.recurrentConstraint=_n(e.recurrentConstraint),this.biasConstraint=_n(e.biasConstraint),this.dropout=Al([1,lo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Al([1,lo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=_t(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return te(()=>{if(e=e,e.length!==2)throw new X(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let i=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ho({ones:()=>ei(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ho({ones:()=>ei(i),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(e=q(e,r[0]));let u=Yi(e,this.kernel.read());this.useBias&&(u=Ii(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=q(i,o[0]));const h=this.recurrentKernel.read(),[d,p]=Ps(h,[2*this.units,this.units],h.rank-1),f=Yi(i,d),[g,y,m]=Ps(u,3,u.rank-1),[x,v]=Ps(f,2,f.rank-1);a=this.recurrentActivation.apply(Me(g,x)),l=this.recurrentActivation.apply(Me(y,v));const b=Yi(q(l,i),p);c=this.activation.apply(Me(m,b));const w=Me(q(a,i),q(Me(1,ln(a)),c));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:co(this.activation),recurrentActivation:co(this.recurrentActivation),useBias:this.useBias,kernelInitializer:en(this.kernelInitializer),recurrentInitializer:en(this.recurrentInitializer),biasInitializer:en(this.biasInitializer),kernelRegularizer:Ft(this.kernelRegularizer),recurrentRegularizer:Ft(this.recurrentRegularizer),biasRegularizer:Ft(this.biasRegularizer),activityRegularizer:Ft(this.activityRegularizer),kernelConstraint:Sn(this.kernelConstraint),recurrentConstraint:Sn(this.recurrentConstraint),biasConstraint:Sn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}nv.className="GRUCell";ve(nv);class i2 extends _o{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new nv(e),super(e)}call(e,t){return te(()=>{this.cell.dropoutMask!=null&&(ft(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ft(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,i=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:i,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}i2.className="GRU";ve(i2);class Sm extends wm{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Rn(this.units,"units"),this.activation=uo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=uo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Zt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Yt(e.kernelRegularizer),this.recurrentRegularizer=Yt(e.recurrentRegularizer),this.biasRegularizer=Yt(e.biasRegularizer),this.kernelConstraint=_n(e.kernelConstraint),this.recurrentConstraint=_n(e.recurrentConstraint),this.biasConstraint=_n(e.biasConstraint),this.dropout=Al([1,lo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Al([1,lo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=_t(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let i;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,o=this.units;i=new(t=class extends ni{apply(l,c){const u=r.apply([o]),h=new Ub().apply([o]),d=r.apply([o*2]);return wS(wS(u,h),d)}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,i,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return te(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new X(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let i=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ho({ones:()=>ei(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ho({ones:()=>ei(i),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(e=q(e,o[0]));let d=Yi(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(i=q(i,a[0])),d=Me(d,Yi(i,this.recurrentKernel.read())),this.useBias&&(d=Ii(d,this.bias.read()));const[p,f,g,y]=Ps(d,4,d.rank-1);l=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),u=Me(q(c,r),q(l,this.activation.apply(g))),h=this.recurrentActivation.apply(y);const m=q(h,this.activation.apply(u));return[m,m,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:co(this.activation),recurrentActivation:co(this.recurrentActivation),useBias:this.useBias,kernelInitializer:en(this.kernelInitializer),recurrentInitializer:en(this.recurrentInitializer),biasInitializer:en(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ft(this.kernelRegularizer),recurrentRegularizer:Ft(this.recurrentRegularizer),biasRegularizer:Ft(this.biasRegularizer),activityRegularizer:Ft(this.activityRegularizer),kernelConstraint:Sn(this.kernelConstraint),recurrentConstraint:Sn(this.recurrentConstraint),biasConstraint:Sn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Sm.className="LSTMCell";ve(Sm);class r2 extends _o{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Sm(e),super(e)}call(e,t){return te(()=>{this.cell.dropoutMask!=null&&(ft(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ft(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,i=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:i,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}r2.className="LSTM";ve(r2);class sv extends wm{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return te(()=>{e=e;let s=e.slice(1);const i=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?i.push(s.splice(0,a.stateSize.length)):i.push(s.splice(0,1));i.reverse();const r=[];let o;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=i[a],a===0?o=[e[0]].concat(s):o=[o[0]].concat(s),o=l.call(o,t),r.push(o.slice(1))}s=[];for(const a of r.slice().reverse())s.push(...a);return[o[0]].concat(s)})}build(e){Lx(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,i)=>{Yo(`RNNCell_${i}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),i={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),i)}static fromConfig(e,t,s={}){const i=[];for(const r of t.cells)i.push(br(r,s));return new e({cells:i})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Fx(e)}setWeights(e){const t=[];for(const s of this.cells){const i=s.weights.length,r=e.splice(i);for(let o=0;o<s.weights.length;++o)t.push([s.weights[o],r[o]])}Zb(t)}}sv.className="StackedRNNCells";ve(sv);function ho(n){const{ones:e,rate:t,training:s=!1,count:i=1,dropoutFunc:r}=n,o=()=>r!=null?r(e(),t):YE(e(),t),a=()=>Ah(o,e,s);return!i||i<=1?Xi(a().clone()):Array(i).fill(void 0).map(a).map(c=>Xi(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var a8=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,s=Object.getOwnPropertySymbols(n);i<s.length;i++)e.indexOf(s[i])<0&&Object.prototype.propertyIsEnumerable.call(n,s[i])&&(t[s[i]]=n[s[i]]);return t};class o2 extends _o{constructor(e){if(e.unroll)throw new ut("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ut("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new wn({ndim:5})]}call(e,t){return te(()=>{if(this.cell.dropoutMask!=null&&(ft(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ft(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new X("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,i=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:i,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return te(()=>{const{stateSize:t}=this.cell,s=e.shape,i=this.computeSingleOutputShape(s),r=[i[0],...i.slice(2)],o=An(r);return Array.isArray(t)?Array(t.length).fill(o):[o]})}resetStates(e,t=!1){te(()=>{if(!this.stateful)throw new Fi("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,i=this.computeSingleOutputShape(s),r=[i[0],...i.slice(2)];if(s[0]==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>An(r)):this.states_=[An(r)];else if(e==null)ft(this.states_),this.keptStates!=null&&(ft(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>An(r)):this.states_[0]=An(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ft(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],c=r;if(!Et(l.shape,c))throw new X(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Xi(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:i,padding:r,strides:o,dilationRate:a}=this.cell,l=t==="channelsFirst",c=e[l?3:2],u=e[l?4:3],h=xi(c,i[0],r,o[0],a[0]),d=xi(u,i[1],r,o[1],a[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}o2.className="ConvRNN2D";class iv extends Sm{constructor(e){const{filters:t,kernelSize:s,strides:i,padding:r,dataFormat:o,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Rn(this.filters,"filters"),this.kernelSize=xl(s,2,"kernelSize"),this.kernelSize.forEach(l=>Rn(l,"kernelSize")),this.strides=xl(i||1,2,"strides"),this.strides.forEach(l=>Rn(l,"strides")),this.padding=r||"valid",Bs(this.padding),this.dataFormat=o||"channelsLast",hn(this.dataFormat),this.dilationRate=xl(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Rn(l,"dilationRate"))}build(e){var t;e=_t(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new X(`The channel dimension of the input should be defined. Found ${e[s]}`);const i=e[s],r=4,o=this.kernelSize.concat([i,this.filters*r]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(t=class extends ni{apply(d,p){const f=c.apply([u]),g=wo([u]),y=c.apply([u*2]);return Vb([f,g,y])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return te(()=>{if(e.length!==3)throw new X(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,i=e[0],r=e[1],o=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ho({ones:()=>ei(i),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(H,j,ne)=>!j||!j[ne]?H:q(j[ne],H);let u=c(i,l,0),h=c(i,l,1),d=c(i,l,2),p=c(i,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ho({ones:()=>ei(r),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let g=c(r,f,0),y=c(r,f,1),m=c(r,f,2),x=c(r,f,3);const v=3,[b,w,S,_]=Ps(this.kernel.read(),a,v),[I,N,k,M]=this.useBias?Ps(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,b,I,this.padding),h=this.inputConv(h,w,N,this.padding),d=this.inputConv(d,S,k,this.padding),p=this.inputConv(p,_,M,this.padding);const[T,C,R,L]=Ps(this.recurrentKernel.read(),a,v);g=this.recurrentConv(g,T),y=this.recurrentConv(y,C),m=this.recurrentConv(m,R),x=this.recurrentConv(x,L);const $=this.recurrentActivation.apply(Me(u,g)),O=this.recurrentActivation.apply(Me(h,y)),G=Me(q(O,o),q($,this.activation.apply(Me(d,m)))),Z=q(this.recurrentActivation.apply(Me(p,x)),this.activation.apply(G));return[Z,Z,G]})}getConfig(){const e=super.getConfig(),{units:t}=e,s=a8(e,["units"]),i={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),i)}inputConv(e,t,s,i){const r=oa(e,t,this.strides,i||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Ii(r,s,this.dataFormat):r}recurrentConv(e,t){return oa(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}iv.className="ConvLSTM2DCell";ve(iv);class a2 extends o2{constructor(e){const t=new iv(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}a2.className="ConvLSTM2D";ve(a2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rv extends pt{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let i=0;i<this.noiseShape.length;++i)s.push(this.noiseShape[i]==null?t[i]:this.noiseShape[i]);return s}call(e,t){return te(()=>{this.invokeCallHook(e,t);const s=st(e);if(0<this.rate&&this.rate<1){const i=t.training==null?!1:t.training,r=this.getNoiseShape(s);return Ah(()=>YE(s,this.rate,r,this.seed),()=>s,i)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}rv.className="Dropout";ve(rv);class l2 extends rv{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}l2.className="SpatialDropout1D";ve(l2);class ov extends pt{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Rn(this.units,"units"),this.activation=uo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Zt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Zt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=_n(e.kernelConstraint),this.biasConstraint=_n(e.biasConstraint),this.kernelRegularizer=Yt(e.kernelRegularizer),this.biasRegularizer=Yt(e.biasRegularizer),this.activityRegularizer=Yt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=_t(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=_t(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return te(()=>{this.invokeCallHook(e,t);const s=st(e),i=WE(this.activation.getClassName());let r;return i!=null?r=Yi(s,this.kernel.read(),i,this.bias?this.bias.read():null):(r=Yi(s,this.kernel.read()),this.bias!=null&&(r=Ii(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const e={units:this.units,activation:co(this.activation),useBias:this.useBias,kernelInitializer:en(this.kernelInitializer),biasInitializer:en(this.biasInitializer),kernelRegularizer:Ft(this.kernelRegularizer),biasRegularizer:Ft(this.biasRegularizer),activityRegularizer:Ft(this.activityRegularizer),kernelConstraint:Sn(this.kernelConstraint),biasConstraint:Sn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ov.className="Dense";ve(ov);class c2 extends pt{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=_t(e);for(const t of e.slice(1))if(t==null)throw new X(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],so(e,1)]}call(e,t){return te(()=>{this.invokeCallHook(e,t);let s=st(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const i=[0];for(let r=2;r<s.rank;++r)i.push(r);i.push(1),s=bt(s,i)}return Bj(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}c2.className="Flatten";ve(c2);class u2 extends pt{constructor(e){super(e),this.supportsMasking=!0,this.activation=uo(e.activation)}call(e,t){return te(()=>{this.invokeCallHook(e,t);const s=st(e);return this.activation.apply(s)})}getConfig(){const e={activation:co(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}u2.className="Activation";ve(u2);class h2 extends pt{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return te(()=>(e=st(e),Oj(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}h2.className="RepeatVector";ve(h2);class d2 extends pt{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",i=t.slice();let r=1,o=null;for(let l=0;l<i.length;++l){const c=i[l];if(this.isUnknown(c))if(o===null)o=l;else throw new X("Can only specifiy one unknown dimension.");else r*=c}const a=so(e);if(o!==null){if(r===0||a%r!==0)throw new X(s);i[o]=a/r}else if(a!==r)throw new X(s);return i}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return te(()=>{this.invokeCallHook(e,t);const s=st(e),i=s.shape,r=i.slice(0,1).concat(this.fixUnknownDimension(i.slice(1),this.targetShape));return J(s,r)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}d2.className="Reshape";ve(d2);class p2 extends pt{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=vi(1,e.dims.length+1);if(!Et(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new wn({ndim:this.dims.length+1})]}computeOutputShape(e){e=_t(e);const t=e.slice();return this.dims.forEach((s,i)=>{t[i+1]=e[s]}),t}call(e,t){return bt(st(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}p2.className="Permute";ve(p2);class f2 extends pt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=st(e);return Ix(lp(s,this.maskValue),-1)}call(e,t){return te(()=>{this.invokeCallHook(e,t);const s=st(e),o=Ix(lp(s,this.maskValue),-1,!0);return q(s,Oe(o,s.dtype))})}}f2.className="Masking";ve(f2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class m2 extends pt{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(kt(e.inputLength))}this.inputDim=e.inputDim,Rn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Rn(this.outputDim,"outputDim"),this.embeddingsInitializer=Zt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Yt(e.embeddingsRegularizer),this.activityRegularizer=Yt(e.activityRegularizer),this.embeddingsConstraint=_n(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return te(()=>this.maskZero?(e=st(e),lp(e,vt(e))):null)}computeOutputShape(e){if(e=_t(e),this.inputLength==null)return[...e,this.outputDim];const t=kt(this.inputLength);if(t.length!==e.length-1)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let i=0;i<t.length;++i){const r=t[i],o=e[i+1];if(r!=null&&o!=null&&r!==o)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[s]=o),s++}}return[e[0],...t,this.outputDim]}call(e,t){return te(()=>{this.invokeCallHook(e,t);let s=st(e);s.dtype!=="int32"&&(s=Zi(s,"int32"));const i=ZE(this.embeddings.read(),J(s,[s.size]));return J(i,_t(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:en(this.embeddingsInitializer),embeddingsRegularizer:Ft(this.embeddingsRegularizer),activityRegularizer:Ft(this.activityRegularizer),embeddingsConstraint:Sn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}m2.className="Embedding";ve(m2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ta extends pt{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ut}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let i=0;i<t.length;++i){const r=e[e.length-t.length+i],o=t[i];if(r==null||o==null||r<0||o<0)s.push(null);else if(r===1)s.push(o);else if(o===1)s.push(r);else{if(r!==o)throw new X("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(r)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[_t(e)]),e=e,e.length<2)throw new X(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=no(t),t.length>1)throw new X(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);s=this.computeElementwiseOpOutputShape(s,o)}const i=e.map(r=>r.length);e.indexOf(null)===-1&&no(i).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return te(()=>{if(e=e,this.reshapeRequired){const s=[],i=e.map(r=>r.rank);if(i.indexOf(null)===-1){const r=lo(i);for(let o of e){const a=o.rank;for(let l=0;l<r-a;++l)o=kh(o,1);s.push(o)}return this.mergeFunction(s)}else{let r=!1;for(const l of e){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let p=J(l,[h].concat(so(u.slice(1))));p=bt(p,[1,0]),p=J(p,d),s.push(p),r=!0}else if(c>1){const u=vi(1,c).concat([0]);s.push(bt(l,u)),r=!0}else s.push(l)}let o=this.mergeFunction(s);const a=o.rank;if(r){if(a==null){const l=o.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));o=J(bt(J(o,[-1,u]),[1,0]),h)}else if(a>1){const l=[a-1].concat(vi(0,a-1));o=bt(o,l)}}return o}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let i=1;i<e.length;++i){const r=e[i]==null?null:e[i].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let s=[];for(const i of e)i!=null&&i[0]!==null&&s.push(i[0]);return s=no(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return te(()=>{if(t==null)return null;if(!Array.isArray(t))throw new X("`mask` should be an Array");if(!Array.isArray(e))throw new X("`inputs` should be an Array");if(t.length!==e.length)throw new X(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(i=>i==null))return null;t=t.map(i=>i==null?i:ds(i,0));let s=t[0];for(let i=1;i<t.length-1;++i)s=_r(s,t[i]);return s})}}class g2 extends Ta{constructor(e){super(e)}mergeFunction(e){return te(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Me(t,e[s]);return t})}}g2.className="Add";ve(g2);class x2 extends Ta{constructor(e){super(e)}mergeFunction(e){return te(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=q(t,e[s]);return t})}}x2.className="Multiply";ve(x2);class y2 extends Ta{constructor(e){super(e)}mergeFunction(e){return te(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Me(t,e[s]);return q(1/e.length,t)})}}y2.className="Average";ve(y2);class b2 extends Ta{constructor(e){super(e)}mergeFunction(e){return te(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=vo(t,e[s]);return t})}}b2.className="Maximum";ve(b2);class v2 extends Ta{constructor(e){super(e)}mergeFunction(e){return te(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=ou(t,e[s]);return t})}}v2.className="Minimum";ve(v2);class w2 extends Ta{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new X("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const i of e)if(i!=null){t=!1;break}if(t)return;const s=[];for(let i=0;i<e.length;++i){const r=e[i].slice();r.splice(this.axis,1);let o=!1;for(const a of s)if(Et(a,r)){o=!0;break}o||s.push(r)}if(s.length>1)throw new X("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return te(()=>Vb(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new X("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),i=this.axis<0?s.length+this.axis:this.axis;for(const r of t.slice(1)){if(s[i]==null||r[i]==null){s[i]=null;break}s[i]+=r[i]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new X("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new X("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new X(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return te(()=>{let s=!0;if(t.forEach(o=>{if(o!=null){s=!1;return}}),s)return null;const i=[];for(let o=0;o<e.length;++o)t[o]==null?i.push(Oe(ei(e[o]),"bool")):t[o].rank<e[o].rank?i.push(ds(t[o],-1)):i.push(t[o]);const r=ms(i,this.axis);return SI(r,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}w2.className="Concatenate";ve(w2);function kc(n,e){for(;n<0;)n+=e;return n}function l8(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new ut("batchDot is not implemented for tensors of 4D or higher rank yet");if(A(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),A(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new ut("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,i=e.shape.length;t==null&&(t=[s-1,i-2]);const r=t;return te(()=>{let o;if(s>i){o=s-i;const l=[];for(let c=0;c<o;++c)l.push(1);e=J(e,e.shape.concat(l))}else if(i>s){o=i-s;const l=[];for(let c=0;c<o;++c)l.push(1);n=J(n,n.shape.concat(l))}else o=0;let a;if(n.shape.length===2&&e.shape.length===2)r[0]===r[1]?a=Ze(q(n,e),r[0]):a=Ze(q(bt(n,[1,0]),e),r[1]);else{const l=r[0]!==n.shape.length-1,c=r[1]===e.shape.length-1;a=Tt(n,e,l,c)}if(o>0){let l;s>i?l=s+i-3:l=s-1;const c=[];for(let u=l;u<l+o;++u)c.push(u);a=_h(a,c)}return a.shape.length===1&&(a=ds(a,1)),a})}class S2 extends Ta{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){A(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new ut("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(t,s);if(t[i[0]]!==s[i[1]])throw new X(`Dimension incompatibility: ${t[i[0]]} !== ${s[i[1]]}`)}mergeFunction(e){if(e.length!==2)throw new X(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],i;return Array.isArray(this.axes)?i=this.axes.map((r,o)=>kc(r,e[o].shape.length)):i=[kc(this.axes,t.shape.length),kc(this.axes,s.shape.length)],this.normalize&&(t=mp(t,i[0]),s=mp(s,i[1])),l8(t,s,i)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[kc(this.axes,e.length),kc(this.axes,t.length)],s}computeOutputShape(e){A(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new ut("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(t,s);t.splice(i[0],1),s.splice(i[1],1),s.splice(0,1);const r=t.concat(s);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}S2.className="Dot";ve(S2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _2 extends pt{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return te(()=>{this.invokeCallHook(e,t);const s=st(e);return Ah(()=>Me(mm(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}_2.className="GaussianNoise";ve(_2);class C2 extends pt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return te(()=>{this.invokeCallHook(e,t);const s=st(e);return this.rate>0&&this.rate<1?Ah(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return q(s,mm(s.shape,1,r))},()=>s,t.training||!1):s})}}C2.className="GaussianDropout";ve(C2);class T2 extends pt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||st(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return te(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return Ah(()=>{const r=st(e),a=-1.6732632423543772*1.0507009873554805;let l=va(Sh(s),this.rate);l=Zi(l,"float32");const c=((1-this.rate)*(1+this.rate*a**2))**-.5,u=-c*a*this.rate,h=Me(q(r,l),q(Me(l,-1),a));return Me(q(h,c),u)},()=>st(e),t.training||!1)}return e})}}T2.className="AlphaDropout";ve(T2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uu(n,e,t,s,i,r=.001){let o;if(n.rank===2)o=VU(n,e,t,s,i,r);else if(n.rank===3)o=WU(n,e,t,s,i,r);else if(n.rank===4)o=HU(n,e,t,s,i,r);else throw new ut(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return o}function c8(n,e,t,s,i=.001){return te(()=>{const r=Wy(n,s),o=r.mean,a=r.variance;return[uu(n,o,a,t,e,i),o,a]})}function u8(n,e,t,s,i=.001){return te(()=>{const r=Wy(n,s),o=r.mean,a=r.variance,l=[];for(const f of vi(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const c=J(o,l),u=J(a,l),h=e==null?null:J(e,l),d=t==null?null:J(t,l);return[uu(n,c,u,d,h,i),o,a]})}function h8(n,e,t,s,i=.001){return Et(s.slice().sort(),vi(0,n.rank-1))?c8(n,e,t,s,i):u8(n,e,t,s,i)}class I2 extends pt{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Zt(e.betaInitializer||"zeros"),this.gammaInitializer=Zt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Zt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Zt(e.movingVarianceInitializer||"ones"),this.betaConstraint=_n(e.betaConstraint),this.gammaConstraint=_n(e.gammaConstraint),this.betaRegularizer=Yt(e.betaRegularizer),this.gammaRegularizer=Yt(e.gammaRegularizer)}build(e){e=_t(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new X(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new wn({ndim:e.length,axes:{[t]:s}})];const i=[s];this.scale&&(this.gamma=this.addWeight("gamma",i,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",i,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",i,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",i,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return te(()=>{const s=t.training==null?!1:t.training,i=st(e),r=i.shape,o=r.length,a=vi(0,o),l=this.axis>=0?this.axis:this.axis+o;a.splice(l,1);const c=ua(1,o);c[l]=r[l];const u=a.slice();u.sort();const h=!Et(u,vi(0,o).slice(0,o-1)),d=()=>{if(h){const x=J(this.movingMean.read(),c),v=J(this.movingVariance.read(),c),b=this.center?J(this.beta.read(),c):null,w=this.scale?J(this.gamma.read(),c):null;return uu(i,x,v,b,w,this.epsilon)}else return uu(i,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,g]=h8(i,this.gamma.read(),this.beta.read(),a,this.epsilon),y=(x,v,b)=>{te(()=>{const w=1-b,S=x.read(),_=q(tt(S,v),w);x.write(tt(S,_))})};return(()=>{y(this.movingMean,f,this.momentum),y(this.movingVariance,g,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:en(this.betaInitializer),gammaInitializer:en(this.gammaInitializer),movingMeanInitializer:en(this.movingMeanInitializer),movingVarianceInitializer:en(this.movingVarianceInitializer),betaRegularizer:Ft(this.betaRegularizer),gammaRegularizer:Ft(this.gammaRegularizer),betaConstraint:Sn(this.betaConstraint),gammaConstraint:Sn(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}I2.className="BatchNormalization";ve(I2);class E2 extends pt{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Zt(e.betaInitializer||"zeros"),this.gammaInitializer=Zt(e.gammaInitializer||"ones"),this.betaRegularizer=Yt(e.betaRegularizer),this.gammaRegularizer=Yt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=_t(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==no(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>e[r]),i=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,i):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,i):this.beta=null,this.built=!0}call(e,t){const s=st(e),i=s.shape,r=i.length;return te(()=>{let{mean:a,variance:l}=Wy(s,this.axis,!0);const c=ua(1,r);for(const g of this.axis)c[g]=i[g];const u=g=>g!=null&&g.shape.length!==r?J(g,c):g;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const p=[],f=[];for(let g=0;g<r;++g)this.axis.indexOf(g)!==-1?(p.push(i[g]),f.push(1)):(p.push(1),f.push(i[g]));return a=fi(a,p),l=fi(l,p),h!=null&&(h=fi(h,f)),d!=null&&(d=fi(d,f)),uu(s,a,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:en(this.betaInitializer),gammaInitializer:en(this.gammaInitializer),betaRegularizer:Ft(this.betaRegularizer),gammaRegularizer:Ft(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}E2.className="LayerNormalization";ve(E2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function d8(n,e,t){return te(()=>{if(n.rank!==4)throw new X(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new X("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=wi()),t!=="channelsLast"&&t!=="channelsFirst")throw new X(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Gy(n,s)})}class M2 extends pt{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?wi():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new X(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new X(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new X(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new wn({ndim:4})]}computeOutputShape(e){e=_t(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return te(()=>d8(st(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}M2.className="ZeroPadding2D";ve(M2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _m(n,e,t,s,i,r){return te(()=>{hn(i),HE(r),Bs(s),t==null&&(t=[1,1]),s==null&&(s="valid"),i==null&&(i=wi()),r==null&&(r="max"),n=ev(n,i);let o;const a=s==="same"?"same":"valid";return r==="max"?o=Uy(n,e,t,a):o=Ry(n,e,t,a),i==="channelsFirst"&&(o=bt(o,[0,3,1,2])),o})}function k2(n,e,t,s,i,r){return te(()=>{hn(i),HE(r),Bs(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),i==null&&(i=wi()),r==null&&(r="max"),n=XM(n,i);let o;const a=s==="same"?"same":"valid";return r==="max"?o=k4(n,e,t,a):o=AU(n,e,t,a),i==="channelsFirst"&&(o=bt(o,[0,4,1,2,3])),o})}class N2 extends pt{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new X(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Rn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new X(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Rn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Bs(this.padding),this.inputSpec=[new wn({ndim:3})]}computeOutputShape(e){e=_t(e);const t=xi(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return te(()=>{this.invokeCallHook(e,t),e=kh(st(e),2);const s=this.poolingFunction(st(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return _h(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class A2 extends N2{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return hn(r),Bs(i),_m(e,t,s,i,r,"max")}}A2.className="MaxPooling1D";ve(A2);class R2 extends N2{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return hn(r),Bs(i),_m(e,t,s,i,r,"avg")}}R2.className="AveragePooling1D";ve(R2);class $2 extends pt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new X(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Rn(this.poolSize,"poolSize"),Rn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,hn(this.dataFormat),Bs(this.padding),this.inputSpec=[new wn({ndim:4})]}computeOutputShape(e){e=_t(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=xi(t,this.poolSize[0],this.padding,this.strides[0]),s=xi(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return te(()=>(this.invokeCallHook(e,t),this.poolingFunction(st(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class D2 extends $2{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return hn(r),Bs(i),_m(e,t,s,i,r,"max")}}D2.className="MaxPooling2D";ve(D2);class L2 extends $2{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return hn(r),Bs(i),_m(e,t,s,i,r,"avg")}}L2.className="AveragePooling2D";ve(L2);class F2 extends pt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new X(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Rn(this.poolSize,"poolSize"),Rn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,hn(this.dataFormat),Bs(this.padding),this.inputSpec=[new wn({ndim:5})]}computeOutputShape(e){e=_t(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],i=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=xi(t,this.poolSize[0],this.padding,this.strides[0]),s=xi(s,this.poolSize[1],this.padding,this.strides[1]),i=xi(i,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,i]:[e[0],t,s,i,e[4]]}call(e,t){return te(()=>(this.invokeCallHook(e,t),this.poolingFunction(st(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class P2 extends F2{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return hn(r),Bs(i),k2(e,t,s,i,r,"max")}}P2.className="MaxPooling3D";ve(P2);class O2 extends F2{constructor(e){super(e)}poolingFunction(e,t,s,i,r){return hn(r),Bs(i),k2(e,t,s,i,r,"avg")}}O2.className="AveragePooling3D";ve(O2);class z2 extends pt{constructor(e){super(e),this.inputSpec=[new wn({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ut}}class B2 extends z2{constructor(e){super(e||{})}call(e,t){return te(()=>{const s=st(e);return mn(s,1)})}}B2.className="GlobalAveragePooling1D";ve(B2);class V2 extends z2{constructor(e){super(e||{})}call(e,t){return te(()=>{const s=st(e);return gi(s,1)})}}V2.className="GlobalMaxPooling1D";ve(V2);class U2 extends pt{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,hn(this.dataFormat),this.inputSpec=[new wn({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ut}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class W2 extends U2{call(e,t){return te(()=>{const s=st(e);return this.dataFormat==="channelsLast"?mn(s,[1,2]):mn(s,[2,3])})}}W2.className="GlobalAveragePooling2D";ve(W2);class G2 extends U2{call(e,t){return te(()=>{const s=st(e);return this.dataFormat==="channelsLast"?gi(s,[1,2]):gi(s,[2,3])})}}G2.className="GlobalMaxPooling2D";ve(G2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class H2 extends pt{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const i=t.layer,r=br(i,s);delete t.layer;const o={layer:r};return Object.assign(o,t),new e(o)}}class j2 extends H2{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=_t(e),e.length<3)throw new X(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=_t(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),i=e[1];return[s[0],i].concat(s.slice(1))}call(e,t){return te(()=>(e=st(e),n2((o,a)=>[st(this.layer.call(o,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}j2.className="TimeDistributed";ve(j2);function p8(n){Ca($j,"BidirectionalMergeMode",n)}const f8="concat";class X2 extends H2{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=br(s),t.goBackwards=t.goBackwards!==!0;const i={};if(i.className=e.layer.getClassName(),i.config=t,this.backwardLayer=br(i),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?f8:e.mergeMode,p8(this.mergeMode),e.weights)throw new ut("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,i,r;return this.returnState&&(r=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,i=[s]):this.mergeMode==null?i=[s,s.slice()]:i=[s],this.returnState?this.mergeMode==null?i.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):ps(i)}apply(e,t){let s=t==null?null:t.initialState,i=t==null?null:t.constants;t==null&&(t={});const r=t2(e,s,i,this.numConstants);if(e=r.inputs,s=r.initialState,i=r.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&i==null)return super.apply(e,t);const o=[],a=[];if(s!=null){const c=s.length;if(c%2>0)throw new X("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,o.push(...s);const u=s.map(h=>new wn({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(i!=null)throw new ut("Support for constants in Bidirectional layers is not implemented yet.");const l=o[0]instanceof nr;for(const c of o)if(c instanceof nr!==l)throw new X("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[e].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return te(()=>{const s=t.initialState;let i,r;if(s==null)i=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);i=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let o;this.returnState&&(Array.isArray(i)&&(o=i.slice(1).concat(r.slice(1))),i=i[0],r=r[0]),this.returnSequences&&(r=la(r,1));let a;return this.mergeMode==="concat"?a=Vb([i,r]):this.mergeMode==="sum"?a=Me(i,r):this.mergeMode==="ave"?a=q(.5,Me(i,r)):this.mergeMode==="mul"?a=q(i,r):this.mergeMode==null&&(a=[i,r]),this.returnState?this.mergeMode==null?a.concat(o):[a].concat(o):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Yo(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Yo(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(o=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=br(t.layer);if(delete t.layer,t.numConstants!=null)throw new ut("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const i=t;return i.layer=s,new e(i)}}X2.className="Bidirectional";ve(X2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class q2 extends pt{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return te(()=>(e=st(e),e.dtype!=="float32"&&(e=Zi(e,"float32")),Me(q(e,this.scale),this.offset)))}}q2.className="Rescaling";ve(q2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:m8,cropAndResize:g8}=xr;class Z2 extends pt{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,i,r,o,a,l){return te(()=>{let c,u=!1;const h=t/o,d=s/a,p=(i+t)/o,f=(r+s)/a,g=[h,d,p,f],y=[];e.rank===3?(u=!0,c=Cr([e])):c=e;for(let w=0;w<c.shape[0];w++)y.push(g);const m=dI(y,[y.length,4]),x=au(0,y.length,1,"int32"),b=g8(c,m,x,[i,r],"nearest");return Zi(u?st(ca(b)):b,l)})}upsize(e,t,s,i){return te(()=>{const r=m8(e,[t,s]);return Zi(r,i)})}call(e,t){return te(()=>{const s=st(e),i=s.dtype,r=s.shape,o=r[r.length-3],a=r[r.length-2];let l=0;o!==this.height&&(l=Math.floor((o-this.height)/2));let c=0;return a!==this.width&&(c=Math.floor((a-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(s,l,c,this.height,this.width,o,a,i):this.upsize(e,this.height,this.width,i)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=_t(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}Z2.className="CenterCrop";ve(Z2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function x8(n,e,t,s){let i=st(n);if(i.dtype!=="int32"&&(i=Zi(i,"int32")),e==="int")return i;const r=i.shape;if(i.rank===0&&(i=ds(i,-1)),e==="oneHot"&&i.shape[i.shape.length-1]!==1&&(i=ds(i,-1)),i.rank>2)throw new X(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${r} which would result in output rank ${i.rank}.`);const o=["multiHot","oneHot"].includes(e),a=i;let l;if(typeof s<"u"&&e==="count"?l=oS(a,s,t,o):l=oS(a,[],t,o),e!=="tfIdf")return l;if(s)return q(l,s);throw new X("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Y2 extends pt{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=_t(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return te(()=>{e=st(e),e.dtype!=="int32"&&(e=Zi(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new X(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=st(t.countWeights)}const i=gi(e),r=op(e),o=zs(this.numTokens,i).bufferSync().get(0),a=va(r,0).bufferSync().get(0);if(!(o&&a))throw new X(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return x8(e,this.outputMode,this.numTokens,s)})}}Y2.className="CategoryEncoding";ve(Y2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const y8=["bilinear","nearest"],zS=new Set(y8);class J2 extends pt{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(zS.has(e.interpolation))this.interpolation=e.interpolation;else throw new X(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=_t(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return te(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return xr.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return xr.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...zS]} are supported`)})}}J2.className="Resizing";ve(J2);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class K2{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}K2.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Q2 extends pt{constructor(e){super(e),this.randomGenerator=new K2(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Q2.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const b8=["bilinear","nearest"],BS=new Set(b8);class ek extends Q2{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new X(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new X(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new X(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(BS.has(s))this.interpolation=s;else throw new X(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=_t(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return te(()=>{const s=st(e);this.imgHeight=s.shape[s.shape.length-3];const i=s.shape[s.shape.length-2];this.widthFactor=Sh([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*i;r=Math.round(r);const o=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return xr.resizeBilinear(e,o);case"nearest":return xr.resizeNearestNeighbor(e,o);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...BS]} are supported`)}})}}ek.className="RandomWidth";ve(ek);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function v8(n){return new ov(n)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8=se();w8.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var VS;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(VS||(VS={}));var US;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(US||(US={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var WS;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(WS||(WS={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&A(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S8=JI;class Cm extends L0{nextDataId(){return Cm.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new gT(this,$i())}write(e,t,s){this.firstUse&&(this.firstUse=!1,se().get("IS_NODE")&&Ls(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const i={id:this.nextDataId()};return this.data.set(i,{values:e,dtype:s,refCount:1}),i}makeTensorInfo(e,t,s){let i;if(t==="string"&&s!=null&&s.length>0&&Cu(s[0])){const r=s.map(o=>to(o));i=this.write(r,e,t)}else i=this.write(s,e,t);return{dataId:i,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,i,r){this.data.set(e,{values:t,dtype:i,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const i=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return Tr(i,r)}return GB(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(i=>ao(i));return ht(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ht(e.shape,e.dtype,t)}makeOutput(e,t,s){return $i().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=us();return e(),{kernelMs:us()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ue([e],"where");const t=this.readSync(e.dataId);return S8(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Cm.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const _8=n=>{const{x:e}=n.inputs,t=n.backend;Ue(e,"abs");let s=new Float32Array(ce(e.shape));const i=t.data.get(e.dataId).values;return s=tk(i),t.makeOutput(s,e.shape,e.dtype)},C8={kernelName:ef,backendName:"cpu",kernelFunc:_8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(n){return(e,t,s,i,r)=>{const o=lt(e,t),a=o.length,l=je(o),c=ce(o),u=Hn(r,c),h=e.length,d=t.length,p=je(e),f=je(t),g=kl(e,o),y=kl(t,o);if(g.length+y.length===0)for(let m=0;m<u.length;++m)u[m]=n(s[m%s.length],i[m%i.length]);else for(let m=0;m<u.length;++m){const x=Ql(m,a,l),v=x.slice(-h);g.forEach(_=>v[_]=0);const b=ji(v,h,p),w=x.slice(-d);y.forEach(_=>w[_]=0);const S=ji(w,d,f);u[m]=n(s[b],i[S])}return[u,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _s(n){const{inputs:e,backend:t}=n,{real:s,imag:i}=e,r=t.data.get(s.dataId).values,o=t.data.get(i.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(a.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",r),imag:t.makeTensorInfo(i.shape,"float32",o)},a}const T8={kernelName:q0,backendName:"cpu",kernelFunc:_s};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vp(n,e,t="float32"){if(t==="complex64"){const i=vp(n,e,"float32"),r=vp(n,e,"float32");return _s({inputs:{real:i,imag:r},backend:n})}const s=jn(ce(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sr(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const I8={kernelName:Hu,backendName:"cpu",kernelFunc:sr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ha(n){const{inputs:e,backend:t}=n,{input:s}=e,i=t.data.get(s.dataId).complexTensorInfos.real,r=t.data.get(i.dataId).values;return t.makeTensorInfo(i.shape,i.dtype,r)}const E8={kernelName:yy,backendName:"cpu",kernelFunc:ha};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n,e,t,s){if(s==="int32"){const i=Int32Array.from(n);return[e,"int32",i]}if(s==="bool"){const i=ba([0],t),[r,o]=dn((a,l)=>a!==l?1:0)(e,[],n,i,"bool");return[o,"bool",r]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function po(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{dtype:r}=s;if(r==="complex64"){if(i.dtype==="complex64")return sr({inputs:{x:i},backend:t});const u=vp(t,i.shape,i.dtype),h=po({inputs:{x:i},backend:t,attrs:{dtype:"float32"}}),d=_s({inputs:{real:h,imag:u},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),d}if(i.dtype==="complex64"){const u=ha({inputs:{input:i},backend:t}),h=po({inputs:{x:u},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(u),h}if(!bT(i.dtype,r)){const u=sr({inputs:{x:i},backend:t});return{dataId:u.dataId,shape:u.shape,dtype:r}}const o=t.data.get(i.dataId).values,[a,l,c]=nk(o,i.shape,i.dtype,r);return t.makeTensorInfo(a,l,c)}const M8={kernelName:Ru,backendName:"cpu",kernelFunc:po};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tn(n,e,t,s){return t==null?({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;Ue([o,a],n);const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=o.dtype==="string"?Ir(c):c,d=o.dtype==="string"?Ir(u):u,p=s||o.dtype,[f,g]=e(o.shape,a.shape,h,d,p);return l.makeTensorInfo(g,p,f)}:({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;if(o.dtype==="complex64"||a.dtype==="complex64"){const c=po({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,g=po({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),y=l.data.get(g.dataId),m=y.complexTensorInfos.real,x=y.complexTensorInfos.imag,v=l.data.get(m.dataId).values,b=l.data.get(x.dataId).values,[w,S,_]=t(o.shape,a.shape,p,f,v,b),I=l.makeTensorInfo(_,"float32",w),N=l.makeTensorInfo(_,"float32",S),k=_s({inputs:{real:I,imag:N},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(I),l.disposeIntermediateTensorInfo(N),k}else{const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=s||o.dtype,[d,p]=e(o.shape,a.shape,c,u,h);return l.makeTensorInfo(p,h,d)}}}function av(n){return(e,t,s,i,r,o)=>{const a=lt(e,t),l=ce(a),c=a.length,u=je(a),h=Hn("float32",l),d=Hn("float32",l),p=kl(e,a),f=kl(t,a),g=Tr(s,i),y=Tr(r,o),m=e.length,x=je(e),v=t.length,b=je(t);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const S=w%g.length,_=w%y.length,I=n(g[S*2],g[S*2+1],y[_*2],y[_*2+1]);h[w]=I.real,d[w]=I.imag}else for(let w=0;w<h.length;w++){const S=Ql(w,c,u),_=S.slice(-m);p.forEach(T=>_[T]=0);const I=ji(_,m,x),N=S.slice(-v);f.forEach(T=>N[T]=0);const k=ji(N,v,b),M=n(g[I*2],g[I*2+1],y[k*2],y[k*2+1]);h[w]=M.real,d[w]=M.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sk=dn((n,e)=>n+e),k8=av((n,e,t,s)=>({real:n+t,imag:e+s})),$l=Tn(ec,sk,k8),N8={kernelName:ec,backendName:"cpu",kernelFunc:$l};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lv(n,e,t,s,i){const r=ce(s),o=jn(i,t);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=i||(r>0?o[l]+=e[a]:o[l]+=1)}return o}function ik(n,e,t,s=!1){const i=n.shape[0],r=n.shape[1],o=ht([i,t],e.dtype);for(let a=0;a<i;a++)for(let l=0;l<r;l++){const c=n.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(s?o.set(1,a,c):e.size>0?o.set(o.get(a,c)+e.get(a,l),a,c):o.set(o.get(a,c)+1,a,c))}return o}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rk=dn((n,e)=>n&e),A8=Tn(X0,rk),R8={kernelName:X0,backendName:"cpu",kernelFunc:A8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rr(n){return(e,t,s)=>{const i=an(t,e.length);for(let r=0;r<e.length;++r)i[r]=n(e[r],s);return i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(n,e,t){const s=rr(e);return Co(n,s,t)}function Co(n,e,t){return({inputs:s,attrs:i,backend:r})=>{const{x:o}=s;Ue(o,n);const a=r,l=a.data.get(o.dataId).values;let c;if(o.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=Ir(l)}else c=l;const u=t||o.dtype,h=e(c,u,i);return a.makeTensorInfo(o.shape,u,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ok=rr(n=>Math.ceil(n)),$8=Co($u,ok),D8={kernelName:$u,backendName:"cpu",kernelFunc:$8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ak(n,e,t,s){const i=an(t,ce(e));if(s&&t!=="string"){let r=0;n.forEach(o=>{const a=ce(o.shape);i.set(o.vals,r),r+=a})}else{let r=0;n.forEach(o=>{const a=t==="string"?Ir(o.vals):o.vals;let l=0;for(let c=0;c<o.shape[0];++c){const u=c*e[1]+r;for(let h=0;h<o.shape[1];++h)i[u+h]=a[l++]}r+=o.shape[1]})}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lk=dn((n,e)=>n===e?1:0),ck=Tn(gf,lk,null,"bool"),L8={kernelName:gf,backendName:"cpu",kernelFunc:ck};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uk=rr(n=>Math.exp(n)),hk=Co(Bu,uk,"float32"),F8={kernelName:Bu,backendName:"cpu",kernelFunc:hk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk=rr(n=>Math.expm1(n)),P8=Co(Vu,dk),O8={kernelName:Vu,backendName:"cpu",kernelFunc:P8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pk=rr(n=>Math.floor(n)),z8=Co(Uu,pk),B8={kernelName:Uu,backendName:"cpu",kernelFunc:z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk=dn((n,e)=>Math.floor(n/e)),V8=Tn(Wu,fk,null,"int32"),U8={kernelName:Wu,backendName:"cpu",kernelFunc:V8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mk(n,e,t,s,i,r,o,a,l){const c=ht([s,r],t);for(let u=0;u<s;u++){const h=[];let d=0;for(let p=0;p<i;p++){const f=n[u*i+p];d+=f*o[p],h.push(f)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<r;p++)c.values[u*r+p]=e.get(...e.indexToLoc(d*r+p))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gk(n,e,t){const s=ht(t,n.dtype);for(let i=0;i<s.size;++i){const o=s.indexToLoc(i).slice(),a=o[0],l=o[2],c=e.locToIndex([a,l]);o[2]=e.values[c];const u=n.locToIndex(o);0<=u&&u<n.values.length&&(s.values[i]=n.values[u])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xk=dn((n,e)=>n>e?1:0),W8=Tn(vf,xk,null,"bool"),G8={kernelName:vf,backendName:"cpu",kernelFunc:W8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yk=dn((n,e)=>n>=e?1:0),H8=Tn(Gu,yk,null,"bool"),j8={kernelName:Gu,backendName:"cpu",kernelFunc:H8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bk=dn((n,e)=>n<e?1:0),X8=Tn(Sf,bk,null,"bool"),q8={kernelName:Sf,backendName:"cpu",kernelFunc:X8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vk=dn((n,e)=>n<=e?1:0),Z8=Tn(_f,vk,null,"bool"),Y8={kernelName:_f,backendName:"cpu",kernelFunc:Z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wk(n,e,t){const s=(e-n)/(t-1),i=jn(t,"float32");i[0]=n;for(let r=1;r<i.length;r++)i[r]=i[r-1]+s;return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sk=rr(n=>Math.log(n)),J8=Co(Zu,Sk),K8={kernelName:Zu,backendName:"cpu",kernelFunc:J8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _k(n,e,t,s){const i=Hn(s,ce(t));for(let r=0;r<i.length;++r){const o=r*e;let a=n[o];for(let l=0;l<e;++l){const c=n[o+l];(Number.isNaN(c)||c>a)&&(a=c)}i[r]=a}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ck=dn((n,e)=>Math.max(n,e)),Q8=Tn(Ju,Ck),eq={kernelName:Ju,backendName:"cpu",kernelFunc:Q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tk=dn((n,e)=>Math.min(n,e)),tq=Tn(Ku,Tk),nq={kernelName:Ku,backendName:"cpu",kernelFunc:tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cv=dn((n,e)=>n*e),sq=av((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),Tm=Tn(eh,cv,sq),iq={kernelName:eh,backendName:"cpu",kernelFunc:Tm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(n,e,t){const s=xo(-1,t);return cv([],e,s,n,t)}function rq(n){const{inputs:e,backend:t}=n,{x:s}=e;Ue(s,"neg");const i=t.data.get(s.dataId).values,[r,o]=Ik(i,s.shape,s.dtype);return t.makeTensorInfo(o,s.dtype,r)}const oq={kernelName:Df,backendName:"cpu",kernelFunc:rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ek=dn((n,e)=>n!==e?1:0),aq=Tn(Lf,Ek,null,"bool"),lq={kernelName:Lf,backendName:"cpu",kernelFunc:aq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uv(n,e,t,s,i){const r=e.length,o=ce(e),a=je(e),l=je(i),c=Hn(t,ce(i));for(let u=0;u<o;++u){const h=Ql(u,r,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=ji(d,r,l);c[p]=n[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ys(n){const{inputs:e,attrs:t,backend:s}=n,{x:i}=e,{perm:r}=t;Ue(i,"transpose");const o=i.shape.length,a=new Array(o);for(let h=0;h<a.length;h++)a[h]=i.shape[r[h]];const l=s.data.get(i.dataId).values,c=uv(l,i.shape,i.dtype,r,a);return{dataId:s.write(c,a,i.dtype),shape:a,dtype:i.dtype}}const cq={kernelName:fl,backendName:"cpu",kernelFunc:ys};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mk(n,e,t,s){const[i,r]=Dn(n,s),o=Is(e,"int32"),a=jn(ce(i),o),l=ce(r);for(let c=0;c<a.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=t[u+d];a[c]=h}return{outVals:a,outShape:i,outDtype:o}}function uq(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:o}=s;Ue(i,"prod");const a=i.shape.length,l=dt(r,i.shape),c=nn(l,a);let u=l,h=i;const d=[];c!=null&&(h=ys({inputs:{x:i},backend:t,attrs:{perm:c}}),d.push(h),u=un(u.length,a));const p=t.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:y}=Mk(h.shape,h.dtype,p,u);let m=g;return o&&(m=xn(g,l)),d.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(m,y,f)}const hq={kernelName:Vf,backendName:"cpu",kernelFunc:uq};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dq(n,e,t){n.forEach((s,i)=>{if(s<0||s>=t){const r=Ql(i,e.length,je(e)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${t})`)}})}function pq(n,e){for(let t=0;t<n.length;++t){const s=n[t],i=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>i)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function fq(n,e,t,s){const i=[];let r=0;const o=e.length-1+t.length,a=new Array(o).fill(null).map(()=>[0]);pq(t,s);let l=1;for(let c=0;c<e.length-1;++c){l*=e[c];const u=e[c+1];for(let h=1;h<l+1;++h)a[c].push(h*u)}for(let c=0;c<n.length;++c){let u=n[c],h=n[c]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const g=a[f],y=g[g.length-1]-p[u];for(let m=u;m<h;++m)a[f].push(p[m+1]+y)}u=p[u],h=p[h]}h!==u&&(i.push([u,h]),r+=h-u)}return{outSplits:a,valueSlices:i,numValues:r}}function mq(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,i=an("int32",s);e.push(i),n[t].forEach((r,o)=>i[o]=r)}return e}function GS(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function gq(n,e,t,s,i,r){const o=GS(e,2)[1],a=GS(r,2)[1];let l=0;for(const c of t)for(let u=c[0];u<c[1];++u){for(let h=0;h<s;++h)i[l*a+h]=n[u*o+h];++l}}function xq(n,e,t,s,i){const r=e.slice();r[0]=i;const o=an(t,ce(r)),a=n.length,l=a===0?0:a/e[0];return gq(n,e,s,l,o,r),[o,r]}function kk(n,e,t,s,i,r,o,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(dq(r,o,l),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:u,valueSlices:h,numValues:d}=fq(r,o,n,c),p=mq(u),f=xq(t,s,i,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HS=2147483647;function Nk(n,e,t,s,i,r,o){if(e.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=i.length===0,c=o.length===0,u=[];a||u.push(e[0]),l||u.push(i[0]),c||u.push(o[0]);for(let y=1;y<u.length;++y)if(u[y]!==u[y-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=an("int32",h+1);d[0]=0;for(let y=0;y<h;++y){const m=a?n[0]:n[y],x=l?s[0]:s[y],v=c?r[0]:r[y];if(v===0)throw new Error("Requires delta != 0");let b;if(v>0&&x<m||v<0&&x>m)b=0;else if(b=Math.ceil(Math.abs((x-m)/v)),b>HS)throw new Error(`Requires ((limit - start) / delta) <= ${HS}`);d[y+1]=d[y]+b}const p=d[h],f=an(t,p);let g=0;for(let y=0;y<h;++y){const m=d[y+1]-d[y];let x=a?n[0]:n[y];const v=c?r[0]:r[y];for(let b=0;b<m;++b)f[g++]=x,x+=v}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ws=di;class wp{constructor(e,t,s,i,r,o,a,l,c,u){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=i,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=gE(u),this.raggedRank=xE(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Ws.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Ws.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Ws.VALUE_ROWIDS:return wp.getMaxWidthValueRowID(t);case Ws.ROW_SPLITS:return wp.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Ws[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let i=0;i<t-1;++i){const r=e[i+1]-e[i];r>s&&(s=r)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,i=e[0],r=0;for(let o=1;o<t;++o){const a=e[o];a!==i&&(i=a,r=Math.max(o-s,r),s=o)}return Math.max(t-s,r)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return XS(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;yE(s,t);const i=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=mE(this.raggedRank,i,t);o[0]<0&&(o[0]=e);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(e,t,s){const i=Math.min(e,s),r=[];let o=0;for(let a=0;a<i;++a,o+=t)r.push(o);for(let a=i;a<e;++a)r.push(-1);return A(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,s,i){const r=e.length,o=[];for(let a=0;a<r-1;++a){const l=e[a+1]-e[a];let c=Math.min(i,l),u=t[a];u===-1&&(c=0);for(let h=0;h<c;++h)o.push(u),u+=s;for(let h=0;h<l-c;++h)o.push(-1)}if(r>0&&o.length!==e[r-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,s,i){const r=e.length,o=[];if(r===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let c=t[l];o.push(c);for(let u=1;u<r;++u){const h=e[u];if(h===l)c>=0&&(++a,a<i?c+=s:c=-1);else{if(a=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);c=t[h]}o.push(c)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,s,i){const r=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case Ws.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,s,i);case Ws.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,s,i);default:throw new Error(`Unsupported partition type: ${Ws[o]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Ws.FIRST_DIM_SIZE:return e[0];case Ws.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ws.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ws[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),i=new Array(this.raggedRank+1);i[i.length-1]=1;for(let l=i.length-2;l>=0;--l)i[l]=i[l+1]*s[l+1];const r=XS(s,!1),o=an(this.valuesDType,ce(r));if(i[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,i[0],s[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,i[c],s[c]);this.setOutput(this.raggedRank,l,o,r)}return[r,o]}setOutput(e,t,s,i){if(s.length===0)return;const r=this.values,o=s;let a=i.slice();a=a.slice(e+1);const l=ce(a),c=t.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const f=this.defaultValueShape;te(()=>{const g=J(u,f);u=Gc(g,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=c;++f){let g=f<c?t[f]:-1;if(g===p){++p;continue}if(d<p){const y=r.subarray(h*l),m=o.subarray(d*l),x=(p-d)*l;jS(m,y,x)}if(f>=c){const y=s.length;g=Math.floor(y/l)}if(g>p)if(this.defaultValue.length===1)o.subarray(p*l,g*l).fill(this.defaultValue[0]),p=g;else for(;g>p;){const y=o.slice(p*l);jS(y,u,l),++p}g<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function jS(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function XS(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function Ak(n,e,t,s,i,r,o,a,l,c){return new wp(n,e,t,s,i,r,o,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rk(n,e,t,s){const i=n===e,r=n<e&&t<0,o=e<n&&t>1;if(i||r||o)return jn(0,s);const a=Math.abs(Math.ceil((e-n)/t)),l=jn(a,s);e<n&&t===1&&(t=-1),l[0]=n;for(let c=1;c<l.length;c++)l[c]=l[c-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $k=rr(n=>1/Math.sqrt(n)),yq=Co(oh,$k),bq={kernelName:oh,backendName:"cpu",kernelFunc:yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wo(n,e,t,s,i,r,o,a,l,c){const u=[s/i,i],h=n.values,d=e.values;if(s===0)return ht(t,e.dtype);const p=l instanceof On?l:ht(u,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<r;f++){const g=[];let y=0;for(let m=0;m<o;m++){const x=h[f*o+m];g.push(x),y+=x*a[m]}if(y<0||y>=s/i)throw new Error(`Invalid indices: ${g} does not index into ${t}`);for(let m=0;m<i;m++)c?p.values[y*i+m]+=d[f*i+m]:p.values[y*i+m]=e.rank===0?d[0]:d[f*i+m]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vq=rr(n=>1/(1+Math.exp(-n))),Dk=At(hh,n=>1/(1+Math.exp(-n))),wq={kernelName:hh,backendName:"cpu",kernelFunc:Dk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lk(n,e,t,s,i){const r=gb(s,e,t),o=ce(t),a=je(s);if(r){const h=xb(e,a);return i==="string"?n.slice(h,h+o):n.subarray(h,h+o)}const l=i==="string"?Ir(n):n,c=ht(s,i,l),u=ht(t,i);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),p=d.map((f,g)=>f+e[g]);u.set(c.get(...p),...d)}return i==="string"?OE(u.values):u.values}function da(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{begin:r,size:o}=s;Ue(i,"slice");const[a,l]=um(i,r,o);fb(i,a,l);const c=t.data.get(i.dataId).values,u=Lk(c,a,l,i.shape,i.dtype);return t.makeTensorInfo(l,i.dtype,u)}const Sq={kernelName:Xf,backendName:"cpu",kernelFunc:da};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fk(n,e,t,s,i,r,o){const a=e[0],l=r[0],c=new Array(l),u=new Array(a),h=e[1];if(l===0){if(a!==0)throw new Error(TE(a));const y=an(t,0),m=an(i,0);return[y,[0,h],m,c,u]}let d=!0,p=0;const f=new Array(l).fill(0);for(let y=0;y<a;++y){const m=n[y*h];if(m<0)throw new Error(IE(y,m));if(m>=l)throw new Error(EE(y,m,l));++f[m],d=d&&m>=p,p=m}let g=!0;for(let y=0;y<l;++y){const m=f[y]===0;c[y]=m,g=g&&!m,f[y]=Math.max(f[y],1),y>0&&(f[y]+=f[y-1])}if(g&&d){const y=n,m=s;for(let x=0;x<a;++x)u[x]=x;return[y,[a,h],m,c,u]}else{const y=f[l-1],m=an(t,y*h),x=an(i,y),v=new Array(l).fill(0);for(let b=0;b<a;++b){const w=n[b*h],S=v[w],_=(w===0?0:f[w-1])+S;v[w]++;for(let I=0;I<h;++I)m[_*h+I]=n[b*h+I];x[_]=s[b],u[b]=_}for(let b=0;b<l;++b)if(v[b]===0){const S=b===0?0:f[b-1];m[S*h+0]=b;for(let _=1;_<h;++_)m[S*h+_]=0;x[S]=o}return[m,[y,h],x,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pk(n,e,t,s,i){const r=ce(s),o=e[0],a=i.length,l=[];let c=1,u=-1;for(let y=0;y<a;++y){const m=i[y];if(m===-1){if(u!==-1)throw new Error(ME(u,y));u=y,l.push(1)}else{if(m<0)throw new Error(kE(y,m));c*=m,l.push(m)}}if(u!==-1){if(c<=0)throw new Error(NE());const y=Math.trunc(r/c);if(c*y!==r)throw new Error(AE(s,l));l[u]=y}if(ce(l)!==r)throw new Error(RE(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let y=d-2;y>=0;--y)p[y]=p[y+1]*s[y+1]}const f=[];if(a>0){f[a-1]=1;for(let y=a-2;y>=0;--y)f[y]=f[y+1]*l[y+1]}const g=an(t,o*a);for(let y=0;y<o;++y){let m=0;for(let x=0;x<d;++x)m+=n[y*d+x]*p[x];for(let x=0;x<a;++x)g[y*a+x]=Math.trunc(m/f[x]),m%=f[x]}return[g,[o,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(n,e,t,s,i,r=!1,o=0){const a=s.length,l=[e[0],n.length/e[0]],c=l[1],h=a>0?i[a-1]+1:0;if(h<0)throw new Error(Ax());const d=e.slice();d[0]=h;const p=d.reduce((v,b)=>v*b,1),f=an(t,p);if(a===0)return h>0&&f.fill(o),[f,d];if(h<=0)throw new Error(Ax());let g=0,y=1,m=0,x=i[g];for(;;){let v=0;if(y<a){if(v=i[y],x===v){++y;continue}if(x>=v)throw new Error($E())}if(x<0||x>=h)throw new Error(DE(x,h));x>m&&f.fill(o,m*c,x*c);for(let b=g;b<y;++b){const w=s[b];if(w<0||w>=l[0])throw new Error(LE(b,s[b],l[0]));for(let S=0;S<c;S++)f[x*c+S]+=n[w*c+S]}if(r)for(let b=0;b<c;b++)f[x*c+b]/=y-g;if(g=y,++y,m=x+1,x=v,y>a)break}return m<h&&f.fill(o,m*c,h*c),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q=rr(n=>Math.sqrt(n)),Cq=At(ph,n=>Math.sqrt(n)),Tq={kernelName:ph,backendName:"cpu",kernelFunc:Cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ok=dn((n,e)=>{const t=n-e;return t*t}),Iq=Tn(fh,Ok),Eq={kernelName:fh,backendName:"cpu",kernelFunc:Iq};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zk=rr((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:i}=e;return n.replace(new RegExp(t,s?"g":""),i)}),Mq=Co(Sy,zk),kq={kernelName:Sy,backendName:"cpu",kernelFunc:Mq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bk(n,e,t,s){const i=ht(n,e.dtype);for(let r=0;r<i.size;r++){const o=i.indexToLoc(r),a=new Array(o.length);for(let l=0;l<a.length;l++)a[l]=o[l]*t[l]+s[l];i.set(e.get(...a),...o)}return i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nq{constructor(e,t,s,i,r,o){this.separator=to(e),this.nGramWidths=t,this.leftPad=to(s),this.rightPad=to(i),this.padWidth=r,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,i,r,o){for(let a=0;a<r;++a){const l=this.getPadWidth(o),c=Math.max(0,l-a),u=Math.max(0,l-(r-(a+1))),h=o-(c+u),d=t+(c>0?0:a-l);let p=0;p+=c*this.leftPad.length;for(let x=0;x<h;++x)p+=e[d+x].length;p+=u*this.rightPad.length;const f=c+u+h-1;p+=f*this.separator.length,s[i+a]=new Uint8Array(p);const g=s[i+a];let y=0;const m=x=>x.forEach(v=>g[y++]=v);for(let x=0;x<c;++x)m(this.leftPad),m(this.separator);for(let x=0;x<h-1;++x)m(e[d+x]),m(this.separator);if(h>0){m(e[d+h-1]);for(let x=0;x<u;++x)m(this.separator),m(this.rightPad)}else{for(let x=0;x<u-1;++x)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const s=e.length,i=t.length;if(i>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<i;++c){let u=t[c]>=l;if(u=u&&t[c]<=s,!u)throw new Error(`Invalid split value ${t[c]}, must be in [${l}, ${s}]`);l=t[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const r=i-1,o=an("int32",i);if(s===0||i===0){const l=new Array(s);for(let c=0;c<=r;++c)o[c]=0;return[l,o]}o[0]=0;for(let l=1;l<=r;++l){const c=t[l]-t[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),o[l]=o[l-1]+u}const a=new Array(o[r]);for(let l=0;l<r;++l){const c=t[l];let u=o[l];if(this.nGramWidths.forEach(h=>{const d=t[l+1]-t[l],p=this.getNumNGrams(d,h);this.createNGrams(e,c,a,u,p,h),u+=p}),this.preserveShort&&u===o[l]){const h=t[l+1]-t[l];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,c,a,u,1,d)}}return[a,o]}}function Vk(n,e,t,s,i,r,o,a){return new Nq(t,s,i,r,o,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aq(n,e,t,s){if(!n.length)return;if(e.length===0){for(let r=0;r<n.length;++r)s.push(n.subarray(r,r+1));return}if(e.length===1){const r=e[0];let o=n.indexOf(r);for(;o!==-1;){const a=n.subarray(0,o);(!t||a.length!==0)&&s.push(a),n=n.subarray(o+1),o=n.indexOf(r)}(!t||n.length!==0)&&s.push(n);return}let i=0;for(let r=0;r<n.length+1;r++)if(r===n.length||e.indexOf(n[r])!==-1){const o=n.subarray(i,r);(!t||o.length!==0)&&s.push(o),i=r+1}}function Uk(n,e,t){const s=n.length,i=[];let r=0,o=0;const a=new Array(s);for(let d=0;d<s;++d){const p=i.length;Aq(n[d],e,t,i);const f=i.length-p;a[d]=f,r+=f,o=Math.max(o,f)}const l=an("int32",r*2),c=new Array(r),u=[s,o];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)l[h*2]=d,l[h*2+1]=p,c[h]=i[h],++h;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(n,e){const t=an("int32",n.length);for(let s=0;s<n.length;++s)t[s]=hV(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gk=dn((n,e)=>n-e),Rq=av((n,e,t,s)=>({real:n-t,imag:e-s})),dv=Tn(mh,Gk,Rq),$q={kernelName:mh,backendName:"cpu",kernelFunc:dv};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hk(n,e){const t=new Array(n.rank);for(let i=0;i<t.length;i++)t[i]=n.shape[i]*e[i];const s=ht(t,n.dtype);for(let i=0;i<s.values.length;++i){const r=s.indexToLoc(i),o=new Array(n.rank);for(let l=0;l<o.length;l++)o[l]=r[l]%n.shape[l];const a=n.locToIndex(o);s.values[i]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lc=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function jk(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,l=e-t+1,c=Math.log(a),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),d=Math.max(t,Math.floor(e-l*u/a+h)),p=Math.min(s,Math.floor(e+(a-l)*u/a+h));jk(n,e,d,p)}const i=n[e];let r=t,o=s;for(nl(n,t,e),Lc(n[s],i)>0&&nl(n,t,s);r<o;){for(nl(n,r,o),r++,o--;Lc(n[r],i)<0;)r=r+1;for(;Lc(n[o],i)>0;)o=o-1}Lc(n[t],i)===0?nl(n,t,o):(o=o+1,nl(n,o,s)),o<=e&&(t=o+1),e<=o&&(s=o-1)}}function Xk(n,e,t,s,i){const r=e[e.length-1],[o,a]=[n.length/r,r],l=Hn(t,o*s),c=Hn("int32",o*s);for(let h=0;h<o;h++){const d=h*a,p=n.subarray(d,d+a);let f=new Array(p.length);p.forEach((x,v)=>f[v]={value:x,index:v}),s<f.length&&(jk(f,s),f=f.slice(0,s)),i&&f.sort(Lc);const g=h*s,y=l.subarray(g,g+s),m=c.subarray(g,g+s);for(let x=0;x<s;x++)y[x]=f[x].value,m[x]=f[x].index}const u=e.slice();return u[u.length-1]=s,[ht(u,t,l),ht(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(n,e,t,s){const i=dt(e,t)[0],r=[1,t[0],1];for(let f=0;f<i;f++)r[0]*=t[f];r[1]=t[i];for(let f=i+1;f<t.length;f++)r[2]*=t[f];const o=new Map,a=new Int32Array(t[i]),l=new On(r,s,n),c=[],u=r[0]===1&&r[2]===1;for(let f=0;f<t[i];f++){let g;if(u)g=n[f].toString();else{const m=[];for(let x=0;x<r[0];x++)for(let v=0;v<r[2];v++)m.push(l.get(x,f,v));g=m.join(",")}const y=o.get(g);if(y!=null)a[f]=y;else{const m=o.size;o.set(g,m),a[f]=m,c.push(f)}}const h=r.slice();h[1]=o.size;const d=new On(h,s);c.forEach((f,g)=>{for(let y=0;y<r[0];y++)for(let m=0;m<r[2];m++)d.set(l.get(y,f,m),y,g,m)});const p=t.slice();return p[i]=h[1],{outputValues:d.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dq=Object.freeze(Object.defineProperty({__proto__:null,addImpl:sk,bincountImpl:lv,bincountReduceImpl:ik,bitwiseAndImpl:rk,castImpl:nk,ceilImpl:ok,concatImpl:ak,equalImpl:lk,expImpl:uk,expm1Impl:dk,floorDivImpl:fk,floorImpl:pk,gatherNdImpl:mk,gatherV2Impl:gk,greaterEqualImpl:yk,greaterImpl:xk,lessEqualImpl:vk,lessImpl:bk,linSpaceImpl:wk,logImpl:Sk,maxImpl:_k,maximumImpl:Ck,minimumImpl:Tk,multiplyImpl:cv,negImpl:Ik,notEqualImpl:Ek,prodImpl:Mk,raggedGatherImpl:kk,raggedRangeImpl:Nk,raggedTensorToTensorImpl:Ak,rangeImpl:Rk,rsqrtImpl:$k,scatterImpl:Wo,sigmoidImpl:vq,simpleAbsImpl:tk,sliceImpl:Lk,sparseFillEmptyRowsImpl:Fk,sparseReshapeImpl:Pk,sparseSegmentReductionImpl:hv,sqrtImpl:_q,squaredDifferenceImpl:Ok,staticRegexReplaceImpl:zk,stridedSliceImpl:Bk,stringNGramsImpl:Vk,stringSplitImpl:Uk,stringToHashBucketFastImpl:Wk,subImpl:Gk,tileImpl:Hk,topKImpl:Xk,transposeImpl:uv,uniqueImpl:qk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pI("cpu",()=>new Cm,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zk=At(Ou,n=>n>=0?n:Math.exp(n)-1),Lq={kernelName:Ou,backendName:"cpu",kernelFunc:Zk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yk(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{alpha:r}=s;Ue([i],"leakyRelu");const o=ce(i.shape),a=t.data.get(i.dataId).values,l=Hn("float32",o);for(let c=0;c<a.length;c++)l[c]=a[c]<0?r*a[c]:a[c];return t.makeTensorInfo(i.shape,"float32",l)}const Fq={kernelName:wf,backendName:"cpu",kernelFunc:Yk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pq=dn((n,e)=>n<0?e*n:n);function Jk(n){const{inputs:e,backend:t}=n,{x:s,alpha:i}=e;Ue([s,i],"prelu");const r=t.data.get(s.dataId).values,o=t.data.get(i.dataId).values,[a,l]=Pq(s.shape,i.shape,r,o,"float32");return t.makeTensorInfo(l,"float32",a)}const Oq={kernelName:Bf,backendName:"cpu",kernelFunc:Jk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kk=At(sh,n=>Math.max(0,n)),zq={kernelName:sh,backendName:"cpu",kernelFunc:Kk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qk=At(ih,n=>Math.min(Math.max(0,n),6)),Bq={kernelName:ih,backendName:"cpu",kernelFunc:Qk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sp(n,e,t,s,i){if(t==="linear")return sr({inputs:{x:e},backend:n});if(t==="relu")return Kk({inputs:{x:e},backend:n});if(t==="elu")return Zk({inputs:{x:e},backend:n});if(t==="relu6")return Qk({inputs:{x:e},backend:n});if(t==="prelu")return Jk({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return Yk({inputs:{x:e},backend:n,attrs:{alpha:i}});if(t==="sigmoid")return Dk({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{shape:r}=s,o=ce(i.shape),a=yT(r,o),l=ce(a);A(o===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),t.incRef(i.dataId);const c=t.data.get(i.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:i.dataId,shape:a,dtype:i.dtype}}const Vq={kernelName:Uf,backendName:"cpu",kernelFunc:Ut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n){const{inputs:e,backend:t,attrs:s}=n,{a:i,b:r}=e,{transposeA:o,transposeB:a}=s;Ue([i,r],"matMul");const l=i.shape.length,c=r.shape.length,u=o?i.shape[l-2]:i.shape[l-1],h=a?r.shape[c-1]:r.shape[c-2],d=o?i.shape[l-1]:i.shape[l-2],p=a?r.shape[c-2]:r.shape[c-1],f=i.shape.slice(0,-2),g=r.shape.slice(0,-2),y=ce(f),m=ce(g),v=lt(i.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,p]);A(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${i.shape} and ${r.shape} and transposeA=${o} and transposeB=${a} must match.`);const b=o?[y,u,d]:[y,d,u],w=a?[m,p,h]:[m,h,p],S=Ut({inputs:{x:i},backend:t,attrs:{shape:b}}),_=Ut({inputs:{x:r},backend:t,attrs:{shape:w}}),I=o?S.shape[1]:S.shape[2],N=o?S.shape[2]:S.shape[1],k=a?_.shape[1]:_.shape[2],M=Math.max(y,m),T=t.data.get(S.dataId).values,C=t.data.get(_.dataId).values,R=je(S.shape),L=je(_.shape),[$,O,G]=o?[R[0],1,R[1]]:[R[0],R[1],1],[Z,H,j]=a?[1,L[1],L[0]]:[L[1],1,L[0]],ne=N*k,ee=ht([M,N,k],S.dtype),oe=ee.values,ue=t.blockSize;for(let Q=0;Q<M;Q++){const _e=Q%y,ye=Q%m;for(let pe=0;pe<N;pe+=ue){const Ee=Math.min(pe+ue,N);for(let $e=0;$e<k;$e+=ue){const ie=Math.min($e+ue,k);for(let de=0;de<I;de+=ue){const ge=Math.min(de+ue,I);for(let ke=pe;ke<Ee;ke++)for(let be=$e;be<ie;be++){let ze=0;for(let Be=de;Be<ge;Be++){const nt=T[_e*$+ke*O+Be*G],it=C[Be*Z+be*H+ye*j];ze+=nt*it}oe[Q*ne+(ke*k+be)]+=ze}}}}}return t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(_),t.makeTensorInfo(v,ee.dtype,ee.values)}const Uq={kernelName:of,backendName:"cpu",kernelFunc:eN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wq(n){const{inputs:e,backend:t,attrs:s}=n,{a:i,b:r,bias:o,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;let d,p,f;const g=[];d=eN({inputs:{a:i,b:r},attrs:{transposeA:l,transposeB:c},backend:t}),o&&(p=$l({inputs:{a:d,b:o},backend:t}),g.push(d),d=p),u&&(f=Sp(t,d,u,a,h),g.push(d),d=f);for(const m of g)t.disposeIntermediateTensorInfo(m);return d}const Gq={kernelName:tp,backendName:"cpu",kernelFunc:Wq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hq=At(Tu,n=>Math.acos(n)),jq={kernelName:Tu,backendName:"cpu",kernelFunc:Hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq=At(Iu,n=>Math.acosh(n)),qq={kernelName:Iu,backendName:"cpu",kernelFunc:Xq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zq(n){const{inputs:e,backend:t}=n,s=e;Ue(e,"addN");const i=s.map(a=>t.data.get(a.dataId).values),r=ht(s[0].shape,s[0].dtype),o=r.values;for(let a=0;a<s.length;a++){const l=i[a];for(let c=0;c<o.length;c++)o[c]+=l[c]}return t.makeTensorInfo(r.shape,r.dtype,r.values)}const Yq={kernelName:V0,backendName:"cpu",kernelFunc:Zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jq(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:o}=s;Ue(i,"all");const a=dt(r,i.shape);let l=a;const c=nn(l,i.shape.length);let u=i;c!=null&&(u=ys({inputs:{x:i},backend:t,attrs:{perm:c}}),l=un(l.length,i.shape.length)),Vn("all",l,u.shape.length);const[h,d]=Dn(u.shape,l),p=ce(d),f=jn(ce(h),u.dtype),g=t.data.get(u.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let v=g[x];for(let b=0;b<p;++b){const w=g[x+b];v=v&&w}f[m]=v}c!=null&&t.disposeIntermediateTensorInfo(u);const y=t.makeTensorInfo(h,u.dtype,f);if(o){const m=xn(h,a),x=Ut({inputs:{x:y},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(y),x}return y}const Kq={kernelName:U0,backendName:"cpu",kernelFunc:Jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qq(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:o}=s;Ue(i,"any");const a=dt(r,i.shape);let l=a;const c=nn(l,i.shape.length);let u=i;c!=null&&(u=ys({inputs:{x:i},backend:t,attrs:{perm:c}}),l=un(l.length,i.shape.length)),Vn("any",l,u.shape.length);const[h,d]=Dn(u.shape,l),p=ce(d),f=jn(ce(h),u.dtype),g=t.data.get(u.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let v=g[x];for(let b=0;b<p;++b){const w=g[x+b];v=v||w}f[m]=v}c!=null&&t.disposeIntermediateTensorInfo(u);const y=t.makeTensorInfo(h,u.dtype,f);if(o){const m=xn(h,a),x=Ut({inputs:{x:y},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(y),x}return y}const eZ={kernelName:W0,backendName:"cpu",kernelFunc:Qq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r}=s;Ue(i,"argMax");let o=dt(r,i.shape);const a=nn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=ys({inputs:{x:i},backend:t,attrs:{perm:a}}),c.push(l),o=un(o.length,l.shape.length)),o=[o[0]],Vn("argMax",o,l.shape.length);const[u,h]=Dn(l.shape,o),d=ce(u),p=jn(d,"int32"),f=ce(h),g=t.data.get(l.dataId).values;for(let y=0;y<p.length;++y){const m=y*f;let x=g[m],v=0;for(let b=0;b<f;++b){const w=g[m+b];w>x&&(x=w,v=b)}p[y]=v}return c.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(u,"int32",p)}const nZ={kernelName:tf,backendName:"cpu",kernelFunc:tZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r}=s;Ue(i,"argMin");let o=dt(r,i.shape);const a=nn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=ys({inputs:{x:i},backend:t,attrs:{perm:a}}),c.push(l),o=un(o.length,l.shape.length)),o=[o[0]],Vn("argMin",o,l.shape.length);const[u,h]=Dn(l.shape,o),d=ce(u),p=jn(d,"int32"),f=ce(h),g=t.data.get(l.dataId).values;for(let y=0;y<p.length;++y){const m=y*f;let x=g[m],v=0;for(let b=0;b<f;++b){const w=g[m+b];w<x&&(x=w,v=b)}p[y]=v}return c.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(u,"int32",p)}const iZ={kernelName:nf,backendName:"cpu",kernelFunc:sZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rZ=At(Eu,n=>Math.asin(n)),oZ={kernelName:Eu,backendName:"cpu",kernelFunc:rZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aZ=At(Mu,n=>Math.asinh(n)),lZ={kernelName:Mu,backendName:"cpu",kernelFunc:aZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cZ=At(ku,n=>Math.atan(n)),uZ={kernelName:ku,backendName:"cpu",kernelFunc:cZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hZ=dn((n,e)=>Math.atan2(n,e)),dZ=Tn(Au,hZ),pZ={kernelName:Au,backendName:"cpu",kernelFunc:dZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fZ=At(Nu,n=>Math.atanh(n)),mZ={kernelName:Nu,backendName:"cpu",kernelFunc:fZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pv(n,e,t,s,i,r){const o=i.strideHeight,a=i.strideWidth,l=i.dilationHeight,c=i.dilationWidth,u=i.effectiveFilterHeight,h=i.effectiveFilterWidth,d=i.padInfo.top,p=i.padInfo.left,f=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=ht(i.outShape,t),y=g.values,m=i.outShape[1]*i.outShape[2]*i.outShape[3],x=i.outShape[2]*i.outShape[3],v=i.outShape[3];for(let b=0;b<i.batchSize;++b){const w=b*m,S=b*s[0];for(let _=0;_<i.inChannels;++_)for(let I=0;I<i.outHeight;++I){const N=I*o-d,k=Math.max(0,N),M=Math.min(i.inHeight,u+N),T=w+I*x;for(let C=0;C<i.outWidth;++C){const R=C*a-p,L=Math.max(0,R),$=Math.min(i.inWidth,h+R);let O=f,G=0,Z=0;for(let j=k;j<M;j+=l){const ne=S+j*s[1];for(let ee=L;ee<$;ee+=c){const oe=ne+ee*s[2],ue=n[oe+_];r==="max"&&ue>O?O=ue:r==="avg"&&(G+=ue,Z++)}if(isNaN(O))break}const H=T+C*v+_;y[H]=r==="avg"?G/Z:O}}}return g}function tN(n,e,t,s,i=!1,r=!1){const o=ht(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=ht(e,t,n);for(let y=0;y<s.batchSize;++y)for(let m=0;m<s.inChannels;++m)for(let x=0;x<s.outHeight;++x){const v=x*a-p;let b=v;for(;b<0;)b+=c;const w=Math.min(s.inHeight,h+v);for(let S=0;S<s.outWidth;++S){const _=S*l-f;let I=_;for(;I<0;)I+=u;const N=Math.min(s.inWidth,d+_);let k=Number.NEGATIVE_INFINITY,M=-1;for(let T=b;T<w;T+=c){const C=T-v;for(let R=I;R<N;R+=u){const L=R-_,$=g.get(y,T,R,m);$>k&&(k=$,i?M=r?((y*s.inHeight+T)*s.inWidth+R)*s.inChannels+m:(T*s.inWidth+R)*s.inChannels+m:M=C*d+L)}}o.set(M,y,x,S,m)}}return o}function nN(n,e,t,s,i,r){const o=i.strideDepth,a=i.strideHeight,l=i.strideWidth,c=i.dilationDepth,u=i.dilationHeight,h=i.dilationWidth,d=i.effectiveFilterDepth,p=i.effectiveFilterHeight,f=i.effectiveFilterWidth,g=i.padInfo.front,y=i.padInfo.top,m=i.padInfo.left,x=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=ht(i.outShape,t),b=v.values,w=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],S=i.outShape[2]*i.outShape[3]*i.outShape[4],_=i.outShape[3]*i.outShape[4],I=i.outShape[4];for(let N=0;N<i.batchSize;++N){const k=N*w,M=N*s[0];for(let T=0;T<i.inChannels;++T)for(let C=0;C<i.outDepth;++C){const R=C*o-g;let L=R;for(;L<0;)L+=c;const $=Math.min(i.inDepth,d+R),O=k+C*S;for(let G=0;G<i.outHeight;++G){const Z=G*a-y;let H=Z;for(;H<0;)H+=u;const j=Math.min(i.inHeight,p+Z),ne=O+G*_;for(let ee=0;ee<i.outWidth;++ee){const oe=ee*l-m;let ue=oe;for(;ue<0;)ue+=h;const Q=Math.min(i.inWidth,f+oe),_e=ne+ee*I;let ye=x,pe=0,Ee=0;for(let ie=L;ie<$;ie+=c){const de=M+ie*s[1];for(let ge=H;ge<j;ge+=u){const ke=de+ge*s[2];for(let be=ue;be<Q;be+=h){const ze=ke+be*s[3],Be=n[ze+T];if(r==="max"&&Be>ye?ye=Be:r==="avg"&&(pe+=Be,Ee++),isNaN(ye))break}if(isNaN(ye))break}if(isNaN(ye))break}const $e=_e+T;b[$e]=r==="avg"?pe/Math.max(Ee,1):ye}}}}return v}function gZ(n,e){const t=ht(e.outShape,"int32"),s=e.strideDepth,i=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let g=0;g<e.batchSize;++g)for(let y=0;y<e.inChannels;++y)for(let m=0;m<e.outDepth;++m){const x=m*s-d;let v=x;for(;v<0;)v+=o;const b=Math.min(e.inDepth,c+x);for(let w=0;w<e.outHeight;++w){const S=w*i-p;let _=S;for(;_<0;)_+=a;const I=Math.min(e.inHeight,u+S);for(let N=0;N<e.outWidth;++N){const k=N*r-f;let M=k;for(;M<0;)M+=l;const T=Math.min(e.inWidth,h+k);let C=Number.NEGATIVE_INFINITY,R=-1;for(let L=v;L<b;L+=o){const $=L-x;for(let O=_;O<I;O+=a){const G=O-S;for(let Z=M;Z<T;Z+=l){const H=Z-k,j=n.get(g,L,O,Z,y);j>=C&&(C=j,R=$*u*h+G*u+H)}}}t.set(R,g,m,w,N,y)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e;Ue(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=s,c=1;A(qn(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=ti(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Et(u.inShape,u.outShape))h=sr({inputs:{x:i},backend:t});else{const d=t.data.get(i.dataId).values,p=je(i.shape),f=pv(d,i.shape,i.dtype,p,u,"avg");h=t.makeTensorInfo(u.outShape,i.dtype,f.values)}return h}const yZ={kernelName:sf,backendName:"cpu",kernelFunc:xZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=s;Ue(i,"avgPool3d");const u=Ar(i.shape,r,o,1,a,l,c),h=t.data.get(i.dataId).values,d=nN(h,i.shape,i.dtype,je(i.shape),u,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const vZ={kernelName:rf,backendName:"cpu",kernelFunc:bZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wZ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=s;Ue([i,r],"avgPool3DGrad");const u=Ar(r.shape,o,a,1,l,c),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,g=u.filterHeight,y=u.filterWidth,m=u.dilationDepth,x=u.dilationHeight,v=u.dilationWidth,b=u.effectiveFilterDepth,w=u.effectiveFilterHeight,S=u.effectiveFilterWidth,_=b-1-u.padInfo.front,I=S-1-u.padInfo.left,N=w-1-u.padInfo.top,k=ht(r.shape,"float32"),M=1/(f*g*y),T=t.bufferSync(i);for(let C=0;C<u.batchSize;++C)for(let R=0;R<u.inChannels;++R)for(let L=0;L<u.inDepth;++L)for(let $=0;$<u.inHeight;++$)for(let O=0;O<u.inWidth;++O){const G=L-_,Z=$-N,H=O-I;let j=0;for(let ne=0;ne<b;ne+=m){const ee=(G+ne)/h;if(!(ee<0||ee>=u.outDepth||Math.floor(ee)!==ee))for(let oe=0;oe<w;oe+=x){const ue=(Z+oe)/d;if(!(ue<0||ue>=u.outHeight||Math.floor(ue)!==ue))for(let Q=0;Q<S;Q+=v){const _e=(H+Q)/p;if(_e<0||_e>=u.outWidth||Math.floor(_e)!==_e)continue;const ye=T.get(C,ee,ue,_e,R);j+=ye}}}k.set(j*M,C,L,$,O,R)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const SZ={kernelName:H0,backendName:"cpu",kernelFunc:wZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Z(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,o=r;Ue([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=ti(o.shape,a,l,1,c),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,g=u.dilationHeight,y=u.dilationWidth,m=u.effectiveFilterHeight,x=u.effectiveFilterWidth,v=x-1-u.padInfo.left,b=m-1-u.padInfo.top,w=ht(o.shape,"float32"),S=1/(p*f),_=t.data.get(i.dataId).values,I=ht(i.shape,"float32",_);for(let N=0;N<u.batchSize;++N)for(let k=0;k<u.inChannels;++k)for(let M=0;M<u.inHeight;++M)for(let T=0;T<u.inWidth;++T){const C=M-b,R=T-v;let L=0;for(let $=0;$<m;$+=g){const O=(C+$)/h;if(!(O<0||O>=u.outHeight||Math.floor(O)!==O))for(let G=0;G<x;G+=y){const Z=(R+G)/d;if(Z<0||Z>=u.outWidth||Math.floor(Z)!==Z)continue;const H=I.get(N,O,Z,k);L+=H}}w.set(L*S,N,M,T,k)}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const CZ={kernelName:G0,backendName:"cpu",kernelFunc:_Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,scale:r,offset:o,mean:a,variance:l}=e;A(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ue([i,a,l,r,o],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const u=t.data.get(i.dataId).values,h=t.data.get(a.dataId).values,d=t.data.get(l.dataId).values,p=r?t.data.get(r.dataId).values:new Float32Array([1]),f=o?t.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(u.length),y=f.length,m=p.length,x=d.length,v=h.length;let b=0,w=0,S=0,_=0;for(let I=0;I<u.length;++I)g[I]=f[b++]+(u[I]-h[w++])*p[S++]/Math.sqrt(d[_++]+c),b>=y&&(b=0),w>=v&&(w=0),S>=m&&(S=0),_>=x&&(_=0);return t.makeTensorInfo(i.shape,i.dtype,g)}const IZ={kernelName:yf,backendName:"cpu",kernelFunc:TZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockShape:r,crops:o}=s;Ue([i],"batchToSpaceND");const a=r.reduce((m,x)=>m*x),l=Th(i.shape,r,a),c=Ih(l.length,r.length),u=Eh(i.shape,r,a),h=Sb(o,r.length),d=_b(u,o,r.length),p=Ut({inputs:{x:i},backend:t,attrs:{shape:l}}),f=ys({inputs:{x:p},backend:t,attrs:{perm:c}}),g=Ut({inputs:{x:f},backend:t,attrs:{shape:u}}),y=da({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),y}const MZ={kernelName:af,backendName:"cpu",kernelFunc:EZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,weights:r}=e,{size:o}=s,a=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values,c=lv(a,l,r.dtype,r.shape,o);return t.makeTensorInfo([o],r.dtype,c)}const NZ={kernelName:j0,backendName:"cpu",kernelFunc:kZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AZ(n){const{inputs:e,backend:t}=n,{s0:s,s1:i}=e,r=t.data.get(s.dataId).values,o=t.data.get(i.dataId).values,a=lt(Array.from(r),Array.from(o));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const RZ={kernelName:CT,backendName:"cpu",kernelFunc:AZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Z=At(Du,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),DZ={kernelName:Du,backendName:"cpu",kernelFunc:$Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LZ=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(ce(e.shape)),i=t.data.get(e.dataId),r=i.complexTensorInfos.real,o=i.complexTensorInfos.imag,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],h=l[c];s[c]=Math.hypot(u,h)}return t.makeOutput(s,e.shape,"float32")},FZ={kernelName:lf,backendName:"cpu",kernelFunc:LZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dl(n){const{inputs:e,backend:t}=n,{input:s}=e,i=t.data.get(s.dataId).complexTensorInfos.imag,r=t.data.get(i.dataId).values;return t.makeTensorInfo(i.shape,i.dtype,r)}const PZ={kernelName:uy,backendName:"cpu",kernelFunc:Dl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ll(n){const{inputs:e,backend:t,attrs:s}=n,{axis:i}=s,r=dt(i,e[0].shape)[0],o=e.map(g=>g.shape);bb(o,r);let a=qi(e.map(g=>g.shape),r);if(ce(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(g=>ce(g.shape)>0);if(l.length===1)return sr({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const g=l.map(b=>ha({inputs:{input:b},backend:t})),y=l.map(b=>Dl({inputs:{input:b},backend:t})),m=Ll({inputs:g,backend:t,attrs:{axis:r}}),x=Ll({inputs:y,backend:t,attrs:{axis:r}}),v=_s({inputs:{real:m,imag:x},backend:t});return g.forEach(b=>t.disposeIntermediateTensorInfo(b)),y.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),v}const c=l.map(g=>{const m=[-1,ce(g.shape.slice(r))];return Ut({inputs:{x:g},backend:t,attrs:{shape:m}})}),u=c.map(g=>({vals:t.data.get(g.dataId).values,shape:g.shape}));a=qi(c.map(g=>g.shape),1);const h=c[0].shape[0]===1,d=ak(u,a,e[0].dtype,h),p=qi(l.map(g=>g.shape),r),f=t.makeTensorInfo(p,e[0].dtype,d);return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),f}const OZ={kernelName:cf,backendName:"cpu",kernelFunc:Ll};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s;Ue([i,r],"conv2d");const h=Rr(l),d=Bn(i.shape,r.shape,o,c,a,u,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,m=d.padInfo.left,x=d.padInfo.top,v=d.dataFormat==="channelsLast",b=new On(d.outShape,i.dtype),w=je(i.shape),S=je(r.shape),_=w[0],I=v?w[1]:w[2],N=v?w[2]:1,k=v?1:w[1],M=b.strides[0],T=v?b.strides[1]:b.strides[2],C=v?b.strides[2]:1,R=v?1:b.strides[1],L=t.data.get(i.dataId).values,$=t.data.get(r.dataId).values,O=b.values;for(let G=0;G<d.batchSize;++G){const Z=G*_,H=G*M;for(let j=0;j<d.outHeight;++j){const ne=H+j*T,ee=j*d.strideHeight-x;for(let oe=0;oe<p;++oe){const ue=ee+oe*g;if(ue<0||ue>=d.inHeight)continue;const Q=oe*S[0],_e=Z+ue*I;for(let ye=0;ye<d.outWidth;++ye){const pe=ne+ye*C,Ee=ye*d.strideWidth-m;for(let $e=0;$e<f;++$e){const ie=Ee+$e*y;if(ie<0||ie>=d.inWidth)continue;const de=Q+$e*S[1],ge=_e+ie*N;let ke=de;for(let be=0;be<d.inChannels;++be){const ze=L[ge+be*k];for(let Be=0;Be<d.outChannels;++Be)O[pe+Be*R]+=ze*$[ke+Be];ke+=d.outChannels}}}}}}return t.makeTensorInfo(b.shape,b.dtype,O)}const zZ={kernelName:uf,backendName:"cpu",kernelFunc:sN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;Ue([i,r],"conv2dBackpropFilter");const h=Rr(l),d=Bn(i.shape,u,o,1,a,c,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:y}=d,m=d.dataFormat==="channelsLast",x=new On(d.filterShape,"float32"),v=d.padInfo.left,b=d.padInfo.top,w=t.data.get(i.dataId).values,S=t.data.get(r.dataId).values,_=new On(i.shape,i.dtype,w),I=new On(r.shape,r.dtype,S);for(let N=0;N<g;++N){const k=Math.max(0,Math.ceil((b-N)/p)),M=Math.min(d.outHeight,(d.inHeight+b-N)/p);for(let T=0;T<y;++T){const C=Math.max(0,Math.ceil((v-T)/f)),R=Math.min(d.outWidth,(d.inWidth+v-T)/f);for(let L=0;L<d.inChannels;++L)for(let $=0;$<d.outChannels;++$){let O=0;for(let G=0;G<d.batchSize;++G)for(let Z=k;Z<M;++Z){const H=N+Z*p-b;for(let j=C;j<R;++j){const ne=T+j*f-v;m?O+=_.get(G,H,ne,L)*I.get(G,Z,j,$):O+=_.get(G,L,H,ne)*I.get(G,$,Z,j)}}x.set(O,N,T,L,$)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const VZ={kernelName:Z0,backendName:"cpu",kernelFunc:BZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UZ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s;Ue([i,r],"conv2dBackpropInput");const h=je(r.shape),d=je(i.shape);let p=Rr(c);const f=Bn(o,r.shape,a,1,l,u,!1,p),g=new On(f.inShape,"float32"),y=g.values,m=t.data.get(i.dataId).values,x=t.data.get(r.dataId).values,[v,b,w]=h,{batchSize:S,filterHeight:_,filterWidth:I,inChannels:N,inHeight:k,inWidth:M,outChannels:T,outHeight:C,outWidth:R,strideHeight:L,strideWidth:$}=f;p=f.dataFormat;const O=_-1-f.padInfo.top,G=I-1-f.padInfo.left,Z=p==="channelsLast",H=g.strides[0],j=Z?g.strides[1]:g.strides[2],ne=Z?g.strides[2]:1,ee=Z?1:g.strides[1],oe=d[0],ue=Z?d[1]:d[2],Q=Z?d[2]:1,_e=Z?1:d[1];for(let ye=0;ye<S;++ye)for(let pe=0;pe<N;++pe)for(let Ee=0;Ee<k;++Ee){const $e=Ee-O,ie=Math.max(0,Math.ceil($e/L)),de=Math.min(C,(_+$e)/L);for(let ge=0;ge<M;++ge){const ke=ge-G,be=Math.max(0,Math.ceil(ke/$)),ze=Math.min(R,(I+ke)/$);let Be=0;for(let it=ie;it<de;++it){const B=it*L-$e;for(let F=be;F<ze;++F){const fe=F*$-ke,we=oe*ye+ue*it+Q*F,Ne=v*(_-1-B)+b*(I-1-fe)+w*pe;for(let Se=0;Se<T;++Se){const qe=m[we+_e*Se],We=x[Ne+Se];Be+=qe*We}}}const nt=H*ye+j*Ee+ne*ge+ee*pe;y[nt]=Be}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const WZ={kernelName:hf,backendName:"cpu",kernelFunc:UZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:o,pad:a,dilations:l}=s;Ue([i,r],"conv3d");const c=yo(i.shape,r.shape,o,l,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:y}=c,m=y.front,x=y.left,v=y.top,b=new On(c.outShape,i.dtype),w=t.data.get(i.dataId).values,S=t.data.get(r.dataId).values,_=b.values,I=je(i.shape),N=je(r.shape);for(let k=0;k<c.batchSize;++k){const M=k*I[0],T=k*b.strides[0];for(let C=0;C<c.outDepth;++C){const R=T+C*b.strides[1],L=C*c.strideDepth-m;for(let $=0;$<u;++$){const O=L+$*p;if(O<0||O>=c.inDepth)continue;const G=$*N[0],Z=M+O*I[1];for(let H=0;H<c.outHeight;++H){const j=R+H*b.strides[2],ne=H*c.strideHeight-v;for(let ee=0;ee<h;++ee){const oe=ne+ee*f;if(oe<0||oe>=c.inHeight)continue;const ue=G+ee*N[1],Q=Z+oe*I[2];for(let _e=0;_e<c.outWidth;++_e){const ye=j+_e*c.outChannels,pe=_e*c.strideWidth-x;for(let Ee=0;Ee<d;++Ee){const $e=pe+Ee*g;if($e<0||$e>=c.inWidth)continue;const ie=ue+Ee*N[2],de=Q+$e*c.inChannels;let ge=ie;for(let ke=0;ke<c.inChannels;++ke){const be=w[de+ke];for(let ze=0;ze<c.outChannels;++ze)_[ye+ze]+=be*S[ge+ze];ge+=c.outChannels}}}}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const HZ={kernelName:df,backendName:"cpu",kernelFunc:GZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:o,pad:a,filterShape:l}=s;Ue([i,r],"conv3dBackpropFilterV2");const c=je(i.shape),u=je(r.shape),h=yo(i.shape,l,o,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,y=h.filterHeight,m=h.filterWidth,x=new On(h.filterShape,"float32"),v=x.values,[b,w,S,_]=x.strides,I=t.data.get(r.dataId).values,[N,k,M,T]=u,C=t.data.get(i.dataId).values,[R,L,$,O]=c,G=h.padInfo.front,Z=h.padInfo.left,H=h.padInfo.top;for(let j=0;j<g;++j){const ne=Math.max(0,Math.ceil((G-j)/d)),ee=Math.min(h.outDepth,(h.inDepth+G-j)/d),oe=j*b;for(let ue=0;ue<y;++ue){const Q=Math.max(0,Math.ceil((H-ue)/p)),_e=Math.min(h.outHeight,(h.inHeight+H-ue)/p),ye=ue*w+oe;for(let pe=0;pe<m;++pe){const Ee=Math.max(0,Math.ceil((Z-pe)/f)),$e=Math.min(h.outWidth,(h.inWidth+Z-pe)/f),ie=pe*S+ye;for(let de=0;de<h.inChannels;++de){const ge=de*_+ie;for(let ke=0;ke<h.outChannels;++ke){let be=0;for(let ze=0;ze<h.batchSize;++ze){const Be=ze*R,nt=ze*N;for(let it=ne;it<ee;++it){const F=(j+it*d-G)*L+Be,fe=it*k+nt;for(let we=Q;we<_e;++we){const Se=(ue+we*p-H)*$+F,qe=we*M+fe;for(let We=Ee;We<$e;++We){const z=(pe+We*f-Z)*O+Se,Ce=We*T+qe;be+=C[z+de]*I[Ce+ke]}}}}v[ge+ke]=be}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const XZ={kernelName:Y0,backendName:"cpu",kernelFunc:jZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qZ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{pad:o,strides:a,inputShape:l}=s;Ue([i],"conv3dBackpropInputV2");const c=je(i.shape),u=je(r.shape),h=yo(l,r.shape,a,1,o),d=new On(h.inShape,"float32"),p=d.values,[f,g,y,m]=d.strides,x=t.data.get(i.dataId).values,[v,b,w,S]=c,_=t.data.get(r.dataId).values,[I,N,k,M]=u,{batchSize:T,filterDepth:C,filterHeight:R,filterWidth:L,inChannels:$,inDepth:O,inHeight:G,inWidth:Z,outChannels:H,outDepth:j,outHeight:ne,outWidth:ee,strideDepth:oe,strideHeight:ue,strideWidth:Q}=h,_e=C-1-h.padInfo.front,ye=R-1-h.padInfo.top,pe=L-1-h.padInfo.left;for(let Ee=0;Ee<T;++Ee)for(let $e=0;$e<$;++$e)for(let ie=0;ie<O;++ie){const de=ie-_e,ge=Math.max(0,Math.ceil(de/oe)),ke=Math.min(j,(C+de)/oe);for(let be=0;be<G;++be){const ze=be-ye,Be=Math.max(0,Math.ceil(ze/ue)),nt=Math.min(ne,(R+ze)/ue);for(let it=0;it<Z;++it){const B=it-pe,F=Math.max(0,Math.ceil(B/Q)),fe=Math.min(ee,(L+B)/Q);let we=0;for(let Ne=ge;Ne<ke;++Ne){const Se=Ne*oe-de;for(let qe=Be;qe<nt;++qe){const We=qe*ue-ze;for(let W=F;W<fe;++W){const z=W*Q-B,Ce=v*Ee+b*Ne+w*qe+S*W,Te=I*(C-1-Se)+N*(R-1-We)+k*(L-1-z)+M*$e;for(let He=0;He<H;++He){const Ve=x[Ce+He],rt=_[Te+He];we+=Ve*rt}}}}p[f*Ee+g*ie+y*be+m*it+$e]=we}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const ZZ={kernelName:J0,backendName:"cpu",kernelFunc:qZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YZ=At(Lu,n=>Math.cos(n)),JZ={kernelName:Lu,backendName:"cpu",kernelFunc:YZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KZ=At(Fu,n=>Math.cosh(n)),QZ={kernelName:Fu,backendName:"cpu",kernelFunc:KZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eY(n){const{inputs:e,backend:t,attrs:s}=n,{image:i,boxes:r,boxInd:o}=e,{cropSize:a,method:l,extrapolationValue:c}=s,[u,h,d,p]=i.shape,f=r.shape[0],[g,y]=a,m=ht([f,g,y,p],"float32"),x=t.data.get(r.dataId).values,v=t.data.get(o.dataId).values,b=t.data.get(i.dataId).values,w=je(i.shape),S=je(m.shape);for(let _=0;_<f;_++){const I=_*4,N=x[I],k=x[I+1],M=x[I+2],T=x[I+3],C=v[_];if(C>=u)continue;const R=g>1?(M-N)*(h-1)/(g-1):0,L=y>1?(T-k)*(d-1)/(y-1):0;for(let $=0;$<g;$++){const O=g>1?N*(h-1)+$*R:.5*(N+M)*(h-1);if(O<0||O>h-1){for(let G=0;G<y;G++)for(let Z=0;Z<p;Z++){const H=Z+G*S[2]+$*S[1]+_*S[0];m.values[H]=c}continue}if(l==="bilinear"){const G=Math.floor(O),Z=Math.ceil(O),H=O-G;for(let j=0;j<y;j++){const ne=y>1?k*(d-1)+j*L:.5*(k+T)*(d-1);if(ne<0||ne>d-1){for(let Q=0;Q<p;Q++){const _e=Q+j*S[2]+$*S[1]+_*S[0];m.values[_e]=c}continue}const ee=Math.floor(ne),oe=Math.ceil(ne),ue=ne-ee;for(let Q=0;Q<p;Q++){let _e=Q+ee*w[2]+G*w[1]+C*w[0];const ye=b[_e];_e=Q+oe*w[2]+G*w[1]+C*w[0];const pe=b[_e];_e=Q+ee*w[2]+Z*w[1]+C*w[0];const Ee=b[_e];_e=Q+oe*w[2]+Z*w[1]+C*w[0];const $e=b[_e],ie=ye+(pe-ye)*ue,de=Ee+($e-Ee)*ue;_e=Q+j*S[2]+$*S[1]+_*S[0],m.values[_e]=ie+(de-ie)*H}}}else for(let G=0;G<y;++G){const Z=y>1?k*(d-1)+G*L:.5*(k+T)*(d-1);if(Z<0||Z>d-1){for(let ne=0;ne<p;ne++){const ee=ne+G*S[2]+$*S[1]+_*S[0];m.values[ee]=c}continue}const H=Math.round(Z),j=Math.round(O);for(let ne=0;ne<p;ne++){const ee=ne+H*w[2]+j*w[1]+C*w[0],oe=ne+G*S[2]+$*S[1]+_*S[0];m.values[oe]=b[ee]}}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const tY={kernelName:Q0,backendName:"cpu",kernelFunc:eY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nY(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,exclusive:o,reverse:a}=s;Ue(i,"cumprod");const l=nn([r],i.shape.length);let c=i;l!=null&&(c=ys({inputs:{x:i},backend:t,attrs:{perm:l}}));const u=un(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Is(c.dtype,"int32"),d=O0(ce(c.shape),h),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],g=a?(m,x)=>m+f-x-1:(m,x)=>m+x;for(let m=0;m<p.length;m+=f)for(let x=0;x<f;x++){const v=g(m,x);if(x===0)d[v]=o?1:p[v];else{const b=g(m,x-1);d[v]=o?p[b]*d[b]:p[v]*d[b]}}const y=t.makeTensorInfo(c.shape,h,d);if(l!=null){const m=bo(l),x=ys({inputs:{x:y},backend:t,attrs:{perm:m}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(c),x}return y}const sY={kernelName:K0,backendName:"cpu",kernelFunc:nY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,exclusive:o,reverse:a}=s;Ue(i,"cumsum");const l=nn([r],i.shape.length);let c=i;l!=null&&(c=ys({inputs:{x:i},backend:t,attrs:{perm:l}}));const u=un(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Is(c.dtype,"int32"),d=jn(ce(c.shape),h),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],g=a?(m,x)=>m+f-x-1:(m,x)=>m+x;for(let m=0;m<p.length;m+=f)for(let x=0;x<f;x++){const v=g(m,x);if(x===0)d[v]=o?0:p[v];else{const b=g(m,x-1);d[v]=o?p[b]+d[b]:p[v]+d[b]}}const y=t.makeTensorInfo(c.shape,h,d);if(l!=null){const m=bo(l),x=ys({inputs:{x:y},backend:t,attrs:{perm:m}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(c),x}return y}const rY={kernelName:pf,backendName:"cpu",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oY(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,weights:r}=e,{size:o,binaryOutput:a}=s;if(i.shape.length===1){const l=t.data.get(i.dataId).values,c=t.data.get(r.dataId).values,u=lv(l,c,r.dtype,r.shape,o);return t.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=t.bufferSync(i),c=t.bufferSync(r),u=ik(l,c,o,a);return t.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const aY={kernelName:ey,backendName:"cpu",kernelFunc:oY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lY(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockSize:r,dataFormat:o}=s;A(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=i.shape[0],l=i.shape[1],c=i.shape[2],u=i.shape[3],h=l*r,d=c*r,p=u/(r*r),f=t.data.get(i.dataId).values,g=new Float32Array(a*h*d*p);let y=0;for(let m=0;m<a;++m)for(let x=0;x<h;++x){const v=Math.floor(x/r),b=x%r;for(let w=0;w<d;++w){const S=Math.floor(w/r),_=w%r,I=(b*r+_)*p;for(let N=0;N<p;++N){const M=N+I+u*(S+c*(v+l*m));g[y++]=f[M]}}}return t.makeTensorInfo([a,h,d,p],i.dtype,g)}const cY={kernelName:ty,backendName:"cpu",kernelFunc:lY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=s;Ue([i,r],"depthwiseConv2DNative");const u=je(i.shape),h=je(r.shape);let d=l;d==null&&(d=[1,1]),A(qn(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const p=Bn(i.shape,r.shape,o,d,a,c,!0),{filterHeight:f,filterWidth:g,dilationHeight:y,dilationWidth:m,padInfo:x}=p,v=x.left,b=x.top,w=p.outChannels/p.inChannels,S=new On(p.outShape,i.dtype),_=t.data.get(i.dataId).values,I=t.data.get(r.dataId).values,N=S.values;for(let k=0;k<p.batchSize;++k){const M=k*u[0],T=k*S.strides[0];for(let C=0;C<p.outHeight;++C){const R=T+C*S.strides[1],L=C*p.strideHeight-b;for(let $=0;$<f;++$){const O=L+$*y;if(O<0||O>=p.inHeight)continue;const G=$*h[0],Z=M+O*u[1];for(let H=0;H<p.outWidth;++H){const j=R+H*S.strides[2],ne=H*p.strideWidth-v;for(let ee=0;ee<g;++ee){const oe=ne+ee*m;if(oe<0||oe>=p.inWidth)continue;const ue=G+ee*h[1],Q=Z+oe*p.inChannels;let _e=j,ye=ue;for(let pe=0;pe<p.inChannels;++pe){const Ee=_[Q+pe];for(let $e=0;$e<w;++$e)N[_e+$e]+=Ee*I[ye+$e];_e+=w,ye+=w}}}}}}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const uY={kernelName:ff,backendName:"cpu",kernelFunc:iN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hY(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s;Ue([i,r],"depthwiseConv2dNativeBackpropFilter");const h=Bn(i.shape,u,o,a,l,c,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,y=new On(h.filterShape,"float32"),m=h.padInfo.left,x=h.padInfo.top,v=h.outChannels/h.inChannels,b=t.data.get(i.dataId).values,w=new On(i.shape,i.dtype,b),S=t.data.get(r.dataId).values,_=new On(r.shape,r.dtype,S);for(let I=0;I<f;++I){const N=Math.max(0,Math.ceil((x-I)/d)),k=Math.min(h.outHeight,(h.inHeight+x-I)/d);for(let M=0;M<g;++M){const T=Math.max(0,Math.ceil((m-M)/p)),C=Math.min(h.outWidth,(h.inWidth+m-M)/p);for(let R=0;R<h.outChannels;++R){const L=Math.trunc(R/v),$=R%v;let O=0;for(let G=0;G<h.batchSize;++G)for(let Z=N;Z<k;++Z){const H=I+Z*d-x;for(let j=T;j<C;++j){const ne=M+j*p-m;O+=w.get(G,H,ne,L)*_.get(G,Z,j,R)}}y.set(O,I,M,L,$)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const dY={kernelName:ny,backendName:"cpu",kernelFunc:hY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s;Ue([i,r],"depthwiseConv2DNativeBackpropInput");const h=je(i.shape),d=je(r.shape),p=Bn(u,r.shape,o,a,l,c,!0),f=new On(p.inShape,"float32"),g=f.values,[y,m,x]=f.strides,v=t.data.get(i.dataId).values,[b,w,S]=h,_=t.data.get(r.dataId).values,[I,N,k]=d,{batchSize:M,filterHeight:T,filterWidth:C,inChannels:R,inHeight:L,inWidth:$,outChannels:O,outHeight:G,outWidth:Z,strideHeight:H,strideWidth:j}=p,ne=T-1-p.padInfo.top,ee=C-1-p.padInfo.left,oe=O/R;for(let ue=0;ue<M;++ue)for(let Q=0;Q<R;++Q)for(let _e=0;_e<L;++_e){const ye=_e-ne,pe=Math.max(0,Math.ceil(ye/H)),Ee=Math.min(G,(T+ye)/H);for(let $e=0;$e<$;++$e){const ie=$e-ee,de=Math.max(0,Math.ceil(ie/j)),ge=Math.min(Z,(C+ie)/j);let ke=0;for(let be=pe;be<Ee;++be){const ze=be*H-ye;for(let Be=de;Be<ge;++Be){const nt=Be*j-ie,it=b*ue+w*be+S*Be,B=I*(T-1-ze)+N*(C-1-nt)+k*Q;for(let F=0;F<oe;++F){const fe=Q*oe+F,we=v[it+fe],Ne=_[B+F];ke+=we*Ne}}}g[y*ue+m*_e+x*$e+Q]=ke}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const fY={kernelName:sy,backendName:"cpu",kernelFunc:pY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mY(n){const{inputs:e,backend:t}=n,{x:s}=e,i=ce(s.shape),r=t.data.get(s.dataId).values,o=ht([i,i],s.dtype),a=o.values;for(let c=0;c<r.length;c++)a[c*i+c]=r[c];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,o.dtype,o.values)}const gY={kernelName:TT,backendName:"cpu",kernelFunc:mY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xY={kernelName:mf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:i}=n,{strides:r,pad:o,dilations:a}=t,l=e,c=l.data.get(s.dataId).values,u=s.shape.length,h=l.data.get(i.dataId).values,d=i.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:y,outHeight:m,outWidth:x,padInfo:v,strideHeight:b,strideWidth:w,filterHeight:S,filterWidth:_,dilationHeight:I,dilationWidth:N,outShape:k}=vh(s.shape,i.shape,r,o,"NHWC",a),M=ce(k),T=k.length,C=an(s.dtype,M);for(let L=0;L<p;++L)for(let $=0;$<m;++$){const O=$*b-v.top;for(let G=0;G<x;++G){const Z=G*w-v.left;for(let H=0;H<y;++H){let j=Number.MIN_SAFE_INTEGER;for(let ee=0;ee<S;++ee){const oe=O+ee*I;if(oe>=0&&oe<f)for(let ue=0;ue<_;++ue){const Q=Z+ue*N;if(Q>=0&&Q<g){const _e=ji([L,oe,Q,H],u,je(s.shape)),ye=ji([ee,ue,H],d,je(i.shape)),pe=c[_e]+h[ye];pe>j&&(j=pe)}}}const ne=ji([L,$,G,H],T,je(k));C[ne]=j}}}return{dataId:l.write(ba(C,s.dtype),k,s.dtype),shape:k,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yY={kernelName:mx,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:i,dy:r}=n,{strides:o,pad:a,dilations:l}=t,c=e,u=mi(s.shape,c.data.get(s.dataId).values),h=mi(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:y,outWidth:m,padInfo:x,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:_,dilationWidth:I,outShape:N}=vh(s.shape,i.shape,o,a,"NHWC",l);A(r.rank===N.length,()=>`Error in ${mx}, dy must have the same rank as output ${N.length}, but got ${r.rank}`);const k=mi(N,c.data.get(r.dataId).values),M=wT(i.shape,i.dtype);for(let C=0;C<d;++C)for(let R=0;R<y;++R){const L=R*v-x.top;for(let $=0;$<m;++$){const O=$*b-x.left;for(let G=0;G<g;++G){let Z=Number.MIN_SAFE_INTEGER,H=0,j=0;for(let ne=0;ne<w;++ne){const ee=L+ne*_;if(ee>=0&&ee<p)for(let oe=0;oe<S;++oe){const ue=O+oe*I;if(ue>=0&&ue<f){const Q=u[C][ee][ue][G]+h[ne][oe][G];Q>Z&&(Z=Q,H=ne,j=oe)}}}M[H][j][G]+=k[C][R][$][G]}}}return{dataId:c.write(ba(M,s.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bY={kernelName:fx,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:i,dy:r}=n,{strides:o,pad:a,dilations:l}=t,c=e,u=mi(s.shape,c.data.get(s.dataId).values),h=mi(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:y,outWidth:m,padInfo:x,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:_,dilationWidth:I,outShape:N}=vh(s.shape,i.shape,o,a,"NHWC",l);A(r.rank===N.length,()=>`Error in ${fx}, dy must have the same rank as output ${N.length}, but got ${r.rank}`);const k=mi(N,c.data.get(r.dataId).values),M=wT(s.shape,s.dtype);for(let C=0;C<d;++C)for(let R=0;R<y;++R){const L=R*v-x.top;for(let $=0;$<m;++$){const O=$*b-x.left;for(let G=0;G<g;++G){let Z=Number.MIN_SAFE_INTEGER,H=L<0?0:L,j=O<0?0:O;for(let ne=0;ne<w;++ne){const ee=L+ne*_;if(ee>=0&&ee<p)for(let oe=0;oe<S;++oe){const ue=O+oe*I;if(ue>=0&&ue<f){const Q=u[C][ee][ue][G]+h[ne][oe][G];Q>Z&&(Z=Q,H=ee,j=ue)}}}M[C][H][j][G]+=k[C][R][$][G]}}}return{dataId:c.write(ba(M,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vY(n){const{inputs:e,backend:t,attrs:s}=n,{image:i}=e,{canvas:r,options:o}=s,{contextOptions:a,imageOptions:l}=o||{},c=(l==null?void 0:l.alpha)||1,u=(a==null?void 0:a.contextType)||"2d";if(u!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const h=r.getContext(u,(a==null?void 0:a.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${u} type.`);const[d,p]=i.shape.slice(0,2),f=i.shape.length===2?1:i.shape[2],g=t.data.get(i.dataId).values,y=i.dtype==="float32"?255:1,m=new Uint8ClampedArray(p*d*4);for(let v=0;v<d*p;++v){const b=[0,0,0,255*c];for(let S=0;S<f;S++){const _=g[v*f+S];if(i.dtype==="float32"){if(_<0||_>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${_}.`)}else if(i.dtype==="int32"&&(_<0||_>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${_}.`);f===1?(b[0]=_*y,b[1]=_*y,b[2]=_*y):b[S]=_*y}const w=v*4;m[w+0]=Math.round(b[0]),m[w+1]=Math.round(b[1]),m[w+2]=Math.round(b[2]),m[w+3]=Math.round(b[3])}r.width=p,r.height=d;const x=new ImageData(m,p,d);return h.putImageData(x,0,0),i}const wY={kernelName:KB,backendName:"cpu",kernelFunc:vY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fh(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:o}=s;Ue(i,"sum");let a;i.dtype==="bool"?a=po({inputs:{x:i},backend:t,attrs:{dtype:"int32"}}):a=sr({inputs:{x:i},backend:t});const l=a.shape.length,c=dt(r,a.shape),u=nn(c,l);let h=c,d=a;u!=null&&(d=ys({inputs:{x:a},backend:t,attrs:{perm:u}}),h=un(h.length,l)),Vn("sum",h,d.shape.length);const[p,f]=Dn(d.shape,h),g=Is(d.dtype,"int32");let y=vp(t,p,g);const m=ce(f),x=t.data.get(y.dataId).values,v=t.data.get(d.dataId).values;for(let b=0;b<x.length;++b){const w=b*m;let S=0;for(let _=0;_<m;++_)S+=v[w+_];x[b]=S}if(o){const b=xn(y.shape,c),w=y;y=Ut({inputs:{x:y},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(w)}return t.disposeIntermediateTensorInfo(a),u!=null&&t.disposeIntermediateTensorInfo(d),y}const SY={kernelName:qf,backendName:"cpu",kernelFunc:Fh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Y(n){const{inputs:e,backend:t,attrs:s}=n,{equation:i}=s,r=e,{allDims:o,summedDims:a,idDims:l}=Ab(i,r.length);$b(o.length,l,r);const{path:c,steps:u}=Db(a,l),h=u.length;let d=null,p=o.length;const f=[];for(let g=0;g<h;++g){for(const y of u[g]){const{permutationIndices:m,expandDims:x}=Rb(p,l[y]);let v;Lb(m)?v=r[y]:(v=ys({inputs:{x:r[y]},backend:t,attrs:{perm:m}}),f.push(v));const b=v.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);Et(v.shape,b)||(v=Ut({inputs:{x:v},backend:t,attrs:{shape:b}}),f.push(v)),d===null?d=v:(d=Tm({inputs:{a:v,b:d},backend:t}),f.push(d))}g<h-1&&(c[g]>=0&&(d=Fh({inputs:{x:d},backend:t,attrs:{axis:c[g]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&t.disposeIntermediateTensorInfo(g);return d}const CY={kernelName:iy,backendName:"cpu",kernelFunc:_Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TY(n){const{inputs:e,backend:t}=n,{dy:s,y:i}=e;Ue([s,i],"eluGrad");const r=new Float32Array(ce(i.shape)),o=t.data.get(i.dataId).values,a=t.data.get(s.dataId).values;for(let l=0;l<o.length;++l){const c=o[l];c>=0?r[l]=a[l]:r[l]=a[l]*(c+1)}return t.makeTensorInfo(i.shape,"float32",r)}const IY={kernelName:ry,backendName:"cpu",kernelFunc:TY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EY=Cb,MY=Tb,kY=Ib,NY=Eb,AY=Mb,RY=kb,$Y=At(zu,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+EY*t);return e*(1-((((RY*s+AY)*s+NY)*s+kY)*s+MY)*s*Math.exp(-t*t))}),DY={kernelName:zu,backendName:"cpu",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _p(n){const{inputs:e,backend:t,attrs:s}=n,{input:i}=e,{dim:r}=s,o=i.shape.length,a=i.shape.slice();let l=r;return r<0&&(A(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),a.splice(l,0,1),Ut({inputs:{x:i},backend:t,attrs:{shape:a}})}const LY={kernelName:xf,backendName:"cpu",kernelFunc:_p};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FY=dn((n,e)=>n/e),fv=Tn(Pu,FY),Ux={kernelName:Pu,backendName:"cpu",kernelFunc:fv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rN(n,e,t){const s=n.shape,i=s[0],r=s[1],o=t.data.get(n.dataId),a=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[i,r],u=ce(c),h=Hn("float32",u),d=Hn("float32",u);for(let y=0;y<i;y++){const m=da({inputs:{x:a},backend:t,attrs:{begin:[y,0],size:[1,r]}}),x=da({inputs:{x:l},backend:t,attrs:{begin:[y,0],size:[1,r]}}),v=_s({inputs:{real:m,imag:x},backend:t}),{real:b,imag:w}=PY(v,e,t),S=Tr(b,w);for(let _=0;_<r;_++){const I=Nb(S,_);h[y*r+_]=I.real,d[y*r+_]=I.imag}t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(v)}const p=t.makeTensorInfo(c,"float32",h),f=t.makeTensorInfo(c,"float32",d),g=_s({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),g}function PY(n,e,t){const s=ce(n.shape),i=t.data.get(n.dataId),r=t.data.get(i.complexTensorInfos.real.dataId).values,o=t.data.get(i.complexTensorInfos.imag.dataId).values;if(OY(s)){const a=Wx(r,o,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const c=t.makeTensorInfo(l,"float32",a.real),u=t.makeTensorInfo(l,"float32",a.imag),h=t.makeTensorInfo([],"float32",xo(s,"float32")),d=sr({inputs:{x:h},backend:t}),p=Ux.kernelFunc({inputs:{a:c,b:h},backend:t}),f=Ux.kernelFunc({inputs:{a:u,b:d},backend:t}),g=t.data.get(p.dataId).values,y=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:g,imag:y}}return a}else{const a=Tr(r,o),l=zY(a,s,e);return bE(l)}}function OY(n){return(n&n-1)===0}function Wx(n,e,t,s,i){if(t===1)return{real:n,imag:e};const r=Tr(n,e),o=t/2,a=vE(r),l=a.real,c=a.imag,u=[l.length],h=i.makeTensorInfo(u,"float32",l),d=i.makeTensorInfo(u,"float32",c),p=_s({inputs:{real:h,imag:d},backend:i}),f=wE(r),g=f.real,y=f.imag,m=[g.length],x=i.makeTensorInfo(m,"float32",g),v=i.makeTensorInfo(m,"float32",y),b=_s({inputs:{real:x,imag:v},backend:i}),w=Wx(l,c,o,s,i),S=w.real,_=w.imag,I=[S.length],N=i.makeTensorInfo(I,"float32",S),k=i.makeTensorInfo(I,"float32",_),M=_s({inputs:{real:N,imag:k},backend:i}),T=Wx(g,y,o,s,i),C=T.real,R=T.imag,L=[C.length],$=i.makeTensorInfo(L,"float32",C),O=i.makeTensorInfo(L,"float32",R),G=_s({inputs:{real:$,imag:O},backend:i}),Z=_E(t,s),H=[Z.real.length],j=i.makeTensorInfo(H,"float32",Z.real),ne=i.makeTensorInfo(H,"float32",Z.imag),ee=_s({inputs:{real:j,imag:ne},backend:i}),oe=Tm({inputs:{a:ee,b:G},backend:i}),ue=$l({inputs:{a:M,b:oe},backend:i}),Q=dv({inputs:{a:M,b:oe},backend:i}),_e=ha({inputs:{input:ue},backend:i}),ye=ha({inputs:{input:Q},backend:i}),pe=Dl({inputs:{input:ue},backend:i}),Ee=Dl({inputs:{input:Q},backend:i}),$e=Ll({inputs:[_e,ye],backend:i,attrs:{axis:0}}),ie=Ll({inputs:[pe,Ee],backend:i,attrs:{axis:0}}),de=i.data.get($e.dataId).values,ge=i.data.get(ie.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(N),i.disposeIntermediateTensorInfo(k),i.disposeIntermediateTensorInfo(M),i.disposeIntermediateTensorInfo($),i.disposeIntermediateTensorInfo(O),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(j),i.disposeIntermediateTensorInfo(ne),i.disposeIntermediateTensorInfo(ee),i.disposeIntermediateTensorInfo(oe),i.disposeIntermediateTensorInfo(ue),i.disposeIntermediateTensorInfo(Q),i.disposeIntermediateTensorInfo(_e),i.disposeIntermediateTensorInfo(pe),i.disposeIntermediateTensorInfo(ye),i.disposeIntermediateTensorInfo(Ee),i.disposeIntermediateTensorInfo($e),i.disposeIntermediateTensorInfo(ie),{real:de,imag:ge}}function zY(n,e,t){const s=new Float32Array(e*2);for(let i=0;i<e;i++){let r=0,o=0;for(let a=0;a<e;a++){const l=CE(i*a,e,t),c=Nb(n,a);r+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}t&&(r/=e,o/=e),SE(s,r,o,i)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BY(n){const{inputs:e,backend:t}=n,{input:s}=e,i=ce(s.shape),r=s.shape[s.shape.length-1],o=i/r,a=Ut({inputs:{x:s},backend:t,attrs:{shape:[o,r]}}),l=rN(a,!1,t),c=Ut({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const VY={kernelName:oy,backendName:"cpu",kernelFunc:BY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mv(n){const{backend:e,attrs:t}=n,{shape:s,value:i,dtype:r}=t,o=r||Kl(i),a=an(o,ce(s));return WY(a,i,o),e.makeTensorInfo(s,o,a)}const UY={kernelName:ay,backendName:"cpu",kernelFunc:mv};function WY(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GY={kernelName:ly,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,i=t,r=Hn(s.dtype,ce(s.shape)),[o,a,l,c]=s.shape,u=i.data.get(s.dataId).values;for(let d=0;d<o;d++){const p=d*l*a*c;for(let f=0;f<a;f++){const g=f*(l*c);for(let y=0;y<l;y++){const m=y*c;for(let x=0;x<c;x++){const v=Math.round(l-y-1),b=p+g+m+x;let w=u[b];if(v>=0&&v<l){const S=v*c,_=p+g+S+x;w=u[_]}r[b]=w}}}}return{dataId:i.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HY(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r,bias:o,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=sN({inputs:{x:i,filter:r},backend:t,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const y=g;if(u==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const m=Ut({inputs:{x:o},backend:t,attrs:{shape:[o.shape[0],1,1]}});g=$l({inputs:{a:g,b:m},backend:t}),t.disposeIntermediateTensorInfo(m)}else g=$l({inputs:{a:g,b:o},backend:t});t.disposeIntermediateTensorInfo(y)}if(p){const y=g;if(u==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const m=Ut({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});g=Sp(t,g,p,m,f),t.disposeIntermediateTensorInfo(m)}else g=Sp(t,g,p,a,f);t.disposeIntermediateTensorInfo(y)}return g}const jY={kernelName:np,backendName:"cpu",kernelFunc:HY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XY(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r,bias:o,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=iN({inputs:{x:i,filter:r},backend:t,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const y=g;g=$l({inputs:{a:g,b:o},backend:t}),t.disposeIntermediateTensorInfo(y)}if(p){const y=g;g=Sp(t,g,p,a,f),t.disposeIntermediateTensorInfo(y)}return g}const qY={kernelName:GT,backendName:"cpu",kernelFunc:XY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZY(n){const{inputs:e,backend:t}=n,{params:s,indices:i}=e,r=ce(s.shape),o=i.shape,a=o[o.length-1],[l,c,u,h]=pb(s,i);if(c===0)return t.makeTensorInfo(l,s.dtype,[]);const d=t.data.get(i.dataId).values,p=t.bufferSync(s),f=mk(d,p,s.dtype,c,a,u,h,s.shape,r);return t.makeTensorInfo(l,s.dtype,f.values)}const YY={kernelName:IT,backendName:"cpu",kernelFunc:ZY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JY(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,indices:r}=e,{axis:o,batchDims:a}=s;Ue([i,r],"gatherV2");const l=dt(o,i.shape)[0],c=t.data.get(r.dataId).values,u=i.shape[l];for(let b=0;b<c.length;++b){const w=c[b];A(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=ce(r.shape),p=Pb(i,r,l,h),f=Ut({inputs:{x:i},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=Ut({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),y=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],m=t.bufferSync(g),x=t.bufferSync(f),v=gk(x,m,y);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),t.makeTensorInfo(p.outputShape,v.dtype,v.values)}const KY={kernelName:bf,backendName:"cpu",kernelFunc:JY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QY(n){const{inputs:e,backend:t}=n,{input:s}=e,i=ce(s.shape),r=s.shape[s.shape.length-1],o=i/r,a=Ut({inputs:{x:s},backend:t,attrs:{shape:[o,r]}}),l=rN(a,!0,t),c=Ut({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const e9={kernelName:cy,backendName:"cpu",kernelFunc:QY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t9=At(ju,n=>Number.isFinite(n)?1:0,"bool"),n9={kernelName:ju,backendName:"cpu",kernelFunc:t9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s9=At(Xu,n=>Math.abs(n)===1/0?1:0,"bool"),i9={kernelName:Xu,backendName:"cpu",kernelFunc:s9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r9=At(qu,n=>Number.isNaN(n)?1:0,"bool"),o9={kernelName:qu,backendName:"cpu",kernelFunc:r9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a9(n){const{backend:e,attrs:t}=n,{start:s,stop:i,num:r}=t,o=wk(s,i,r);return e.makeTensorInfo([o.length],"float32",o)}const l9={kernelName:ET,backendName:"cpu",kernelFunc:a9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c9=At(Yu,n=>Math.log1p(n)),u9={kernelName:Yu,backendName:"cpu",kernelFunc:c9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h9=dn((n,e)=>n&&e),d9=Tn(Cf,h9,null,"bool"),p9={kernelName:Cf,backendName:"cpu",kernelFunc:d9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f9=At(Tf,n=>n?0:1,"bool"),m9={kernelName:Tf,backendName:"cpu",kernelFunc:f9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g9=dn((n,e)=>n||e),x9=Tn(If,g9,null,"bool"),y9={kernelName:If,backendName:"cpu",kernelFunc:x9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{depthRadius:r,bias:o,alpha:a,beta:l}=s;Ue(i,"LRN");const c=i.shape[3],u=c-1,h=t.data.get(i.dataId).values,d=ce(i.shape),p=new Float32Array(d);function f(g){const y=g%c;let m=g-y+Math.max(0,y-r);const x=g-y+Math.min(y+r,u);let v=0;for(;m<=x;m++){const b=h[m];v+=b*b}return v}for(let g=0;g<d;g++){const y=f(g),m=h[g]*Math.pow(o+a*y,-l);p[g]=m}return t.makeTensorInfo(i.shape,i.dtype,p)}const v9={kernelName:Ef,backendName:"cpu",kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w9(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,y:r,dy:o}=e,{depthRadius:a,bias:l,alpha:c,beta:u}=s;Ue(o,"LRNGrad");const h=ce(o.shape),d=o.shape[3],p=t.data.get(o.dataId).values,f=t.data.get(i.dataId).values,g=t.data.get(r.dataId).values,y=new Float32Array(h),m=h;for(let x=0;x<m;x++){const v=x%d,b=x-v+Math.max(0,v-a),w=x-v+Math.min(d,v+a+1);let S=0;for(let _=b;_<w;_++)S+=Math.pow(f[_],2);S=c*S+l;for(let _=b;_<w;_++){let I=-2*c*u*f[_]*g[x]/S;x===_&&(I+=Math.pow(S,-u)),I*=p[x],y[_]+=I}}return t.makeTensorInfo(o.shape,i.dtype,y)}const S9={kernelName:hy,backendName:"cpu",kernelFunc:w9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oN(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{reductionIndices:r,keepDims:o}=s,a=t;let l=i.shape;const c=l.length,u=dt(r,l);let h=u;const d=nn(h,c);let p=a.data.get(i.dataId).values;if(d!=null){const b=new Array(c);for(let w=0;w<b.length;w++)b[w]=l[d[w]];p=uv(p,l,i.dtype,d,b),h=un(h.length,c),l=b}Ue(i,"max"),Vn("max",h,c);const[f,g]=Dn(l,h),y=ce(g),m=_k(p,y,f,i.dtype),x=a.write(m,f,i.dtype);let v=f;return o&&(v=xn(f,u)),{dataId:x,shape:v,dtype:i.dtype}}const _9={kernelName:Mf,backendName:"cpu",kernelFunc:oN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C9(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e;Ue(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=s,c=1;A(qn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=ti(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Et(u.inShape,u.outShape))h=sr({inputs:{x:i},backend:t});else{const d=t.data.get(i.dataId).values,p=je(i.shape),f=pv(d,i.shape,i.dtype,p,u,"max");h=t.makeTensorInfo(u.outShape,i.dtype,f.values)}return h}const T9={kernelName:kf,backendName:"cpu",kernelFunc:C9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I9(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=s;Ue(i,"maxPool3d");const u=Ar(i.shape,r,o,1,a,l,c),h=t.data.get(i.dataId).values,d=nN(h,i.shape,i.dtype,je(i.shape),u,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const E9={kernelName:Nf,backendName:"cpu",kernelFunc:I9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M9(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=s;Ue([i,r],"maxPool3DGrad");const u=Ar(r.shape,o,a,1,l,c),h=t.bufferSync(r),d=gZ(h,u),p=u.strideDepth,f=u.strideHeight,g=u.strideWidth,y=u.dilationDepth,m=u.dilationHeight,x=u.dilationWidth,v=u.effectiveFilterDepth,b=u.effectiveFilterHeight,w=u.effectiveFilterWidth,S=v-1-u.padInfo.front,_=w-1-u.padInfo.left,I=b-1-u.padInfo.top,N=ht(r.shape,"float32"),k=t.bufferSync(i);for(let M=0;M<u.batchSize;++M)for(let T=0;T<u.inChannels;++T)for(let C=0;C<u.inDepth;++C)for(let R=0;R<u.inHeight;++R)for(let L=0;L<u.inWidth;++L){const $=C-S,O=R-I,G=L-_;let Z=0;for(let H=0;H<v;H+=y){const j=($+H)/p;if(!(j<0||j>=u.outDepth||Math.floor(j)!==j))for(let ne=0;ne<b;ne+=m){const ee=(O+ne)/f;if(!(ee<0||ee>=u.outHeight||Math.floor(ee)!==ee))for(let oe=0;oe<w;oe+=x){const ue=(G+oe)/g;if(ue<0||ue>=u.outWidth||Math.floor(ue)!==ue)continue;const Q=v*b*w-1-d.get(M,j,ee,ue,T),_e=H*b*w+ne*w+oe,ye=Q===_e?1:0;if(ye===0)continue;const pe=k.get(M,j,ee,ue,T);Z+=pe*ye}}}N.set(Z,M,C,R,L,T)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const k9={kernelName:py,backendName:"cpu",kernelFunc:M9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r,output:o}=e,a=r;Ue([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=ti(a.shape,l,c,1,u,h),p=t.data.get(a.dataId).values,f=ht(d.outShape,a.dtype,tN(p,a.shape,a.dtype,d).values),g=d.strideHeight,y=d.strideWidth,m=d.dilationHeight,x=d.dilationWidth,v=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,S=v-1-d.padInfo.top,_=ht(a.shape,"float32"),I=t.data.get(i.dataId).values,N=ht(i.shape,"float32",I);for(let k=0;k<d.batchSize;++k)for(let M=0;M<d.inChannels;++M)for(let T=0;T<d.inHeight;++T)for(let C=0;C<d.inWidth;++C){const R=T-S,L=C-w;let $=0;for(let O=0;O<v;O+=m){const G=(R+O)/g;if(!(G<0||G>=d.outHeight||Math.floor(G)!==G))for(let Z=0;Z<b;Z+=x){const H=(L+Z)/y;if(H<0||H>=d.outWidth||Math.floor(H)!==H)continue;const j=v*b-1-f.get(k,G,H,M),ne=O*b+Z,ee=j===ne?1:0;if(ee===0)continue;const oe=N.get(k,G,H,M);$+=oe*ee}}_.set($,k,T,C,M)}return t.makeTensorInfo(_.shape,_.dtype,_.values)}const A9={kernelName:dy,backendName:"cpu",kernelFunc:N9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R9(n,e,t,s,i){const r=je(e),o=pv(n,e,t,r,i,"max"),a=tN(n,e,t,i,!0,s);return[o.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $9={kernelName:MT,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=e,l=t;Ue(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,u=ti(s.shape,i,r,[1,1],o),[h,d]=R9(c,s.shape,s.dtype,a,u),p=l.write(h,u.outShape,s.dtype),f=l.write(d,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D9(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:o}=s,a=dt(r,i.shape),c=Dn(i.shape,a)[1],u=ce(c),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const p=po({inputs:{x:i},backend:t,attrs:{dtype:"float32"}});h.push(p);const f=fv({inputs:{a:p,b:d},backend:t});h.push(f);const g=Fh({inputs:{x:f},backend:t,attrs:{axis:r,keepDims:o}});return h.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}const L9={kernelName:Af,backendName:"cpu",kernelFunc:D9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F9(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:o}=s;Ue(i,"min");const a=dt(r,i.shape);let l=a;const c=nn(l,i.shape.length);let u=i;c!=null&&(u=ys({inputs:{x:i},backend:t,attrs:{perm:c}}),l=un(l.length,i.shape.length)),Vn("min",l,u.shape.length);const[h,d]=Dn(u.shape,l),p=ce(d),f=jn(ce(h),u.dtype),g=t.data.get(u.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let v=g[x];for(let b=0;b<p;++b){const w=g[x+b];(Number.isNaN(w)||w<v)&&(v=w)}f[m]=v}c!=null&&t.disposeIntermediateTensorInfo(u);const y=t.makeTensorInfo(h,u.dtype,f);if(o){const m=xn(h,a),x=Ut({inputs:{x:y},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(y),x}return y}const P9={kernelName:Rf,backendName:"cpu",kernelFunc:F9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O9(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{paddings:r,mode:o}=s;Ue(i,"mirrorPad");const a=r.map((v,b)=>v[0]+i.shape[b]+v[1]),l=r.map(v=>v[0]),c=r.map((v,b)=>v[0]+i.shape[b]),u=o==="reflect"?0:1,h=t.data.get(i.dataId).values,d=i.shape.length,p=je(i.shape),f=ce(a),g=a.length,y=je(a),m=Hn(i.dtype,f);for(let v=0;v<f;v++){let b=Ql(v,g,y);for(let S=0;S<g;S++)b[S]<l[S]?b[S]=l[S]*2-b[S]-u:b[S]>=c[S]&&(b[S]=(c[S]-1)*2-b[S]+u);b=b.map((S,_)=>S-l[_]);const w=ji(b,d,p);m[v]=h[w]}return{dataId:t.write(m,a,i.dtype),shape:a,dtype:i.dtype}}const z9={kernelName:$f,backendName:"cpu",kernelFunc:O9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B9=dn((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),V9=Tn(Qu,B9),U9={kernelName:Qu,backendName:"cpu",kernelFunc:V9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(n){const{inputs:e,backend:t,attrs:s}=n,{logits:i}=e,{dim:r}=s,o=i.shape.length;let a=r;if(a===-1&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const l=dt([a],i.shape),c=oN({inputs:{x:i},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),u=xn(c.shape,l),h=Ut({inputs:{x:c},backend:t,attrs:{shape:u}}),d=dv({inputs:{a:i,b:h},backend:t}),p=hk({inputs:{x:d},backend:t}),f=Fh({inputs:{x:p},backend:t,attrs:{axis:l,keepDims:!1}}),g=Ut({inputs:{x:f},backend:t,attrs:{shape:u}}),y=fv({inputs:{a:p,b:g},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),y}const W9={kernelName:Jf,backendName:"cpu",kernelFunc:aN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G9(n){const{inputs:e,backend:t,attrs:s}=n,{logits:i}=e,{numSamples:r,seed:o,normalized:a}=s;Ue(i,"multinomial");const l=a?i:aN({inputs:{logits:i},backend:t,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=t.data.get(l.dataId).values,d=[c,r],p=jn(ce(d),"int32");for(let f=0;f<c;++f){const g=f*u,y=new Float32Array(u-1);y[0]=h[g];for(let v=1;v<y.length;++v)y[v]=y[v-1]+h[g+v];const m=Qy.alea(o.toString()),x=f*r;for(let v=0;v<r;++v){const b=m();p[x+v]=y.length;for(let w=0;w<y.length;w++)if(b<y[w]){p[x+v]=w;break}}}return a||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(d,"int32",p)}const H9={kernelName:kT,backendName:"cpu",kernelFunc:G9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j9=lb;function X9(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=s;Ue(i,"NonMaxSuppression");const c=t.data.get(i.dataId).values,u=t.data.get(r.dataId).values,{selectedIndices:h}=j9(c,u,o,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const q9={kernelName:fy,backendName:"cpu",kernelFunc:X9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z9=cb;function Y9(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s;Ue(i,"NonMaxSuppressionPadded");const u=t.data.get(i.dataId).values,h=t.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=Z9(u,h,o,a,l,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const J9={kernelName:my,backendName:"cpu",kernelFunc:Y9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K9=ub;function Q9(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s;Ue(i,"NonMaxSuppressionWithScore");const u=t.data.get(i.dataId).values,h=t.data.get(r.dataId).values,d=o,p=a,f=l,g=c,{selectedIndices:y,selectedScores:m}=K9(u,h,d,p,f,g);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([m.length],"float32",new Float32Array(m))]}const eJ={kernelName:gy,backendName:"cpu",kernelFunc:Q9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tJ(n){const{inputs:e,backend:t,attrs:s}=n,{indices:i}=e,{dtype:r,depth:o,onValue:a,offValue:l}=s;Ue(i,"oneHot");const c=ce(i.shape),u=new Float32Array(c*o);u.fill(l);const h=t.data.get(i.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=a);return t.makeTensorInfo([...i.shape,o],r,u)}const nJ={kernelName:Pf,backendName:"cpu",kernelFunc:tJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cp(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const i=ha({inputs:{input:s},backend:t}),r=Cp({inputs:{x:i},backend:t}),o=Dl({inputs:{input:s},backend:t}),a=Cp({inputs:{x:o},backend:t}),l=_s({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return mv({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const sJ={kernelName:em,backendName:"cpu",kernelFunc:Cp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const i=ha({inputs:{input:s},backend:t}),r=lN({inputs:{x:i},backend:t}),o=Dl({inputs:{input:s},backend:t}),a=Cp({inputs:{x:o},backend:t}),l=_s({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return mv({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const iJ={kernelName:Ff,backendName:"cpu",kernelFunc:lN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cN(n){const{inputs:e,backend:t,attrs:s}=n,{axis:i}=s;if(e.length===1)return _p({inputs:{input:e[0]},backend:t,attrs:{dim:i}});const r=e[0].shape,o=e[0].dtype;e.forEach(u=>{P0(r,u.shape,"All tensors passed to stack must have matching shapes"),A(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(u=>{const h=_p({inputs:{input:u},backend:t,attrs:{dim:i}});return a.push(h),h}),c=Ll({inputs:l,backend:t,attrs:{axis:i}});return a.forEach(u=>t.disposeIntermediateTensorInfo(u)),c}const rJ={kernelName:Of,backendName:"cpu",kernelFunc:cN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{paddings:r,constantValue:o}=s;Ue(i,"pad");const a=r.map((x,v)=>x[0]+i.shape[v]+x[1]),l=r.map(x=>x[0]),c=t.data.get(i.dataId).values,u=ce(i.shape),h=i.shape.length,d=je(i.shape),p=ce(a),f=a.length,g=je(a),y=Hn(i.dtype,p);o!==0&&y.fill(o);for(let x=0;x<u;x++){const b=Ql(x,h,d).map((S,_)=>S+l[_]),w=ji(b,f,g);y[w]=c[x]}return{dataId:t.write(y,a,i.dtype),shape:a,dtype:i.dtype}}const uN={kernelName:zf,backendName:"cpu",kernelFunc:oJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aJ=dn((n,e)=>Math.pow(n,e)),lJ=Tn(th,aJ),cJ={kernelName:th,backendName:"cpu",kernelFunc:lJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uJ(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=e,{outputRaggedRank:a}=s,l=i.map(m=>t.data.get(m.dataId).values),c=i.map(m=>m.shape),u=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,[d,p,f]=kk(l,c,u,r.shape,r.dtype,h,o.shape),g=d.map(m=>t.makeTensorInfo([m.length],"int32",m)),y=t.makeTensorInfo(f,r.dtype,p);return g.concat([y])}const hJ={kernelName:NT,backendName:"cpu",kernelFunc:uJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dJ(n){const{inputs:e,backend:t}=n,{starts:s,limits:i,deltas:r}=e,o=t.data.get(s.dataId).values,a=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values,[c,u]=Nk(o,s.shape,s.dtype,a,i.shape,l,r.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const pJ={kernelName:AT,backendName:"cpu",kernelFunc:dJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fJ(n){const{inputs:e,backend:t,attrs:s}=n,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=t.data.get(i.dataId).values,u=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,d=a.map(y=>t.data.get(y.dataId).values),p=a.map(y=>y.shape),[f,g]=Ak(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,p,l);return t.makeTensorInfo(f,r.dtype,g)}const mJ={kernelName:RT,backendName:"cpu",kernelFunc:fJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gJ(n){const{backend:e,attrs:t}=n,{start:s,stop:i,dtype:r,step:o}=t,a=Rk(s,i,o,r);return e.makeTensorInfo([a.length],r,a)}const xJ={kernelName:xy,backendName:"cpu",kernelFunc:gJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yJ=At(nh,n=>1/n),bJ={kernelName:nh,backendName:"cpu",kernelFunc:yJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:i}=e,{alignCorners:r,halfPixelCenters:o,size:a}=s;Ue(i,"resizeBilinear");const l=je(i.shape),[c,u]=a,[h,d,p,f]=i.shape,g=t.data.get(i.dataId).values,y=new Float32Array(ce([h,c,u,f])),m=[r&&c>1?d-1:d,r&&u>1?p-1:p],x=[r&&c>1?c-1:c,r&&u>1?u-1:u];let v=0;const b=m[0]/x[0],w=m[1]/x[1];for(let S=0;S<h;S++)for(let _=0;_<c;_++){let I;o?I=b*(_+.5)-.5:I=b*_;const N=Math.max(0,Math.floor(I)),k=I-N,M=Math.min(d-1,Math.ceil(I)),T=S*l[0]+N*l[1],C=S*l[0]+M*l[1];for(let R=0;R<u;R++){let L;o?L=w*(R+.5)-.5:L=w*R;const $=Math.max(0,Math.floor(L)),O=L-$,G=Math.min(p-1,Math.ceil(L)),Z=T+$*l[2],H=C+$*l[2],j=T+G*l[2],ne=C+G*l[2];for(let ee=0;ee<f;ee++){const oe=g[Z+ee],ue=g[H+ee],Q=g[j+ee],_e=g[ne+ee],ye=oe+(Q-oe)*O,pe=ue+(_e-ue)*O,Ee=ye+(pe-ye)*k;y[v++]=Ee}}}return t.makeTensorInfo([h,c,u,f],"float32",y)}const wJ={kernelName:Gf,backendName:"cpu",kernelFunc:vJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:i,dy:r}=e,{alignCorners:o}=s;Ue([r,i],"resizeBilinearGrad");const a=je(i.shape),[l,c,u,h]=i.shape,[,d,p]=r.shape,f=new Float32Array(l*c*u*h),g=[o&&d>1?c-1:c,o&&p>1?u-1:u],y=[o&&d>1?d-1:d,o&&p>1?p-1:p],m=g[0]/y[0],x=g[1]/y[1],v=t.data.get(r.dataId).values;let b=0;for(let w=0;w<l;w++){const S=w*a[0];for(let _=0;_<d;_++){const I=_*m,N=Math.floor(I),k=Math.min(Math.ceil(I),c-1),M=S+N*a[1],T=S+k*a[1],C=I-N,R=1-C;for(let L=0;L<p;L++){const $=L*x,O=Math.floor($),G=Math.min(Math.ceil($),u-1),Z=$-O,H=1-Z,j=M+O*a[2],ne=M+G*a[2],ee=T+O*a[2],oe=T+G*a[2],ue=R*H,Q=R*Z,_e=C*H,ye=C*Z;for(let pe=0;pe<h;pe++){const Ee=v[b++];f[j+pe]+=Ee*ue,f[ne+pe]+=Ee*Q,f[ee+pe]+=Ee*_e,f[oe+pe]+=Ee*ye}}}}return t.makeTensorInfo([l,u,c,h],"float32",f)}const _J={kernelName:vy,backendName:"cpu",kernelFunc:SJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:i}=e,{alignCorners:r,halfPixelCenters:o,size:a}=s;Ue(i,"resizeNearestNeighbor");const l=je(i.shape),[c,u]=a,[h,d,p,f]=i.shape,g=t.data.get(i.dataId).values,y=new Float32Array(h*c*u*f),m=[r&&c>1?d-1:d,r&&u>1?p-1:p],x=[r&&c>1?c-1:c,r&&u>1?u-1:u],v=m[0]/x[0],b=m[1]/x[1];let w=0;for(let S=0;S<h;S++){const _=S*l[0];for(let I=0;I<c;I++){const N=o?v*(I+.5):v*I;let k=Math.min(d-1,r?Math.round(N):Math.floor(N));o&&(k=Math.max(0,k));const M=_+k*l[1];for(let T=0;T<u;T++){const C=o?b*(T+.5):b*T;let R=Math.min(p-1,r?Math.round(C):Math.floor(C));o&&(R=Math.max(0,R));const L=M+R*l[2];for(let $=0;$<f;$++){const O=g[L+$];y[w++]=O}}}}return t.makeTensorInfo([h,c,u,f],i.dtype,y)}const TJ={kernelName:Wf,backendName:"cpu",kernelFunc:CJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:i,dy:r}=e,{alignCorners:o}=s;Ue([r,i],"resizeNearestNeighborGrad");const a=je(i.shape),l=je(r.shape),[c,u,h,d]=i.shape,[,p,f]=r.shape,g=new Float32Array(c*u*h*d),y=t.data.get(r.dataId).values,m=[o&&p>1?u-1:u,o&&f>1?h-1:h],x=[o&&p>1?p-1:p,o&&f>1?f-1:f],v=m[0]/x[0],b=m[1]/x[1],w=1/v,S=1/b,_=Math.ceil(w)*2+2,I=Math.ceil(S)*2+2;for(let N=0;N<c;N++){const k=N*a[0];for(let M=0;M<u;M++){const T=k+M*a[1],C=Math.floor(M*w),R=Math.floor(C-_/2);for(let L=0;L<h;L++){const $=T+L*a[2],O=Math.floor(L*S),G=Math.floor(O-I/2);for(let Z=0;Z<d;Z++){let H=0;for(let j=0;j<_;j++){const ne=j+R;if(ne<0||ne>=p)continue;const ee=k+ne*l[1],oe=ne*v,ue=Math.min(u-1,o?Math.round(oe):Math.floor(oe));if(M===ue)for(let Q=0;Q<I;Q++){const _e=Q+G;if(_e<0||_e>=f)continue;const ye=ee+_e*l[2],pe=_e*b,Ee=Math.min(h-1,o?Math.round(pe):Math.floor(pe));L===Ee&&(H+=y[ye+Z])}}g[$+Z]=H}}}}return t.makeTensorInfo(i.shape,i.dtype,g)}const EJ={kernelName:by,backendName:"cpu",kernelFunc:IJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{dims:r}=s;Ue(i,"reverse");const o=i.shape.length,a=dt(r,i.shape);if(o===0)return sr({inputs:{x:i},backend:t});const l=new On(i.shape,i.dtype),c=t.bufferSync(i);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();a.forEach(p=>d[p]=i.shape[p]-1-d[p]),l.set(c.get(...d),...h)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const kJ={kernelName:Hf,backendName:"cpu",kernelFunc:MJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NJ={kernelName:Ey,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:i,fillValue:r,center:o}=e,a=t,l=Hn(s.dtype,ce(s.shape)),[c,u,h,d]=s.shape,[p,f]=wb(o,u,h),g=255,y=Math.sin(i),m=Math.cos(i),x=a.data.get(s.dataId).values;for(let b=0;b<c;b++){const w=b*h*u*d;for(let S=0;S<u;S++){const _=S*(h*d);for(let I=0;I<h;I++){const N=I*d;for(let k=0;k<d;k++){const M=[c,S,I,k],T=M[2],C=M[1];let R=(T-p)*m-(C-f)*y,L=(T-p)*y+(C-f)*m;R=Math.round(R+p),L=Math.round(L+f);let $=r;if(typeof r!="number"&&(k===3?$=g:$=r[k]),R>=0&&R<h&&L>=0&&L<u){const G=L*(h*d),Z=R*d,H=w+G+Z+k;$=x[H]}const O=w+_+N+k;l[O]=$}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AJ=At(rh,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),RJ={kernelName:rh,backendName:"cpu",kernelFunc:AJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $J(n){const{inputs:e,backend:t,attrs:s}=n,{indices:i,updates:r}=e,{shape:o}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=_a(r,i,o),d=!0,p=t.bufferSync(i),f=t.bufferSync(r),g=Wo(p,f,o,h,c,l,a,u,0,d);return t.makeTensorInfo(o,g.dtype,g.values)}const DJ={kernelName:$T,backendName:"cpu",kernelFunc:$J};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LJ(n,e){let t=0,s=n.length,i=0;for(;t<s;)i=Math.floor((t+s)/2),n[i]<e?t=i+1:s=i;return s}function FJ(n,e){let t=0,s=n.length,i=0;for(;t<s;)i=Math.floor((t+s)/2),n[i]<=e?t=i+1:s=i;return s}function PJ(n,e,t,s,i,r){const o=an("int32",t*i);for(let a=0;a<t;++a){const l=n.slice(a*s,(a+1)*s),c=a*i;for(let u=0;u<i;++u)o[c+u]=r==="left"?LJ(l,e[u+c]):FJ(l,e[u+c])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJ(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:i,values:r}=e,{side:o}=s,a=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values,c=PJ(a,l,i.shape[0],i.shape[1],r.shape[1],o);return t.makeTensorInfo(r.shape,"int32",c)}const zJ={kernelName:LT,backendName:"cpu",kernelFunc:OJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BJ(n){const{inputs:e,backend:t}=n,{condition:s,t:i,e:r}=e;Ue([s,i,r],"select");const o=s.shape.length,a=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,c=t.data.get(r.dataId).values,u=Is(i.dtype,r.dtype),h=jn(ce(i.shape),u);let d=0;const p=o===0||o>1||i.shape.length===1?1:ce(i.shape.slice(1));for(let f=0;f<a.length;f++)for(let g=0;g<p;g++)a[f]===1?h[d++]=l[f]:h[d++]=c[f];return t.makeTensorInfo(i.shape,u,h)}const VJ={kernelName:jf,backendName:"cpu",kernelFunc:BJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UJ=dm,WJ=pm,GJ=At(ah,n=>n>=0?WJ*n:UJ*(Math.exp(n)-1)),HJ={kernelName:ah,backendName:"cpu",kernelFunc:GJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jJ=At(uh,n=>n<0?-1:n>0?1:0),XJ={kernelName:uh,backendName:"cpu",kernelFunc:jJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qJ=At(lh,n=>Math.sin(n)),ZJ={kernelName:lh,backendName:"cpu",kernelFunc:qJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YJ=At(ch,n=>Math.sinh(n)),JJ={kernelName:ch,backendName:"cpu",kernelFunc:YJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KJ=11920928955078125e-23,qS=Math.log(KJ)+2,QJ=At(dh,n=>{const e=n>-qS,t=n<qS,s=Math.exp(n);let i;return t?i=s:e?i=n:i=Math.log(1+s),i}),e7={kernelName:dh,backendName:"cpu",kernelFunc:QJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockShape:r,paddings:o}=s;Ue([i],"spaceToBatchND");const a=ce(r),l=[[0,0]];l.push(...o);for(let S=1+r.length;S<i.shape.length;++S)l.push([0,0]);const c=uN.kernelFunc({inputs:{x:i},backend:t,attrs:{paddings:l,constantValue:0}}),u=Th(c.shape,r,a,!1),h=Ih(u.length,r.length,!1),d=Eh(c.shape,r,a,!1),g=Ut({inputs:{x:c},backend:t,attrs:{shape:u}}),x=ys({inputs:{x:g},backend:t,attrs:{perm:h}}),w=Ut({inputs:{x},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),w}const n7={kernelName:Zf,backendName:"cpu",kernelFunc:t7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s7(n){const{inputs:e,backend:t}=n,{indices:s,values:i,denseShape:r,defaultValue:o}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,c=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values[0],[h,d,p,f,g]=Fk(a,s.shape,s.dtype,l,i.dtype,c,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],i.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const i7={kernelName:FT,backendName:"cpu",kernelFunc:s7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r7(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:i,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(t.data.get(i.dataId).values),a=t.data.get(s.dataId).values,l=Array.from(t.data.get(r.dataId).values),[c,u,h]=Pk(a,s.shape,s.dtype,o,l);return[t.makeTensorInfo(u,s.dtype,c),t.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const o7={kernelName:PT,backendName:"cpu",kernelFunc:r7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a7(n){const{inputs:e,backend:t}=n,{data:s,indices:i,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=t.data.get(s.dataId).values,a=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values,[c,u]=hv(o,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(u,s.dtype,c)}const l7={kernelName:OT,backendName:"cpu",kernelFunc:a7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(n){const{inputs:e,backend:t}=n,{data:s,indices:i,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=t.data.get(s.dataId).values,a=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values,[c,u]=hv(o,s.shape,s.dtype,a,l);return t.makeTensorInfo(u,s.dtype,c)}const u7={kernelName:zT,backendName:"cpu",kernelFunc:c7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:i,sparseValues:r,defaultValue:o}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=_a(r,i,a),p=!1,f=t.bufferSync(i);let g;switch(r.dtype){case"bool":{const y=t.bufferSync(r),m=!!t.data.get(o.dataId).values[0];g=Wo(f,y,a,d,u,c,l,h,m,p);break}case"float32":{const y=t.bufferSync(r),m=t.data.get(o.dataId).values[0];g=Wo(f,y,a,d,u,c,l,h,m,p);break}case"int32":{const y=t.bufferSync(r),m=t.data.get(o.dataId).values[0];g=Wo(f,y,a,d,u,c,l,h,m,p);break}case"string":{const y=t.bufferSync(r),m=ao(t.data.get(o.dataId).values[0]);g=Wo(f,y,a,d,u,c,l,h,m,p);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return t.makeTensorInfo(a,g.dtype,g.values)}const d7={kernelName:BT,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{numOrSizeSplits:r,axis:o}=s,a=dt(o,i.shape)[0],l=Fb(i,r,a),c=new Array(i.shape.length).fill(0),u=i.shape.slice();return l.map(h=>{const d=[...u];d[a]=h;const p=da({inputs:{x:i},backend:t,attrs:{begin:c,size:d}});return c[a]+=h,p})}const f7={kernelName:Yf,backendName:"cpu",kernelFunc:p7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m7={kernelName:wy,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;Ue(t,"square");const i=s.data.get(t.dataId).values,r=new Float32Array(i.length);for(let a=0;a<i.length;++a){const l=i[a];r[a]=l*l}return{dataId:s.write(r,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g7=At(bh,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),x7={kernelName:bh,backendName:"cpu",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s;Ue(i,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:y,isSimpleSlice:m,begin:x,end:v,strides:b}=yb(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=Ut({inputs:{x:i},backend:t,attrs:{shape:f}});else if(y||m){A(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const S=mb(x,v,b),_=da({inputs:{x:i},backend:t,attrs:{begin:x,size:S}});w=Ut({inputs:{x:_},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(_)}else{const S=t.bufferSync(i),_=Bk(p,S,b,x);w=t.makeTensorInfo(f,_.dtype,_.values)}return w}const b7={kernelName:_y,backendName:"cpu",kernelFunc:y7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v7(n){const{inputs:e,backend:t,attrs:s}=n,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=t.data.get(u.dataId).values,p=t.data.get(h.dataId).values,[f,g]=Vk(d,p,i,r,o,a,l,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",g)]}const w7={kernelName:VT,backendName:"cpu",kernelFunc:v7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S7(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:i}=s,{input:r,delimiter:o}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values[0],[c,u,h]=Uk(a,l,i),d=u.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const _7={kernelName:UT,backendName:"cpu",kernelFunc:S7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:i}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=t.data.get(r.dataId).values,a=Wk(o,i);return t.makeTensorInfo(r.shape,"int32",a)}const T7={kernelName:WT,backendName:"cpu",kernelFunc:C7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I7=At(gh,n=>Math.tan(n)),E7={kernelName:gh,backendName:"cpu",kernelFunc:I7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M7=At(xh,n=>Math.tanh(n)),k7={kernelName:xh,backendName:"cpu",kernelFunc:M7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(n){const{inputs:e,backend:t}=n,{tensor:s,indices:i,updates:r}=e,{sliceRank:o,numUpdates:a,sliceSize:l,strides:c,outputSize:u}=_a(r,i,s.shape),h=!1,d=t.bufferSync(i),p=t.bufferSync(r),f=t.bufferSync(s),g=Wo(d,p,s.shape,u,l,a,o,c,f,h);return t.makeTensorInfo(s.shape,g.dtype,g.values)}const A7={kernelName:DT,backendName:"cpu",kernelFunc:N7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{reps:r}=s;Ue(i,"tile");const o=Hk(t.bufferSync(i),r);return t.makeTensorInfo(o.shape,o.dtype,o.values)}const $7={kernelName:yh,backendName:"cpu",kernelFunc:R7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{k:r,sorted:o}=s;Ue(i,"topk");const a=t.data.get(i.dataId).values,[l,c]=Xk(a,i.shape,i.dtype,r,o);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(c.shape,c.dtype,c.values)]}const L7={kernelName:Cy,backendName:"cpu",kernelFunc:D7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(n){const{inputs:e,attrs:t,backend:s}=n,{image:i,transforms:r}=e,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=t,[u,h,d,p]=i.shape,[f,g]=c??[h,d],y=[u,f,g,p],m=je(i.shape),x=m[0],v=m[1],b=m[2],w=je(y),S=w[0],_=w[1],I=w[2],N=Hn(i.dtype,ce(y));N.fill(l);const k=s.data.get(i.dataId).values,M=s.data.get(r.dataId).values;for(let C=0;C<u;++C){const R=r.shape[0]===1?M:M.subarray(C*8,C*8+8);for(let L=0;L<f;++L)for(let $=0;$<g;++$)for(let O=0;O<p;++O){let G;const Z=R[6]*$+R[7]*L+1;if(Z===0)continue;const H=(R[0]*$+R[1]*L+R[2])/Z,j=(R[3]*$+R[4]*L+R[5])/Z,ne=ZS(H,d,a),ee=ZS(j,h,a);switch(o){case"nearest":G=U7(k,h,d,x,v,b,C,ee,ne,O,l);break;case"bilinear":G=W7(k,h,d,x,v,b,C,ee,ne,O,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const oe=C*S+L*_+$*I+O;N[oe]=G}return s.makeTensorInfo(y,i.dtype,N)}return{dataId:s.write(N,y,i.dtype),shape:i.shape,dtype:i.dtype}}const P7={kernelName:Ty,backendName:"cpu",kernelFunc:F7};function ZS(n,e,t){switch(t){case"reflect":return O7(n,e);case"wrap":return z7(n,e);case"nearest":return V7(n,e);case"constant":default:return B7(n)}}function O7(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return ea(0,t,e-1)}function z7(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return ea(0,t,e-1)}function B7(n,e){return n}function V7(n,e){return ea(0,n,e-1)}function Fc(n,e,t,s,i,r,o,a,l,c,u){const h=o*s+a*i+l*r+c;return 0<=a&&a<e&&0<=l&&l<t?n[h]:u}function U7(n,e,t,s,i,r,o,a,l,c,u){const h=Math.round(a),d=Math.round(l);return Fc(n,e,t,s,i,r,o,h,d,c,u)}function W7(n,e,t,s,i,r,o,a,l,c,u){const h=Math.floor(a),d=Math.floor(l),p=h+1,f=d+1,g=(f-l)*Fc(n,e,t,s,i,r,o,h,d,c,u)+(l-d)*Fc(n,e,t,s,i,r,o,h,f,c,u),y=(f-l)*Fc(n,e,t,s,i,r,o,p,d,c,u)+(l-d)*Fc(n,e,t,s,i,r,o,p,f,c,u);return(p-a)*g+(a-h)*y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G7(n){const{inputs:e,attrs:t,backend:s}=n,{axis:i}=t,{x:r}=e;Ue(r,"unique");const o=s.data.get(r.dataId).values,{outputValues:a,outputShape:l,indices:c}=qk(o,i,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const H7={kernelName:Iy,backendName:"cpu",kernelFunc:G7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j7(n){const{inputs:e,backend:t,attrs:s}=n,{value:i}=e;let{axis:r}=s;r<0&&(r+=i.shape.length);const o=i.shape.length,a=i.shape[r],l=new Array(o-1);let c=0;for(let p=0;p<o;p++)p!==r&&(l[c++]=i.shape[p]);const u=new Array(o).fill(0),h=i.shape.slice();h[r]=1;const d=new Array(a);for(let p=0;p<d.length;p++){u[r]=p;const f=da({inputs:{x:i},backend:t,attrs:{begin:u,size:h}});d[p]=Ut({inputs:{x:f},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(f)}return d}const X7={kernelName:Kf,backendName:"cpu",kernelFunc:j7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q7(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,segmentIds:r}=e,{numSegments:o}=s;Ue(i,"unsortedSegmentSum");const a=i.shape.length,l=r.shape.length,c=[],u=[],h=a-l;let d=r;for(let f=0;f<h;++f){const g=_p({inputs:{input:d},backend:t,attrs:{dim:f+1}});d=g,u.push(g)}for(let f=0;f<o;++f){const g=xo(f,"int32"),y=t.makeTensorInfo([],"int32",g),m=ck({inputs:{a:y,b:d},backend:t}),x=po({inputs:{x:m},backend:t,attrs:{dtype:"float32"}}),v=Tm({inputs:{a:x,b:i},backend:t}),b=Fh({inputs:{x:v},backend:t,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(y),u.push(m),u.push(x),u.push(v),u.push(b)}const p=cN({inputs:c,backend:t,attrs:{axis:0}});return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const Z7={kernelName:Qf,backendName:"cpu",kernelFunc:q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y7=[Gq,C8,jq,qq,N8,Yq,Kq,eZ,nZ,iZ,oZ,lZ,uZ,pZ,mZ,yZ,vZ,SZ,CZ,Uq,IZ,MZ,NZ,R8,RZ,M8,D8,DZ,T8,FZ,OZ,zZ,VZ,WZ,HZ,XZ,ZZ,JZ,QZ,tY,sY,rY,aY,cY,uY,dY,fY,gY,xY,yY,bY,wY,CY,Lq,IY,L8,DY,F8,LY,O8,VY,UY,GY,B8,U8,jY,qY,YY,KY,G8,j8,I8,e9,PZ,n9,i9,o9,Fq,q8,Y8,l9,K8,u9,p9,m9,y9,v9,S9,_9,eq,T9,E9,k9,A9,$9,L9,P9,nq,z9,U9,H9,iq,oq,q9,J9,eJ,lq,nJ,iJ,rJ,uN,cJ,Oq,hq,hJ,pJ,mJ,xJ,E8,Ux,bJ,zq,Bq,Vq,wJ,_J,TJ,EJ,kJ,NJ,RJ,bq,DJ,zJ,VJ,HJ,wq,XJ,ZJ,JJ,Sq,W9,e7,n7,i7,o7,l7,u7,d7,f7,Tq,m7,Eq,kq,x7,b7,w7,_7,T7,$q,SY,E7,k7,A7,$7,L7,P7,cq,H7,X7,Z7,sJ];for(const n of Y7)HT(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zo={},kd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function J7(n,e){zo[n]=e}function Si(n,e){if(!(n in zo)||e!=null){const s=Q7(n,e);if(s!==null)zo[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=zo[n];return t==null||t.isContextLost()?(delete zo[n],Si(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),zo[n])}function K7(n){if(!se().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Q7(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??K7(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete zo[n]},!1),se().getBool("SOFTWARE_WEBGL_ENABLED")&&(kd.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",kd)||t.getContext("experimental-webgl",kd):t.getContext("webgl2",kd)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var hu;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(hu||(hu={}));var Fs;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Fs||(Fs={}));var Fn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Fn||(Fn={}));function Ph(n,e){return[e,n]}function eK(n,e){return n*e}function Nd(n){const e=ce(n),t=Math.ceil(e/4);return ux(t)}function ac(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function tK(n,e){const[t,s]=ac(n,e);return t*s*4}function gv(n,e){const t=n;let s,i,r,o,a,l,c,u,h,d;return se().getNumber("WEBGL_VERSION")===2?(s=t.R32F,i=t.R16F,r=t.RGBA16F,o=t.RGBA32F,a=t.RED,c=4,u=1,h=t.HALF_FLOAT,d=t.FLOAT,l=t.RGBA8):(s=n.RGBA,i=n.RGBA,r=n.RGBA,o=t.RGBA,a=n.RGBA,c=4,u=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pe(n,e){const t=e();return se().getBool("DEBUG")&&nK(n),t}function nK(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+oK(n,e))}const sK=596e-10,iK=65504;function rK(n){return!!(se().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||sK<Math.abs(n)&&Math.abs(n)<iK)}function oK(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Ad(n,e){return $r(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function aK(n,e){const t=$r(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Pe(n,()=>n.shaderSource(t,e)),Pe(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function lK(n,e){const t=$r(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Pe(n,()=>n.shaderSource(t,e)),Pe(n,()=>n.compileShader(t)),se().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw hN(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const cK=/ERROR: [0-9]+:([0-9]+):/g;function hN(n,e){const t=cK.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],i=n.split(`
`),r=i.length.toString().length+2,o=i.map((h,d)=>pl((d+1).toString(),r)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const l=o.slice(0,s-1),c=o.slice(s-1,s),u=o.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${pl(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function uK(n){return $r(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function hK(n,e){if(Pe(n,()=>n.linkProgram(e)),!se().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Lg(n,e){if(Pe(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function dK(n,e){const t=$r(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Pe(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function pK(n,e){const t=$r(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Pe(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),Pe(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function fK(n){return $r(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function mK(n,e){const t=se().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,i=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+i+".")}}function gK(n){return $r(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function YS(n,e,t,s,i,r,o){const a=n.getAttribLocation(e,t);return a===-1?!1:(Pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Pe(n,()=>n.vertexAttribPointer(a,i,n.FLOAT,!1,r,o)),Pe(n,()=>n.enableVertexAttribArray(a)),!0)}function xK(n,e,t){SK(n,t),Pe(n,()=>n.activeTexture(n.TEXTURE0+t)),Pe(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function yK(n,e,t){return $r(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function bK(n,e,t){return n.getUniformLocation(e,t)}function vK(n,e,t,s){Pe(n,()=>xK(n,e,s)),Pe(n,()=>n.uniform1i(t,s))}function Fg(n,e,t){Pe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Pe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function JS(n,e){Pe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Pe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Rd(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+wK(n,e))}function wK(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function $r(n,e,t){const s=Pe(n,()=>e());if(s==null)throw new Error(t);return s}function SK(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const i=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${i}.`)}}function Fl(n,e=2){return ce(n.slice(0,n.length-e))}function Pl(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function $d(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Fl(n),...Pl(n)]),e}function _K(n,e=!1){let t=se().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=se().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&se().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?F0(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=go(n).newShape);let i=ce(n),r=null;n.length<=1&&i<=t?r=[1,i]:n.length===2&&n[0]<=t&&n[1]<=t?r=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?r=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?r=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?r=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(r=[n[0],n[1]*n[2]*n[3]]);const o=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(e?2:1)&&Math.min(...r)>0;if(r==null||o)if(e){const a=Fl(n);let l=2,c=2;n.length&&([l,c]=Pl(n)),i=a*(l/2)*(c/2),r=ux(i).map(u=>u*2)}else r=ux(i);return r}function Dd(n){return n%2===0}function Tp(n,e){if(n=n.slice(-2),e=e.slice(-2),Et(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||Dd(t)&&Dd(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Dd(n[0])&&Dd(e[0])}let Pg,Og;function CK(n){if(Pg==null){const e=Si(n);Pg=e.getParameter(e.MAX_TEXTURE_SIZE)}return Pg}function TK(n){if(Og==null){const e=Si(n);Og=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Og)}function IK(n){if(n===0)return 0;let e;const t=Si(n);return Ys(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Ys(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Ys(n,e){return n.getExtension(e)!=null}function KS(n){try{if(Si(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function EK(n){if(n===0)return!1;const e=Si(n);if(n===1){if(!Ys(e,"OES_texture_float"))return!1}else if(!Ys(e,"EXT_color_buffer_float"))return!1;return Gx(e)}function MK(n){if(n===0)return!1;const e=Si(n);if(n===1){if(!Ys(e,"OES_texture_float")||!Ys(e,"WEBGL_color_buffer_float"))return!1}else{if(Ys(e,"EXT_color_buffer_float"))return Gx(e);const s="EXT_color_buffer_half_float";if(Ys(e,s)){const i=e.getExtension(s);return kK(e,i)}return!1}return Gx(e)}function Gx(n){const e=gv(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(r),o}function kK(n,e){const t=gv(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(o),a}function NK(n){return n!==2?!1:Si(n).fenceSync!=null}function Oh(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&A(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ge=se();Ge.registerFlag("HAS_WEBGL",()=>Ge.getNumber("WEBGL_VERSION")>0);Ge.registerFlag("WEBGL_VERSION",()=>KS(2)?2:KS(1)?1:0);Ge.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ge.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ge.get("WEBGL_VERSION")===2);Ge.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ge.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ge.registerFlag("WEBGL_PACK",()=>Ge.getBool("HAS_WEBGL"));Ge.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ge.getBool("WEBGL_PACK"));Ge.registerFlag("WEBGL_PACK_CLIP",()=>Ge.getBool("WEBGL_PACK"));Ge.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ge.getBool("WEBGL_PACK"));Ge.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ge.getBool("WEBGL_PACK"));Ge.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ge.getBool("WEBGL_PACK"));Ge.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ge.getBool("WEBGL_PACK"));Ge.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ge.getBool("WEBGL_PACK"));Ge.registerFlag("WEBGL_PACK_REDUCE",()=>Ge.getBool("WEBGL_PACK"));Ge.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ge.getBool("WEBGL_PACK"));Ge.registerFlag("WEBGL_CONV_IM2COL",()=>Ge.getBool("WEBGL_PACK"));Ge.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ge.getBool("WEBGL_PACK"));Ge.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>CK(Ge.getNumber("WEBGL_VERSION")));Ge.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>TK(Ge.getNumber("WEBGL_VERSION")));Ge.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ge.getNumber("WEBGL_VERSION");return n===0?0:IK(n)});Ge.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ge.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!lI());Ge.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>EK(Ge.getNumber("WEBGL_VERSION")));Ge.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ge.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ge.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ge.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>MK(Ge.getNumber("WEBGL_VERSION")));Ge.registerFlag("WEBGL_FENCE_API_ENABLED",()=>NK(Ge.getNumber("WEBGL_VERSION")));Ge.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ge.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ge.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Ge.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>lI()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Ge.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ge.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ge.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ge.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ge.registerFlag("WEBGL_EXP_CONV",()=>!1);Ge.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ge.getBool("IS_TEST"));Ge.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ge.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ge.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ge.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(){let n,e,t,s,i,r,o,a,l,c;return se().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",i="texture",r="outputColor",o="out vec4 outputColor;",a=se().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",i="texture2D",r="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:i,output:r,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ia(n,e,t="index"){const s=je(e);return s.map((i,r)=>{const o=`int ${n[r]} = ${t} / ${i}`,a=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * ${i}`:`index -= ${n[r]} * ${i}`;return`${o}; ${a};`}).join("")}function Im(n,e,t="index"){const s=je(e);return s.map((i,r)=>{const o=`int ${n[r]} = ${t} / outShapeStrides[${r}]`,a=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * outShapeStrides[${r}]`:`index -= ${n[r]} * outShapeStrides[${r}]`;return`${o}; ${a};`}).join("")}function AK(n,e){const t=n.length,s=n.map(r=>`${e}[${r}]`),i=new Array(t-1);i[t-2]=s[t-1];for(let r=t-3;r>=0;--r)i[r]=`(${i[r+1]} * ${s[r+1]})`;return i}function RK(n,e,t="index"){const s=n.map((r,o)=>o),i=AK(s,e);return i.map((r,o)=>{const a=`int ${n[o]} = ${t} / ${i[o]}`,l=o===i.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${i[o]}`:`index -= ${n[o]} * ${i[o]}`;return`${a}; ${l};`}).join("")}function xv(n){const e=je(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function yv(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const dN=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:pN}=v5;function $K(n,e,t){const s=[];if(n.forEach(p=>{const f=ce(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:g}=bv(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(g.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const i=s.join(`
`),r=n.map(p=>DK(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),o=e.texShape,a=cs(),l=PK(a);let c,u,h=BK(a);return e.isPacked?(c=LK(e.logicalShape,o,t.enableShapeUniforms),u=zK(a)):(c=FK(e.logicalShape,o,t.enableShapeUniforms),u=OK(a)),t.packedInputs&&(h+=GK),[h,l,u,i,c,r,t.userCode].join(`
`)}function lc(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return nQ(n,e);case 1:return iQ(n,e);case 2:return oQ(n,e);case 3:return lQ(n,e);case 4:return uQ(n,e);case 5:return hQ(n);case 6:return dQ(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function fN(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return tQ(n);case 1:return sQ(n,e);case 2:return rQ(n,e);case 3:return aQ(n,e);default:return cQ(n,e)}}function DK(n,e,t=!1,s){let i="";t?i+=fN(n,s):i+=lc(n,s);const r=n.shapeInfo.logicalShape,o=e.logicalShape;return r.length<=o.length&&(t?i+=pQ(n,e):i+=fQ(n,e)),i}function LK(n,e,t){switch(n.length){case 0:return mN();case 1:return HK(n,e,t);case 2:return QK(n,e,t);case 3:return XK(n,e,t);default:return ZK(n,e,t)}}function FK(n,e,t){switch(n.length){case 0:return mN();case 1:return jK(n,e,t);case 2:return eQ(n,e,t);case 3:return qK(n,e,t);case 4:return YK(n,e,t);case 5:return JK(n,e);case 6:return KK(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function PK(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function OK(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function zK(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function BK(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${VK}
    ${UK}
    ${WK}
  `}const VK=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,UK=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,WK=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,GK=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function mN(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function HK(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function jK(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function XK(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(n[2]/2),r=i*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec3(b, r, c);
    }
  `}function qK(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Im(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Ia(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function ZK(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(n[n.length-1]/2),r=i*Math.ceil(n[n.length-2]/2);let o=r,a="",l="b, r, c";for(let c=2;c<n.length-1;c++)o*=n[n.length-c-1],a=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+a,l=`b${c}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec${n.length}(${l});
    }
  `}function YK(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Im(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Ia(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function JK(n,e){const t=Ia(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function KK(n,e){const t=Ia(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function QK(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Et(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const i=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec2(r, c);
    }
  `}function eQ(n,e,t){return Et(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Ea(n){return`offset${n}`}function tQ(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=cs();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function nQ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[i,r]=n.shapeInfo.texShape;if(i===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=Ea(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${o});
      return sampleTexture(${t}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${o});
      return sampleTexture(${t}, uv);
    }
  `}function sQ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),i=n.shapeInfo.texShape,r=cs();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${t}, uv);
    }
  `;const o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${r.texture2D}(${t}, uv);
    }
  `}function iQ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${cc(n)}
      }
    `;const i=n.shapeInfo.texShape,r=i[0],o=i[1];if(o===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Ea(t);return o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${o}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function rQ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,o=r[0],a=r[1],l=cs();if(r!=null&&Et(t,r))return e?`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${i}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(t[1]/2);return`
    vec4 ${i}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function oQ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape;if(r!=null&&Et(t,r)){if(e)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=r[0],p=r[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:o,keptDims:a}=go(t),l=o;if(l.length<t.length){const d=uc(n,l),p=["row","col"];return`
      ${lc(d,e)}
      float ${i}(int row, int col) {
        return ${i}(${hc(p,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${cc(n)}
      }
    `;const c=r[0],u=r[1],h=Ea(s);return u===1?e?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?e?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function aQ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=uc(n,d),g=["b","row","col"];return`
        ${fN(f,e)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${hc(g,p)});
        }
      `}const a=cs();if(e)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=o[0],c=o[1],u=Math.ceil(t[2]/2),h=u*Math.ceil(t[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function lQ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[1]*t[2],o=t[2],{newShape:a,keptDims:l}=go(t),c=a;if(c.length<t.length){const g=uc(n,c),y=["row","col","depth"];return`
        ${lc(g,e)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${hc(y,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${o}, 1)));
        ${cc(n)}
      }
    `;const u=n.shapeInfo.texShape,h=u[0],d=u[1],p=n.shapeInfo.flatOffset;if(d===r&&p==null)return e?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===o&&p==null)return e?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Ea(s);return e?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function cQ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),i=cs();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${t}, uv);
    }
  `;const r=n.shapeInfo.logicalShape,o=r.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],h=Math.ceil(r[o-1]/2);let d=h*Math.ceil(r[o-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<o-1;g++)p=`int b${g}, `+p,d*=r[o-g-1],f=`b${g} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${i.texture2D}(${t}, uv);
    }
  `}function uQ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[3],o=t[2]*r,a=t[1]*o,{newShape:l,keptDims:c}=go(t);if(l.length<t.length){const x=uc(n,l),v=["row","col","depth","depth2"];return`
      ${lc(x,e)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${hc(v,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${r}, 1)));
        ${cc(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,y=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&u==null)return e?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${f}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===r&&u==null)return e?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const m=Ea(s);return e?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${g}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${m});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${m});
      return sampleTexture(${s}, uv);
    }
  `}function hQ(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),i=e[4],r=e[3]*i,o=e[2]*r,a=e[1]*o,{newShape:l,keptDims:c}=go(e);if(l.length<e.length){const g=uc(n,l),y=["row","col","depth","depth2","depth3"];return`
      ${lc(g)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${hc(y,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${r}, ${i})) +
          depth3;
        ${cc(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${r}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Ea(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${r} +
          depth2 * ${i} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function dQ(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:i,keptDims:r}=go(e);if(i.length<e.length){const y=uc(n,i),m=["row","col","depth","depth2","depth3","depth4"];return`
      ${lc(y)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${hc(m,r)});
      }
    `}const o=e[5],a=e[4]*o,l=e[3]*a,c=e[2]*l,u=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${cc(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===o&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=Ea(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${g};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function cc(n){const e=n.name,t=ce(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function pQ(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),i="get"+s+"AtOutCoords",r=n.shapeInfo.logicalShape.length,o=e.logicalShape.length,a=pN(n.shapeInfo.logicalShape,e.logicalShape),l=$t(o),c=o-r;let u;const h=["x","y","z","w","u","v"];r===0?u="":o<2&&a.length>=1?u="coords = 0;":u=a.map(x=>`coords.${h[x+c]} = 0;`).join(`
`);let d="";o<2&&r>0?d="coords":d=n.shapeInfo.logicalShape.map((x,v)=>`coords.${h[v+c]}`).join(", ");let p="return outputValue;";const g=ce(n.shapeInfo.logicalShape)===1,m=ce(e.logicalShape)===1;if(r===1&&!g&&!m)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!m)o===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const x=r-2,v=r-1;a.indexOf(x)>-1&&a.indexOf(v)>-1?p="return vec4(outputValue.x);":a.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(v)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${i}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function fQ(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),i="get"+s+"AtOutCoords",r=e.texShape,o=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&Et(o,r))return`
      float ${i}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=$t(l),u=pN(n.shapeInfo.logicalShape,e.logicalShape),h=l-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(g=>`coords.${p[g+h]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=n.shapeInfo.logicalShape.map((g,y)=>`coords.${p[y+h]}`).join(", "),`
    float ${i}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function $t(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function bv(n,e,t){const{newShape:s,keptDims:i}=go(e),r=e.length,o=n&&r===3&&e[0]===1,a=o?e.slice(1):s,l=!n&&r>1&&!Et(e,t)&&s.length<r||o;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:i}}function uc(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function hc(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mQ(n,e,t,s){const i=t.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),r=i.map(u=>u.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=$K(i,o,e),l=lK(n.gl,a),c=n.createProgram(l);return se().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o},gN(n,e,c)))}function gN(n,e,t){const s=[],i=[];let r,o,a,l=null,c=null;c=n.getUniformLocation(t,"NAN",!1),se().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const u=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,u),offset:n.getUniformLocation(t,`offset${h}`,u)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,u),d.texShape=n.getUniformLocation(t,`${h}TexShape`,u)),s.push(d)}if(e.enableShapeUniforms&&(r=n.getUniformLocation(t,"outShape",u),a=n.getUniformLocation(t,"outShapeStrides",u),o=n.getUniformLocation(t,"outTexShape",u)),e.customUniforms)for(const h of e.customUniforms)i.push(n.getUniformLocation(t,h.name,u));return{variablesLocations:s,customUniformLocations:i,infLoc:l,nanLoc:c,outShapeLocation:r,outShapeStridesLocation:a,outTexShapeLocation:o}}function QS(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const i=t.logicalShape,r=e[s],o=r.shape;if(!Et(i,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${o} must match`);if(t.isUniform&&r.isUniform)return;const a=t.texShape,l=r.isUniform?null:r.texData.texShape;if(!Et(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function gQ(n,e,t,s,i){e.program.enableShapeUniforms||(QS(e.inShapeInfos,t),QS([e.outShapeInfo],[s]));const r=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(r.texture,o[0],o[1]):n.setOutputMatrixTexture(r.texture,o[0],o[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),se().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const c=t[l],{uniform:u,offset:h,shape:d,texShape:p}=e.variablesLocations[l];if(d){const{uniformShape:f}=bv(e.program.packedInputs,c.shape,c.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,c.texData.texShape[0],c.texData.texShape[1]),u!=null){if(c.isUniform){if(ce(c.shape)<2)n.gl.uniform1f(u,c.uniformValues[0]);else{let f=c.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(u,f)}continue}c.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,u,l)}}const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=je(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&i)for(let l=0;l<e.program.customUniforms.length;++l){const c=e.program.customUniforms[l],u=e.customUniformLocations[l],h=i[l];if(c.type==="float")n.gl.uniform1fv(u,h);else if(c.type==="vec2")n.gl.uniform2fv(u,h);else if(c.type==="vec3")n.gl.uniform3fv(u,h);else if(c.type==="vec4")n.gl.uniform4fv(u,h);else if(c.type==="int")n.gl.uniform1iv(u,h);else if(c.type==="ivec2")n.gl.uniform2iv(u,h);else if(c.type==="ivec3")n.gl.uniform3iv(u,h);else if(c.type==="ivec4")n.gl.uniform4iv(u,h);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function xQ(n,e,t){let s="";e.concat(t).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=bv(n.packedInputs,o.shape,l);let d="",p="",f="";if(u.length===1&&n.packedInputs){const w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!n.packedInputs)p=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!n.packedInputs){const w=je(u);f=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}const g=o.shape.length,y=u.length===2&&Et(o.shape,l),m=ce(o.shape)===1,x=kl(o.shape,t.shape),v=!n.packedInputs&&g===t.shape.length&&Et(l,t.texData.texShape),b=n.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${g}_${v}_${c?h:""}_${u.length}_${m}_${x}_${y}_${d}_${p}_${f}_${b}_${a}`}else{const l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${a}`}});const i=n.userCode;let r=n.constructor.name;return r+="_"+s+"_"+i+`${se().getNumber("WEBGL_VERSION")}`,r}function Yn(n){return se().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yQ{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=hu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=cs();this.outputShape=e,this.enableShapeUniforms=Yn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Im(["r","c","d"],e):Ia(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bQ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=hu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=cs();this.outputShape=e,this.enableShapeUniforms=Yn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Im(["r","c","d"],e):Ia(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vQ{constructor(e){this.variableNames=["A"],this.outTexUsage=Fs.DOWNLOAD;const t=cs();this.outputShape=e,this.userCode=`
      ${dN}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wQ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Fs.DOWNLOAD;const t=cs();this.outputShape=e,this.userCode=`
      ${dN}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQ={R:0,G:1,B:2,A:3};class e_{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=cs();this.outputShape=e,this.enableShapeUniforms=Yn(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let o="";for(let a=0;a<s.length;a++){const l=s[a];o+=`
          if(offset == ${a}) {
            result = values[${SQ[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?yv():xv(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${i.texture2D}(A, uv);
          ${o}
        }
        ${i.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _Q{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=cs();this.outputShape=e,this.enableShapeUniforms=Yn(this.outputShape.length);let i="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const l=o*2+a;i+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?yv():xv(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${i}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CQ(n){const e=cs(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return aK(n,t)}function TQ(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return dK(n,e)}function IQ(n){const e=new Uint16Array([0,1,2,2,1,3]);return pK(n,e)}function zh(n,e,t,s,i,r){mK(e,t);const o=fK(n),a=n.TEXTURE_2D;return Pe(n,()=>n.bindTexture(a,o)),Pe(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Pe(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Pe(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),Pe(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),se().getNumber("WEBGL_VERSION")===1?Pe(n,()=>n.texImage2D(a,0,s,e,t,0,i,r,null)):Pe(n,()=>n.texStorage2D(a,1,s,e,t)),Pe(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:o,texShape:[t,e]}}function xN(n){return n.internalFormatFloat}function EQ(n,e,t,s){const[i,r]=Ph(e,t);return zh(n,i,r,xN(s),s.textureFormatFloat,n.FLOAT)}function yN(n){return n.internalFormatHalfFloat}function MQ(n,e,t,s){const[i,r]=Ph(e,t);return zh(n,i,r,yN(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function bN(n){return n.downloadTextureFormat}function kQ(n,e,t,s){const[i,r]=Ph(e,t);return zh(n,i,r,bN(s),n.RGBA,n.UNSIGNED_BYTE)}function vN(n){return n.internalFormatPackedFloat}function NQ(n,e,t,s){const[i,r]=ac(e,t);return zh(n,i,r,vN(s),n.RGBA,n.FLOAT)}function wN(n){return n.internalFormatPackedHalfFloat}function AQ(n,e,t,s){const[i,r]=ac(e,t);return zh(n,i,r,wN(s),n.RGBA,s.textureTypeHalfFloat)}function RQ(n,e,t){return Pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),YS(n,e,"clipSpacePos",t,3,20,0)&&YS(n,e,"uv",t,2,20,12)}function $Q(n,e,t,s,i,r){Pe(n,()=>n.bindTexture(n.TEXTURE_2D,e));let o,a,l;i instanceof Uint8Array?(o=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(o=new Float32Array(t*s*4),a=n.FLOAT,l=r.internalFormatPackedFloat),o.set(i),se().getNumber("WEBGL_VERSION")===2?Pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,o)):Pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,a,o)),Pe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function DQ(n,e,t){Pe(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?se().getNumber("WEBGL_VERSION")===2?Pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):Pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):se().getNumber("WEBGL_VERSION")===2?Pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):Pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),Pe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function LQ(n,e,t,s){const i=n.createBuffer();Pe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,i));const a=4*4*e*t;return Pe(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),Pe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),Pe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),i}function FQ(n,e,t){const s=n,i=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,i),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),i}function PQ(n,e,t,s){const[i,r]=Ph(e,t),o=4,a=new Uint8Array(eK(e*t,o));return Pe(n,()=>n.readPixels(0,0,i,r,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function OQ(n,e,t,s,i,r,o,a){const l=n,c=new Float32Array(tK(r,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function zQ(n,e,t){const s=new Float32Array(e*t*4);return Pe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zg{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=se().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,J7(t,e)):this.gl=Si(t),e=this.gl,se().getNumber("WEBGL_VERSION")===2){const r=e;this.createVertexArray=()=>Pe(r,()=>r.createVertexArray()),this.bindVertexArray=o=>Pe(r,()=>r.bindVertexArray(o)),this.deleteVertexArray=o=>Pe(r,()=>r.deleteVertexArray(o)),this.getVertexArray=()=>Pe(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(e!=null){const r=e.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Pe(e,()=>r.createVertexArrayOES()),this.bindVertexArray=o=>Pe(e,()=>r.bindVertexArrayOES(o)),this.deleteVertexArray=o=>Pe(e,()=>r.deleteVertexArrayOES(o)),this.getVertexArray=()=>Pe(e,()=>e.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),se().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=Ad(this.gl,r),Ys(this.gl,o))this.textureHalfFloatExtension=Ad(this.gl,o);else if(se().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Ys(this.gl,i))this.colorBufferHalfFloatExtension=Ad(this.gl,i);else if(se().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Ys(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Ys(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=TQ(this.gl),this.indexBuffer=IQ(this.gl),this.framebuffer=gK(this.gl),this.textureConfig=gv(this.gl,this.textureHalfFloatExtension)}get debug(){return se().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Pe(e,()=>e.finish()),Pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Pe(e,()=>e.deleteFramebuffer(this.framebuffer)),Pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Pe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Pe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),EQ(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),MQ(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),kQ(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),DQ(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,i){this.throwIfDisposed(),$Q(this.gl,e,t,s,i,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),AQ(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),NQ(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(JS(this.gl,this.framebuffer),this.outputTexture=null),Pe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>PQ(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,i,r,o){return OQ(this.gl,e,t,s,i,r,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return FQ(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const i=LQ(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(se().getBool("WEBGL_FENCE_API_ENABLED")){const i=e,r=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const o=i.clientWaitSync(r,0,0);return o===i.ALREADY_SIGNALED||o===i.CONDITION_SATISFIED},t=r}else se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>zQ(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=CQ(t));const s=uK(t);Pe(t,()=>t.attachShader(s,this.vertexShader)),Pe(t,()=>t.attachShader(s,e)),hK(t,s);const i=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Lg(t,i),i}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Pe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),RQ(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Pe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Lg(this.gl,this.program),Pe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?yK(this.gl,e,t):bK(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Pe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),vK(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[i,r]=ac(t,s);this.setOutputMatrixTextureDriver(e,i,r)}setOutputMatrixWriteRegion(e,t,s,i){this.setOutputMatrixWriteRegionDriver(s,e,i,t)}setOutputPackedMatrixWriteRegion(e,t,s,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Lg(this.gl,this.program),Rd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Pe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Pe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Ad(this.gl,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(i.TIME_ELAPSED_EXT,r),r}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await B1(()=>this.disposed||this.isQueryAvailable(e,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),i=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=BQ(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in se().platform&&(s=se().platform.setTimeoutCustom.bind(se().platform)),B1(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Fg(this.gl,e,this.framebuffer),this.debug&&Rd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Fg(this.gl,this.outputTexture,this.framebuffer),this.debug&&Rd(this.gl)):JS(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const i=this.gl;Fg(i,e,this.framebuffer),this.debug&&Rd(i),this.outputTexture=e,Pe(i,()=>i.viewport(0,0,t,s)),Pe(i,()=>i.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,i){this.throwIfDisposed(),Pe(this.gl,()=>this.gl.scissor(e,t,s,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function BQ(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:VQ,bincountImpl:SN,bincountReduceImpl:UQ,bitwiseAndImpl:WQ,castImpl:GQ,ceilImpl:HQ,concatImpl:jQ,equalImpl:XQ,expImpl:qQ,expm1Impl:ZQ,floorImpl:YQ,gatherNdImpl:JQ,gatherV2Impl:KQ,greaterImpl:QQ,greaterEqualImpl:eee,lessImpl:tee,lessEqualImpl:nee,linSpaceImpl:see,logImpl:iee,maxImpl:ree,maximumImpl:oee,minimumImpl:aee,multiplyImpl:lee,negImpl:cee,notEqualImpl:uee,prodImpl:hee,raggedGatherImpl:dee,raggedRangeImpl:pee,raggedTensorToTensorImpl:fee,rangeImpl:mee,rsqrtImpl:gee,scatterImpl:xee,sigmoidImpl:yee,simpleAbsImpl:_N,sliceImpl:bee,sparseFillEmptyRowsImpl:vee,sparseReshapeImpl:wee,sparseSegmentReductionImpl:CN,sqrtImpl:See,staticRegexReplaceImpl:_ee,stridedSliceImpl:Cee,stringNGramsImpl:Tee,stringSplitImpl:Iee,stringToHashBucketFastImpl:Eee,subImpl:Mee,tileImpl:kee,topKImpl:Nee,transposeImpl:vv,uniqueImpl:Aee}=Dq;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function ss(n,e){return e===1?[n]:TN(n,e)}function Ree(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ee{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Yn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=ss("rc",this.rank),s=$t(this.rank),i=this.getOutOfBoundsCondition(t),r=this.getSetup(t),o=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${i}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let r=`${s===0?"r":"rp1"}, ${i===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)r=`${e[e.length-1-o]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],i=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${i};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Yn(this.outputShape.length);let s="";for(let i=0;i<4;i++){let r="thisRC = rc;";i%2===1&&(r+="thisRC.z += 1;"),i>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${i}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${i>0?"}":""}
      `}this.userCode=`
      ${Dee(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?yv():xv(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function Dee(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?RK(["r","c","d"],"inputShape"):Ia(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lee{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const i=n_(t,s),r=s_(e,i,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const o=t_(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[r].pop();return this.usedTextures[r].push(l),l}let a;return i===Fn.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):i===Fn.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):i===Fn.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):i===Fn.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):i===Fn.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(e,t,s,i){if(this.freeTextures==null)return;const r=n_(s,i),o=s_(t,r,i);o in this.freeTextures||(this.freeTextures[o]=[]);const a=t_(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,i),l=se().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[o],u=c&&c.indexOf(e);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[u]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Fee(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function t_(n,e,t,s,i){const r=Pee(e,s);let o;if(i){const[l,c]=ac(n[0],n[1]);o=l*c}else{const[l,c]=Ph(n[0],n[1]);o=l*c}const a=Fee(t,r);return o*a}function Pee(n,e){switch(n){case Fn.PACKED_2X2_FLOAT32:return vN(e);case Fn.PACKED_2X2_FLOAT16:return wN(e);case Fn.UNPACKED_FLOAT32:return xN(e);case Fn.UNPACKED_FLOAT16:return yN(e);case Fn.PACKED_4X1_UNSIGNED_BYTE:return bN(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function Oee(n){return se().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Fn.PACKED_2X2_FLOAT32:Fn.UNPACKED_FLOAT32:n?Fn.PACKED_2X2_FLOAT16:Fn.UNPACKED_FLOAT16}function n_(n,e){if(n===Fs.UPLOAD)return Fn.PACKED_2X2_FLOAT32;if(n===Fs.RENDER||n==null)return Oee(e);if(n===Fs.DOWNLOAD||n===Fs.PIXELS)return Fn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function s_(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ui{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Yn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const si="if (isnan(x)) return x;",zee="return x;",i_="return abs(x);",Bee="return (x >= 0.0) ? x : (exp(x) - 1.0);",Vee=si+`
  return (x < 0.0) ? 0.0 : x;
`,Uee=si+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Wr="return x;",Wee="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gee="return x;",Hee=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,jee=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Xee=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qee="return 1.0 / (1.0 + exp(-1.0 * x));";class Xr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Yn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zee{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Yn(this.outputShape.length);const t=e.length,s=ss("rc",t),i=$t(t),r=Ree(t,s),o=s.slice(-2),a=t<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${i} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yee=JI,Jee=1e-7,Kee=1e-4,Ld={};function Qee(n){return n in Ld||(Ld[n]={}),Ld[n]}const ete=se().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),tte=600;function nte(){return se().global.screen==null?1024:se().global.screen.height*se().global.screen.width*window.devicePixelRatio*tte/1024/1024}class Em extends L0{nextDataId(){return Em.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!se().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof zg)t=e;else{const s=Si(se().getNumber("WEBGL_VERSION"),e);t=new zg(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Si(se().getNumber("WEBGL_VERSION"));t=new zg(s),this.binaryCache=Qee(se().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Lee(this.gpgpu),this.numMBBeforeWarning=nte(),this.texData=new gT(this,$i())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,i,r,o){const a=this.makeTensorInfo(t,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[i,r]},l.texShape=[i,r];const c=$d(t),u=new e_(c,!1,o),h=this.runWebGLProgram(u,[a],s,[[i,r]]);return h.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,t,s){if((se().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||se().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.texData.set(i,{shape:t,dtype:s,values:e,usage:Fs.UPLOAD,refCount:1}),i}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,i,r){if(se().getBool("DEBUG")&&this.checkNumericalProblems(t),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:i,values:t,usage:Fs.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:i,complexTensorInfos:r,slice:o,shape:a,isPacked:l}=t;if(o!=null){let d;l?d=new Xr(a,Wr):d=new Ui(a,Wr);const p=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:i}],i),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(i==="string")return s;const c=this.activeTimers!=null;let u;c&&(u=us());let h;if(i==="complex64"){const d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);h=Tr(d,p)}else h=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=us()-u),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(g=>f.push(g))}const t=this.texData.get(e),{values:s,shape:i,slice:r,dtype:o,complexTensorInfos:a,isPacked:l}=t;if(r!=null){let f;l?f=new Xr(i,Wr):f=new Ui(i,Wr);const g=this.runWebGLProgram(f,[{dataId:e,shape:i,dtype:o}],o),y=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),y}if(s!=null)return this.convertAndCacheOnCPU(e);if(se().getBool("DEBUG")&&!se().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&se().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(o!=="complex64"&&se().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const f=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(f.texture.texture,...Nd(i))}this.pendingRead.set(e,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),g=f[0],y=f[1];h=Tr(g,y)}else if(c==null)h=this.getValuesFromTexture(e);else{const f=ce(i);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const f=this.gpgpu.gl;Pe(f,()=>f.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&$i().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const s=this.texData.get(e),{values:i,shape:r,slice:o,dtype:a,isPacked:l,texture:c}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let p;l?p=new Xr(r,Wr):p=new Ui(r,Wr);const f=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:a}],a),g=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),g}if(c==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),h=$i().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(i=>ao(i));return ht(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ht(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!rK(s))throw se().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:i}=this.texData.get(e),r=ce(t);if(se().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Nd(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),f}const o=se().getBool("WEBGL_PACK")&&i===!0,a=o?$d(t):t,l=o?new wQ(a):new vQ(a),c=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let i=!1;this.programTimersStack==null?(this.programTimersStack=s,i=!0):this.activeTimers.push(s),this.activeTimers=s,e();const r=ta(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),o=ta(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,i&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);a.kernelMs=zB(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:o[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:us(),endMs:null}}endTimer(e){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=us(),e)}async getQueryTime(e){if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:i,usage:r,isPacked:o,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(i,s),this.textureManager.releaseTexture(t,i,r,o)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=ete){return se().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&ce(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Ls("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Yee(e.shape,t)}packedUnaryOp(e,t,s){const i=new Xr(e.shape,t),r=this.compileAndRun(i,[e],s);return $i().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const i=_N(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,i)}if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,i_,e.dtype);const t=new Ui(e.shape,i_),s=this.compileAndRun(t,[e]);return $i().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let i;if(t==="string"&&s!=null&&s.length>0&&Cu(s[0])){const r=s.map(o=>to(o));i=this.write(r,e,t)}else i=this.write(s,e,t);return this.texData.get(i).usage=null,{dataId:i,shape:e,dtype:t}}makeOutput(e,t,s){return $i().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new Zee(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new $ee(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[Fl(e.shape),...Pl(e.shape)],i={dtype:e.dtype,shape:s,dataId:e.dataId},r=[Fl(t),...Pl(t)],o=new IN(r,s),a=!0,l=[s],c=this.runWebGLProgram(o,[i],e.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:i,shape:r,dtype:o}=s;if(t!=null){const d=ce(r),p=t[0]*t[1]*4;A(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=$d(r);let l;i?l=new bQ(a):l=new yQ(a);const c=!0,u=[t??Nd(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:e}],o,u,c,t);return{dtype:o,shape:r,dataId:h.dataId}}runWebGLProgram(e,t,s,i,r=!1,o){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===hu.DENSE){const m=o??Nd(e.outputShape);l.texShape=m.map(x=>x*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),ce(a.shape)===0)return l.values=Hn(a.dtype,0),a;const c=[],u=t.map(m=>{if(m.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(m.dataId);if(x.texture==null){if(!e.packedInputs&&ce(m.shape)<=se().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=m.shape)}if(this.uploadToGPU(m.dataId),!!x.isPacked!=!!e.packedInputs)m=x.isPacked?this.unpackTensor(m):this.packTensor(m),c.push(m),x=this.texData.get(m.dataId);else if(x.isPacked&&!Tp(x.shape,m.shape)){const v=m,b=m.shape;m.shape=x.shape,m=this.packedReshape(m,b),c.push(m),x=this.texData.get(m.dataId),v.shape=b}return{shape:m.shape,texData:x,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=xQ(e,u,h),p=this.getAndSaveBinary(d,()=>mQ(this.gpgpu,e,u,h)),f=this.activeTimers!=null;let g;f&&(g=this.startTimer()),se().get("ENGINE_COMPILE_ONLY")||gQ(this.gpgpu,p,u,h,i),c.forEach(m=>this.disposeIntermediateTensorInfo(m)),f&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const y=se().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const m=us();m-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=m)}if(!se().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const m=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),m}return a}compileAndRun(e,t,s,i,r=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,i,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(se().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=te(()=>{if(!se().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=se().getBool("DEBUG");se().set("DEBUG",!1);const t=this.abs(It(1e-8)).dataSync()[0];if(se().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Jee:Kee}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:i,values:r,texture:o,usage:a,isPacked:l}=t;if(o!=null)return;const c=this.activeTimers!=null;let u;c&&(u=us());let h=t.texShape;if(h==null&&(h=_K(s,l),t.texShape=h),r!=null){const d=$d(s);let p,f=h[1],g=h[0];const y=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!y)&&([f,g]=ac(h[0],h[1])),l?p=new _Q(d,y):p=new e_(d,y);const m=y?[g,f]:h,x=this.makeTensorInfo(m,i),v=this.texData.get(x.dataId);y?v.usage=Fs.PIXELS:v.usage=Fs.UPLOAD,v.texShape=m,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,g,r);const b=[[g,f]],S=this.runWebGLProgram(p,[x],i,b,!0),_=this.texData.get(S.dataId);t.texShape=_.texShape,t.isPacked=_.isPacked,t.usage=_.usage,se().get("ENGINE_COMPILE_ONLY")?this.disposeData(S.dataId):(t.texture=_.texture,t.values=null,this.texData.delete(S.dataId)),this.disposeIntermediateTensorInfo(x),c&&(this.uploadWaitMs+=us()-u)}else{const d=this.acquireTexture(h,a,i,l);t.texture=d}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:i}=s;return t!=null&&(s.values=ste(t,i)),s.values}acquireTexture(e,t,s,i){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,i)}computeBytes(e,t){return e[0]*e[1]*ep(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(i=>{try{this.checkCompletion_(t),i(!0)}catch(r){throw r}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await fE(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(hN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:i,nanLoc:r,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:l}=gN(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=i,e.nanLoc=r,e.outShapeLocation=o,e.outShapeStridesLocation=a,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:i,height:r,width:o,channels:a}=e,l=$i().backend;if(!l.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(i,t,s,r,o,a);return $i().makeTensorFromDataId(c,t,s,l)}}Em.nextDataId=0;function ste(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */cI()&&pI("webgl",()=>new Em,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wv=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class pa{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=lt(t,s),this.enableShapeUniforms=Yn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ma=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class dc{constructor(e,t,s,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=lt(t,s);const r=this.outputShape.length;this.enableShapeUniforms=Yn(r);let o="";if(i)if(r===0||ce(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${$t(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=ss("coords",r);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ms(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const ite={kernelName:Hu,backendName:"webgl",kernelFunc:Ms};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function To(n){const{inputs:e,backend:t}=n,{real:s,imag:i}=e,r=t.makeTensorInfo(s.shape,"complex64"),o=t.texData.get(r.dataId),a=Ms({inputs:{x:s},backend:t}),l=Ms({inputs:{x:i},backend:t});return o.complexTensorInfos={real:a,imag:l},r}const rte={kernelName:q0,backendName:"webgl",kernelFunc:To};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EN="return (a < 0.) ? b * a : a;",MN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function ote(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{alpha:r}=s,o=t.makeTensorInfo([],"float32",xo(r,"float32")),a=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dc(MN,i.shape,o.shape):new pa(EN,i.shape,o.shape),l=t.runWebGLProgram(a,[i,o],"float32");return t.disposeIntermediateTensorInfo(o),l}const ate={kernelName:wf,backendName:"webgl",kernelFunc:ote};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kN="return (a < 0.) ? b * a : a;",NN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function lte(n){const{inputs:e,backend:t}=n,{x:s,alpha:i}=e,r=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dc(NN,s.shape,i.shape):new pa(kN,s.shape,i.shape);return t.runWebGLProgram(r,[s,i],"float32")}const cte={kernelName:Bf,backendName:"webgl",kernelFunc:lte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pc="if (isnan(x)) return x;";function wt({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:i,backend:r})=>{const{x:o}=i,a=r,l=s||o.dtype;if(a.shouldExecuteOnCPU([o])&&t!=null){const h=a.texData.get(o.dataId),d=t(h.values,l);return a.makeTensorInfo(o.shape,l,d)}const c=se().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let u;return c?u=new Xr(o.shape,e):u=new Ui(o.shape,n),a.runWebGLProgram(u,[o],l)}}function Un({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:i,dtype:r}){return({inputs:o,backend:a})=>{const{a:l,b:c}=o,u=a;if(s&&l.dtype==="complex64"){const f=u.texData.get(l.dataId),g=u.texData.get(c.dataId),[y,m]=[[f.complexTensorInfos.real,g.complexTensorInfos.real],[f.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(v=>{const[b,w]=v,S={dataId:b.dataId,dtype:b.dtype,shape:l.shape},_={dataId:w.dataId,dtype:w.dtype,shape:c.shape},I=new pa(n,l.shape,c.shape);return u.runWebGLProgram(I,[S,_],Is(b.dtype,w.dtype))}),x=To({inputs:{real:y,imag:m},backend:u});return u.disposeIntermediateTensorInfo(y),u.disposeIntermediateTensorInfo(m),x}const h=r||Is(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&i!=null){const f=u.texData.get(l.dataId).values,g=u.texData.get(c.dataId).values,y=l.dtype==="string"?Ir(f):f,m=l.dtype==="string"?Ir(g):g,[x,v]=i(l.shape,c.shape,y,m,h),b=u.makeTensorInfo(v,h),w=u.texData.get(b.dataId);return w.values=x,b}const d=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new dc(e,l.shape,c.shape,t):p=new pa(n,l.shape,c.shape),u.runWebGLProgram(p,[l,c],h)}}function du(n,e=!1){if(n==="linear")return e?Gee:zee;if(n==="relu")return e?jee:Vee;if(n==="elu")return e?Hee:Bee;if(n==="relu6")return e?Xee:Uee;if(n==="prelu")return e?NN:kN;if(n==="leakyrelu")return e?MN:EN;if(n==="sigmoid")return e?qee:Wee;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AN{constructor(e,t,s,i=!1,r=!1,o=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Yn(this.outputShape.length);const u=i?e[1]:e[2],h=Math.ceil(u/2),d=i?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",f=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",m="";a&&(l?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:y=`vec4 activation(vec4 x) {
          ${a}
        }`,m="result = activation(result);");const x=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let v="rc.x",b="rc.x";e[0]<t[0]?v=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${v};
        int batchB = ${b};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${g[0]});
          result += (${f[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${m}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r_={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class o_{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=lt(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a_="return a * b;";function Sv(n){const{inputs:e,backend:t}=n,{a:s,b:i}=e,r=Is(s.dtype,i.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),l=t.texData.get(i.dataId),c=new o_(r_.REAL,s.shape,i.shape),u=new o_(r_.IMAG,s.shape,i.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:i.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:i.shape}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(u,h,"float32"),f=To({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,i])){const a=t.texData.get(s.dataId),l=t.texData.get(i.dataId),[c,u]=lee(s.shape,i.shape,a.values,l.values,r),h=t.makeTensorInfo(u,r),d=t.texData.get(h.dataId);return d.values=c,h}let o;return se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new dc(a_,s.shape,i.shape):o=new pa(a_,s.shape,i.shape),t.runWebGLProgram(o,[s,i],r)}const ute={kernelName:eh,backendName:"webgl",kernelFunc:Sv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hte(n,e,t){const s=[Fl(n.shape),...Pl(n.shape)],i={dtype:n.dtype,shape:s,dataId:n.dataId},r=[Fl(e),...Pl(e)],o=new IN(r,s),a=!0,l=[s],c=t.runWebGLProgram(o,[i],n.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ae(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{shape:r}=s,o=t,a=ce(i.shape),l=yT(r,a),c=ce(l);A(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=o.texData.get(i.dataId);return u.isPacked&&!Tp(i.shape,l)&&!(u.texture!==null&&Tp(u.shape,l))?hte(i,l,o):(o.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype})}const dte={kernelName:Uf,backendName:"webgl",kernelFunc:Ae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l_{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:i,inSize:r,outSize:o}=e;this.outputShape=[i,o];const a=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(t!=null){const h=1/t;c=`sumValue += dot(values * ${Tl(h)?h.toPrecision(2):h}, ones);`}let u="";r%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pte{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:i,inSize:r,outSize:o}=e;this.outputShape=[i,o];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const u=Math.floor(s/4)*4,h=s%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fte(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=hm(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function ka(n,e,t,s){const i=fte(n.shape);let r=n;for(let o=0;o<i.length;o++){const{inSize:a,windowSize:l,outSize:c}=i[o];let u,h;t==="mean"?u=o===0?new l_({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},a):new l_({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c}):u=new pte({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},t),h=r,r=s.runWebGLProgram(u,[r],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mte{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let o=0;o<s.length;o++)s[o]=e[t[o]];this.outputShape=s,this.rank=s.length;const i=$t(this.rank),r=gte(t);this.userCode=`
    void main() {
      ${i} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function gte(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let i=0;i<n.length;i++)s[n[i]]=t[i];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xte{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let u=0;u<s.length;u++)s[u]=e[t[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=$t(this.rank),r=TN("rc",this.rank),o=new Array(this.rank);for(let u=0;u<t.length;u++)o[t[u]]=r[u];const a=`vec2(${o.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${i} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mm(n,e,t){const s=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xte(n.shape,e):new mte(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yte(n,e,t,s){const i=e,r=n.shape.length,o=dt(i,n.shape);let a=o;const l=nn(a,r),c=l!=null;let u=n;c&&(u=Mm(n,l,s),a=un(a.length,r)),Vn("sum",a,r);const[h,d]=Dn(u.shape,a);let p=h;t&&(p=xn(h,o));const f=ce(d),y=ce(n.shape)/f,m=Ae({inputs:{x:u},attrs:{shape:[y,f]},backend:s}),x=ky(n.dtype),v=ka(m,x,"sum",s),b=Ae({inputs:{x:v},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(v),c&&s.disposeIntermediateTensorInfo(u),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function km(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:o}=s;return yte(i,r,o,t)}const bte={kernelName:qf,backendName:"webgl",kernelFunc:km};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function as(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{perm:r}=s,o=t,a=i.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=i.shape[r[u]];let c;if(o.shouldExecuteOnCPU([i])){const h=o.texData.get(i.dataId).values,d=vv(h,i.shape,i.dtype,r,l);c=o.makeTensorInfo(l,i.dtype);const p=o.texData.get(c.dataId);p.values=d}else c=Mm(i,r,o);return c}const vte={kernelName:fl,backendName:"webgl",kernelFunc:as};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RN=1e3;function Ip({a:n,b:e,transposeA:t,transposeB:s,backend:i,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const c=n.shape.length,u=e.shape.length,h=t?n.shape[c-2]:n.shape[c-1],d=s?e.shape[u-1]:e.shape[u-2],p=t?n.shape[c-1]:n.shape[c-2],f=s?e.shape[u-2]:e.shape[u-1],g=n.shape.slice(0,-2),y=e.shape.slice(0,-2),m=ce(g),x=ce(y),b=lt(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);A(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const w=t?[m,h,p]:[m,p,h],S=s?[x,f,d]:[x,d,f],_=Ae({inputs:{x:n},backend:i,attrs:{shape:w}}),I=Ae({inputs:{x:e},backend:i,attrs:{shape:S}}),N=[_,I],k=Math.max(m,x),M=t?_.shape[1]:_.shape[2],T=r!=null,C=o!=null,R=l==="leakyrelu",L=l!=null?du(l,!0):null,$=T||C||R||L!=null;let O;if((p===1||f===1)&&M>RN&&$===!1){let Z=_,H=I;t&&(Z=as({inputs:{x:_},backend:i,attrs:{perm:[0,2,1]}}),N.push(Z)),s&&(H=as({inputs:{x:I},backend:i,attrs:{perm:[0,2,1]}}),N.push(H));const j=f!==1,ne=f===1;let ee=Z;j&&(ee=Ae({inputs:{x:Z},backend:i,attrs:{shape:[k,M,1]}}),N.push(ee));const oe=f===1?2:1;let ue=H;ne&&(ue=Ae({inputs:{x:H},backend:i,attrs:{shape:[k,1,M]}}),N.push(ue));const Q=Sv({inputs:{a:ee,b:ue},backend:i});O=km({inputs:{x:Q},backend:i,attrs:{axis:oe,keepDims:!0}}),N.push(Q)}else{const Z=Is(n.dtype,e.dtype),H=new AN(w,S,[k,p,f],t,s,T,L,C,R),j=[_,I];if(r!=null&&j.push(r),C&&j.push(o),R){const ne=i.makeTensorInfo([],"float32",xo(a,"float32"));j.push(ne),N.push(ne)}O=i.runWebGLProgram(H,j,Z)}const G=Ae({inputs:{x:O},backend:i,attrs:{shape:b}});N.push(O);for(const Z of N)i.disposeIntermediateTensorInfo(Z);return G}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wte(n){const{inputs:e,backend:t,attrs:s}=n,{a:i,b:r,bias:o,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;return Ip({a:i,b:r,transposeA:l,transposeB:c,backend:t,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const Ste={kernelName:tp,backendName:"webgl",kernelFunc:wte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c_="return abs(x);";function _te(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=t.texData.get(s.dataId),o=_N(r.values);return t.makeTensorInfo(s.shape,s.dtype,o)}let i;return se().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Xr(s.shape,c_):i=new Ui(s.shape,c_),t.runWebGLProgram(i,[s],s.dtype)}const Cte={kernelName:ef,backendName:"webgl",kernelFunc:_te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tte=si+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Ite=wt({opSnippet:Tte}),Ete={kernelName:Tu,backendName:"webgl",kernelFunc:Ite};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mte=si+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,kte=wt({opSnippet:Mte}),Nte={kernelName:Iu,backendName:"webgl",kernelFunc:kte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u_="return a + b;",Ate=Un({opSnippet:u_,packedOpSnippet:u_,supportsComplex:!0,cpuKernelImpl:VQ}),Rte={kernelName:ec,backendName:"webgl",kernelFunc:Ate};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $te{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,o)=>`T${o}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dte{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,o)=>`T${o}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bd(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Ms({inputs:{x:s[0]},backend:t});if(s.length>se().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=Bd({inputs:s.slice(0,l),backend:t}),u=Bd({inputs:s.slice(l),backend:t});return Bd({inputs:[c,u],backend:t})}const i=s.map(l=>l.dtype).reduce((l,c)=>Is(l,c)),r=s.map(l=>l.shape),a=se().getBool("WEBGL_PACK")?new Dte(s[0].shape,r):new $te(s[0].shape,r);return t.runWebGLProgram(a,s,i)}const Lte={kernelName:V0,backendName:"webgl",kernelFunc:Bd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fte(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:o}=s,a=i.shape.length,l=dt(r,i.shape);let c=l;const u=nn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:t,attrs:{perm:u}}),c=un(c.length,a)),Vn("all",c,a);const[d,p]=Dn(h.shape,c),f=ce(p),g=Ae({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),y=ka(g,g.dtype,"all",t);let m;if(o){const x=xn(d,l);m=Ae({inputs:{x:y},backend:t,attrs:{shape:x}})}else m=Ae({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),u!=null&&t.disposeIntermediateTensorInfo(h),m}const Pte={kernelName:U0,backendName:"webgl",kernelFunc:Fte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ote(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:o}=s,a=i.shape.length,l=dt(r,i.shape);let c=l;const u=nn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:t,attrs:{perm:u}}),c=un(c.length,a)),Vn("any",c,a);const[d,p]=Dn(h.shape,c),f=ce(p),g=Ae({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),y=ka(g,g.dtype,"any",t);let m;if(o){const x=xn(d,l);m=Ae({inputs:{x:y},backend:t,attrs:{shape:x}})}else m=Ae({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),u!=null&&t.disposeIntermediateTensorInfo(h),m}const zte={kernelName:W0,backendName:"webgl",kernelFunc:Ote};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bte{constructor(e,t,s){this.variableNames=["A"];const{windowSize:i,batchSize:r,outSize:o}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,o];const a=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${i}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vte{constructor(e,t,s,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,A(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=e[e.length-1],o=Math.ceil(r/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),i||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=$t(l),u=ss("coords",l);let h,d;if(o===1){d=l+1;const I=$t(d);h=`
        ${I} sourceLocR = ${I}(${u.join()}, 0);
        ++${u[l-1]};
        ${I} sourceLocG = ${I}(${u.join()}, 0);
        ++${u[l-2]};
        ${I} sourceLocA = ${I}(${u.join()}, 0);
        --${u[l-1]};
        ${I} sourceLocB = ${I}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],g=p.map(I=>"int "+I),y=ss("sourceLocR",d-1).concat("inIdx.r"),m=ss("sourceLocG",d-1).concat("inIdx.g"),x=ss("sourceLocB",d-1).concat("inIdx.b"),v=ss("sourceLocA",d-1).concat("inIdx.a"),b=s==="max"?"greaterThan":"lessThan",w=i?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${v.join()})));`,S=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${m.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,_=i?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${_}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${S};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${S};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n,e,t,s=null){let i=e.shape[0],r=e.shape[1];s!=null&&(i=s.shape[0],r=s.shape[1]);const o=hm(r),a={windowSize:o,inSize:r,batchSize:i,outSize:Math.ceil(r/o)},l=new Bte(a,t,s==null),c=[e];s!=null&&c.push(s);const u=n.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=$N(n,e,t,u);return n.disposeIntermediateTensorInfo(u),h}function DN(n,e,t,s=null){const i=s!=null?s.shape:e.shape,r=i[i.length-1],o=hm(r),a=new Vte(i,o,t,s==null),l=s==null?[e]:[e,s],c=n.runWebGLProgram(a,l,"int32");if(c.shape.length===e.shape.length){const u=DN(n,e,t,c);return n.disposeIntermediateTensorInfo(c),u}return c}function LN(n,e,t,s){const i=[t];if(Vn("arg"+s.charAt(0).toUpperCase()+s.slice(1),i,e.shape.length),!se().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const r=[],o=n.texData.get(e.dataId),a=o!==null&&o.isPacked;let l=e;a&&(l=n.unpackTensor(e),r.push(l));const[c,u]=Dn(l.shape,i),h=ce(u),d=Ae({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});r.push(d);const p=$N(n,d,s);r.push(p);const f=Ae({inputs:{x:p},backend:n,attrs:{shape:c}});return r.forEach(g=>n.disposeIntermediateTensorInfo(g)),f}return DN(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ute(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r}=s;let o=dt(r,i.shape);const a=nn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=as({inputs:{x:i},backend:t,attrs:{perm:a}}),c.push(l),o=un(o.length,l.shape.length)),Vn("argMax",[o[0]],l.shape.length);const u=LN(t,l,o[0],"max");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const Wte={kernelName:tf,backendName:"webgl",kernelFunc:Ute};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gte(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r}=s;let o=dt(r,i.shape);const a=nn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=as({inputs:{x:i},backend:t,attrs:{perm:a}}),c.push(l),o=un(o.length,l.shape.length)),Vn("argMin",[o[0]],l.shape.length);const u=LN(t,l,o[0],"min");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const Hte={kernelName:nf,backendName:"webgl",kernelFunc:Gte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jte=si+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Xte=wt({opSnippet:jte}),qte={kernelName:Eu,backendName:"webgl",kernelFunc:Xte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zte=si+"return log(x + sqrt(x * x + 1.0));",Yte=wt({opSnippet:Zte}),Jte={kernelName:Mu,backendName:"webgl",kernelFunc:Yte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kte=si+`
  return atan(x);
`,Qte=wt({opSnippet:Kte}),ene={kernelName:ku,backendName:"webgl",kernelFunc:Qte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tne=wv+`
  return atan(a, b);
`,nne=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ma+`
  return result;
`,sne=Un({opSnippet:tne,packedOpSnippet:nne}),ine={kernelName:Au,backendName:"webgl",kernelFunc:sne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rne=si+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,one=wt({opSnippet:rne}),ane={kernelName:Nu,backendName:"webgl",kernelFunc:one};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pu{constructor(e,t,s,i=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,a=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const g=t==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(g||(x="-1.0 / 1e-20"),s){const I=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${I} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${i?r?y:m:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(b="avgValue / max(count, 1.0)");const w=Math.floor(o/4)*4,S=o%4,_=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${_}
          }

          int xC = xCCorner + ${w};
          if (${S===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${_}
          } else if (${S===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${_}
          } else if (${S===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${_}
          }
        }
        setOutput(${b});
      }
    `}}class _v{constructor(e,t,s,i=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,a=e.strideDepth,l=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,g=e.effectiveFilterWidth,y=e.padInfo.front,m=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const v=t==="avg";let b="0.0";if(v||(b="-1.0 / 1e-20"),s){const k=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${y}, ${m}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${k} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${i?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let S=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(S="avgValue / max(count, 1.0)");const _=Math.floor(o/4)*4,I=o%4,N=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${y}, ${m}, ${x});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${_}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${N}
            }

            int xC = xCCorner + ${_};
            if (${I===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${I===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${I===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${N}
            }
          }
        }
        setOutput(${S});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lne(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e;Oh(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=s,c=1;A(qn(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=ti(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Et(u.inShape,u.outShape))return Ms({inputs:{x:i},backend:t});const h=new pu(u,"avg",!1);return t.runWebGLProgram(h,[i],"float32")}const cne={kernelName:sf,backendName:"webgl",kernelFunc:lne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function une(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],h=Ar(i.shape,r,o,u,a,l,c),d=new _v(h,"avg",!1);return t.runWebGLProgram(d,[i],"float32")}const hne={kernelName:rf,backendName:"webgl",kernelFunc:une};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dne{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,i=e.strideHeight,r=e.strideWidth,o=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=l-1-e.padInfo.top,h=c-1-e.padInfo.left,d=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class pne{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,i=e.filterWidth,r=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,g=d-1-e.padInfo.top,y=p-1-e.padInfo.left,m=1/(t*s*i);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${g}, ${y});
      const float avgMultiplier = float(${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fne(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=Ar(o.shape,a,l,h,c,u),p=new pne(d);return t.runWebGLProgram(p,[i],o.dtype)}const mne={kernelName:H0,backendName:"webgl",kernelFunc:fne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gne(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,o=r;Oh([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=ti(o.shape,a,l,1,c),h=new dne(u);return t.runWebGLProgram(h,[i],o.dtype)}const xne={kernelName:G0,backendName:"webgl",kernelFunc:gne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yne(n){const{inputs:e,backend:t,attrs:s}=n,{a:i,b:r}=e,{transposeA:o,transposeB:a}=s;return Ip({a:i,b:r,transposeA:o,transposeB:a,backend:t})}const bne={kernelName:of,backendName:"webgl",kernelFunc:yne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vne{constructor(e,t,s,i,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],lt(e,t),lt(e,s);let a="0.0";i!=null&&(lt(e,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";r!=null&&(lt(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wne{constructor(e,t,s,i,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],lt(e,t),lt(e,s);let a="vec4(0.0)";i!=null&&(lt(e,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(lt(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sne=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:i,variance:r,offset:o,scale:a}=n;A(i.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const c=[s,i,r];let u=null;o!=null&&(u=o.shape,c.push(o));let h=null;a!=null&&(h=a.shape,c.push(a));const d=se().getBool("WEBGL_PACK_NORMALIZATION")?new wne(s.shape,i.shape,r.shape,u,h,l):new vne(s.shape,i.shape,r.shape,u,h,l);return e.runWebGLProgram(d,c,c[0].dtype)},_ne={kernelName:yf,backendName:"webgl",kernelFunc:Sne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cne{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=$t(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=Tne(this.rank);let i;const r=e.map((o,a)=>`sourceLoc.${Hx[a]} = start[${a}] + coords.${Hx[a]};`);i=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${i}
        setOutput(getSource(${s}));
      }
    `}}const Hx=["x","y","z","w","u","v"];function Tne(n){if(n===1)return"sourceLoc";if(n<=6)return Hx.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ine{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=$t(this.rank),s=ss("coords",this.rank),i=ss("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${i.slice(-2).join()})`,o=`getChannel(getSource(${i.join()}), ${r})`,a=`
      result.x = ${o};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${i[this.rank-1]};
        result.y = ${o};
        --${i[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${i[this.rank-2]};
        result.z = ${o};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${i[this.rank-1]};
          result.w = ${o};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,h)=>`start[${h}]`).join()});`:e.map((u,h)=>`${i[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ene(n,e,t,s){const i=s.texData.get(n.dataId),r=s.makeTensorInfo(t,n.dtype),o=s.texData.get(r.dataId);Object.assign(o,i),o.refCount=1,o.shape=t,o.dtype=n.dtype;let a=xb(e,je(n.shape));i.slice&&(a+=i.slice.flatOffset),o.slice={flatOffset:a,origDataId:i.slice&&i.slice.origDataId||n.dataId};const l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),r}function fc(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{begin:r,size:o}=s,[a,l]=um(i,r,o);if(fb(i,a,l),ce(l)===0)return t.makeTensorInfo(l,i.dtype,[]);if(t.shouldExecuteOnCPU([i])||i.dtype==="string"){const h=t.texData.get(i.dataId),d=bee(h.values,a,l,i.shape,i.dtype);return t.makeTensorInfo(l,i.dtype,d)}const{isPacked:c}=t.texData.get(i.dataId),u=gb(i.shape,a,l);if(c||!u){const h=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ine(l):new Cne(l),d=[a];return t.runWebGLProgram(h,[i],i.dtype,d)}return t.uploadToGPU(i.dataId),Ene(i,a,l,t)}const Mne={kernelName:Xf,backendName:"webgl",kernelFunc:fc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kne=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockShape:r,crops:o}=s;A(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((x,v)=>x*v),l=Th(i.shape,r,a),c=Ih(l.length,r.length),u=Eh(i.shape,r,a),h=Sb(o,r.length),d=_b(u,o,r.length),p=[],f=Ae({inputs:{x:i},backend:t,attrs:{shape:l}}),g=as({inputs:{x:f},backend:t,attrs:{perm:c}}),y=Ae({inputs:{x:g},backend:t,attrs:{shape:u}}),m=fc({inputs:{x:y},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(y),p.forEach(x=>t.disposeIntermediateTensorInfo(x)),m},Nne={kernelName:af,backendName:"webgl",kernelFunc:kne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ane(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,weights:r}=e,{size:o}=s,a=t.readSync(i.dataId),l=t.readSync(r.dataId),c=SN(a,l,r.dtype,r.shape,o);return t.makeTensorInfo([o],r.dtype,c)}const Rne={kernelName:j0,backendName:"webgl",kernelFunc:Ane};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ne=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Dne=`
  return float(int(a.r) & int(b.r));
`;function Lne(n){const{inputs:e,backend:t}=n,{a:s,b:i}=e,r=se().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=se().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,i])||o===1){const l=t.texData.get(s.dataId).values,c=t.texData.get(i.dataId).values,[u,h]=WQ(s.shape,i.shape,l,c,s.dtype),d=t.makeTensorInfo(h,s.dtype),p=t.texData.get(d.dataId);return p.values=u,d}let a;return r?a=new dc($ne,s.shape,i.shape,!1):a=new pa(Dne,s.shape,i.shape),t.runWebGLProgram(a,[s,i],s.dtype)}const Fne={kernelName:X0,backendName:"webgl",kernelFunc:Lne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pne(n){const{inputs:e,backend:t}=n,{s0:s,s1:i}=e,r=t.readSync(s.dataId),o=t.readSync(i.dataId),a=lt(Array.from(r),Array.from(o));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const One={kernelName:CT,backendName:"webgl",kernelFunc:Pne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zne="return float(a != b);",FN=Un({opSnippet:zne,cpuKernelImpl:uee,dtype:"bool"}),Bne={kernelName:Lf,backendName:"webgl",kernelFunc:FN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bh(n){const{inputs:e,backend:t}=n,{input:s}=e,i=t.texData.get(s.dataId);return Ms({inputs:{x:i.complexTensorInfos.real},backend:t})}const Vne={kernelName:yy,backendName:"webgl",kernelFunc:Bh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Une="return float(int(x));";function Wne(n,e){const t=new Ui(n.shape,Une),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jx(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{dtype:r}=s;if(r==="complex64"){if(i.dtype==="complex64")return Ms({inputs:{x:i},backend:t});const o=An(i.shape),a=jx({inputs:{x:i},backend:t,attrs:{dtype:"float32"}}),l=To({inputs:{real:a,imag:o},backend:t});return o.dispose(),t.disposeIntermediateTensorInfo(a),l}if(i.dtype==="complex64"){const o=Bh({inputs:{input:i},backend:t}),a=jx({inputs:{x:o},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(o),a}if(!bT(i.dtype,r)){const o=Ms({inputs:{x:i},backend:t});return{dataId:o.dataId,shape:o.shape,dtype:r}}if(t.shouldExecuteOnCPU([i])){const o=t.texData.get(i.dataId).values,[a,l,c]=GQ(o,i.shape,i.dtype,r);return t.makeTensorInfo(a,l,c)}if(r==="int32")return Wne(i,t);if(r==="bool"){const o=t.makeTensorInfo([],"bool",Hn("bool",1)),l=FN({inputs:{a:i,b:o},backend:t});return t.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${r}`)}const Gne={kernelName:Ru,backendName:"webgl",kernelFunc:jx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h_="return ceil(x);",Hne=wt({opSnippet:h_,packedOpSnippet:h_,cpuKernelImpl:HQ}),jne={kernelName:$u,backendName:"webgl",kernelFunc:Hne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xne{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qne{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zne(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{clipValueMin:r,clipValueMax:o}=s;let a;se().getBool("WEBGL_PACK_CLIP")?a=new qne(i.shape):a=new Xne(i.shape);const l=[[r],[o]];return t.runWebGLProgram(a,[i],i.dtype,l)}const Yne={kernelName:Du,backendName:"webgl",kernelFunc:Zne};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jne{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function Kne(n){const{inputs:e,backend:t}=n,{x:s}=e,i=t.texData.get(s.dataId),r=new Jne(s.shape),o=[d_(s,i.complexTensorInfos.real),d_(s,i.complexTensorInfos.imag)];return t.runWebGLProgram(r,o,o[0].dtype)}const Qne={kernelName:lf,backendName:"webgl",kernelFunc:Kne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ese{constructor(e){this.outputShape=[],this.outputShape=qi(e,1),this.variableNames=e.map((o,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<t.length;o++){const a=t[o-1];s.push(`else if (yC < ${t[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const i=t.length,r=t[t.length-1];s.push(`else setOutput(getT${i}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tse{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=qi(e,t);const s=this.outputShape,i=s.length,r=$t(i),o=ss("coords",i),a=["x","y","z","w","u","v"].slice(0,i);this.variableNames=e.map((g,y)=>`T${y}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let g=1;g<l.length;g++)l[g]=l[g-1]+e[g][t];const c=a[t],u=a.slice(-2),h=a.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let g=1;g<l.length;g++){const y=l[g-1];d+=`
        if (${c} < ${l[g]}  && ${c} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${Fd(a,c,y)}),
            vec2(${Fd(u,c,y)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${Fd(a,c,f)}),
          vec2(${Fd(u,c,f)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[i-1]} = ${o[i-1]} + 1;
        if (${o[i-1]} < ${s[i-1]}) {
          result.g = getValue(${o});
        }

        ${o[i-2]} = ${o[i-2]} + 1;
        if (${o[i-2]} < ${s[i-2]}) {
          result.a = getValue(${o});
        }

        ${o[i-1]} = ${o[i-1]} - 1;
        if (${o[i-2]} < ${s[i-2]} &&
            ${o[i-1]} < ${s[i-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function Fd(n,e,t){const s=n.indexOf(e);return n.map((r,o)=>o===s?`${r} - ${t}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nm(n){const{inputs:e,backend:t}=n,{input:s}=e,i=t.texData.get(s.dataId);return Ms({inputs:{x:i.complexTensorInfos.imag},backend:t})}const nse={kernelName:uy,backendName:"webgl",kernelFunc:Nm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pc(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(x=>Bh({inputs:{input:x},backend:t})),f=n.map(x=>Nm({inputs:{input:x},backend:t})),g=Pc(p,e,t),y=Pc(f,e,t),m=To({inputs:{real:g,imag:y},backend:t});return p.forEach(x=>t.disposeIntermediateTensorInfo(x)),f.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),m}let i=t.shouldExecuteOnCPU(n);if(s==="string"&&(i=!0),i){const p=n.map(b=>{const S=[-1,ce(b.shape.slice(e))];return Ae({inputs:{x:b},backend:t,attrs:{shape:S}})}),f=p.map(b=>({vals:t.readSync(b.dataId),shape:b.shape})),g=qi(p.map(b=>b.shape),1),y=p[0].shape[0]===1,m=jQ(f,g,s,y),x=qi(n.map(b=>b.shape),e),v=t.makeTensorInfo(x,s,m);return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),v}const r=n.filter(p=>ce(p.shape)>0),o=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const p=o?new Ui(n[0].shape,Wr):new Xr(n[0].shape,Wr);return t.runWebGLProgram(p,n,s)}const a=se().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>a){const p=[];for(let g=0;g<r.length;g+=a){const y=r.slice(g,g+a);p.push(Pc(y,e,t))}const f=Pc(p,e,t);for(const g of p)t.disposeIntermediateTensorInfo(g);return f}if(o){const p=new tse(r.map(f=>f.shape),e);return t.runWebGLProgram(p,r,s)}const{tensors2D:l,outShape:c}=sse(r,e,t),u=new ese(l.map(p=>p.shape)),h=t.runWebGLProgram(u,l,s);l.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=Ae({inputs:{x:h},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(h),d}function sse(n,e,t){const s=qi(n.map(r=>r.shape),e);return{tensors2D:n.map(r=>Ae({inputs:{x:r},attrs:{shape:[-1,ce(r.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(n){const{inputs:e,backend:t,attrs:s}=n,{axis:i}=s,r=dt(i,e[0].shape)[0],o=e.map(c=>c.shape);bb(o,r);const a=qi(e.map(c=>c.shape),r);if(ce(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(c=>ce(c.shape)>0);return l.length===1?Ms({inputs:{x:l[0]},backend:t}):Pc(l,r,t)}const ise={kernelName:cf,backendName:"webgl",kernelFunc:PN};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ON{constructor(e,t=!1,s=null,i=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,g=e.inChannels%4,y=e.dataFormat==="channelsLast",m=y?1:2,x=y?2:3,v=y?3:1;let b="",w="";s&&(i?b=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?b=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`
          float activation(float x) {
            ${s}
          }
        `,w="result = activation(result);");const S=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${m}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${S}
        ${w}
        setOutput(result);
      }
    `}}class rse{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left,r=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,g=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${o}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${i});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zN{constructor(e,t=!1,s=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Yn(this.outputShape.length);const o=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<u;y++)d+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<u;y++)d+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(h+1)/2;y++){const m=y*2;if(d+=`
           xC = xCCorner + ${m*l};
           `,a===1){if(m<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }
               `,l===1&&m>0?d+=`
                 xC${m} = vec4(xTexelC${m-2}.zw, xTexelC${m}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${m} = vec4(previous.zw, xTexelC${m}.xy);
                   } else {
                     xC${m} = vec4(0.0, 0.0, xTexelC${m}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }

                 xC${m} = xTexelC${m};
                 `,m+1<u)){const x=o%2===0?F0(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m+1}Ready == 0) {
                     xTexelC${m+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${m+1}.zw = vec2(0.0);
                     }
                     xTexelC${m+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${m+1} = vec4(previous.zw, xTexelC${m+1}.xy);
                     } else {
                      xC${m+1} = vec4(0.0, 0.0, xTexelC${m+1}.xy);
                     }
                     `:d+=`
                     xC${m+1} = vec4(xTexelC${m}.zw, xTexelC${m+1}.xy);
                     `):x===1?d+=`
                     xC${m+1} = xTexelC${m};
                     `:d+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m+1}Ready == 0) {
                       xTexelC${m+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${m+1}.zw = vec2(0.0);
                       }
                       xTexelC${m+1}Ready = 1;
                     }

                     xC${m+1} = xTexelC${m+1};
                     `}}else m<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${m+1}Ready == 0) {
                   xTexelC${m+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${m+1}.zw = vec2(0.0);
                   }
                   xTexelC${m+1}Ready = 1;
                 }

                 xC${m} = vec4(xTexelC${m}.zw, xTexelC${m+1}.zw);
               `,m+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${m+1} = vec4(xTexelC${m+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m+1}Ready == 0) {
                   xTexelC${m+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${m+1}.zw = vec2(0.);
                   }
                   xTexelC${m+1}Ready = 1;
                 }

                 xC${m} = vec4(
                   xTexelC${m}.xy, xTexelC${m+1}.xy);
               `,m+1<u&&(d+=`
                   xC${m+1} = vec4(xTexelC${m}.zw, xTexelC${m+1}.zw);
                 `)));m<u&&(d+=`
             wTexel = getW(r, ${m}, d1, d2);
             dotProd += xC${m}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${m}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,m+1<u&&(d+=`
               wTexel = getW(r, ${m+1}, d1, d2);
               dotProd += xC${m+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${m+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(i?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ose{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Yn(this.outputShape.length);const{dataFormat:s}=t,i=cs(),r=s==="channelsLast",o=r?1:2,a=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${i.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ep(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function BN({x:n,filter:e,convInfo:t,backend:s,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const l=n.shape,c=s.texData.get(n.dataId),u=t.inChannels,h=l[0]*l[1]*l[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,g=!1;let y;const m=[];if(r!=null){const b=Ep(r.shape,p);b!=null&&(r=Ae({inputs:{x:r},backend:s,attrs:{shape:b}}),m.push(r))}if(i!=null){const b=Ep(i.shape,p);b!=null&&(i=Ae({inputs:{x:i},backend:s,attrs:{shape:b}}),m.push(i))}if(!((h===1||d===1)&&u>RN)&&c.isPacked&&p&&c.texture!=null&&l[2]%2!==0&&Et(c.shape.slice(-3),l.slice(-3))){const b=l[0]*l[1]*(l[2]+1),w={dataId:n.dataId,shape:[1,b,t.inChannels],dtype:n.dtype},S=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,A(Tp(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);const _=Ae({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});m.push(_);const I=Ip({a:w,b:_,backend:s,transposeA:f,transposeB:g,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o}),N=s.texData.get(I.dataId);A(N.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=S,N.shape=t.outShape,y=Ms({inputs:{x:I},backend:s}),y.shape=t.outShape,m.push(I)}else{const b=t.outHeight*t.outWidth,w=Ae({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,b,t.inChannels]:[t.batchSize,t.inChannels,b]}}),S=Ae({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),_=Ip({a:p?w:S,b:p?S:w,transposeA:!p,transposeB:g,backend:s,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o});y=Ae({inputs:{x:_},backend:s,attrs:{shape:t.outShape}}),m.push(w),m.push(S),m.push(_)}for(const b of m)s.disposeIntermediateTensorInfo(b);return y}function VN({x:n,filter:e,convInfo:t,backend:s,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",g=l*c*u,y=d*h,m=[t.batchSize,g,y],x=!0,v=!1,b=[];if(r!=null){const G=Ep(r.shape,f);G!=null&&(r=Ae({inputs:{x:r},backend:s,attrs:{shape:G}}),b.push(r))}if(i!=null){const G=Ep(i.shape,f);G!=null&&(i=Ae({inputs:{x:i},backend:s,attrs:{shape:G}}),b.push(i))}const w=Ae({inputs:{x:e},backend:s,attrs:{shape:[1,g,ce(e.shape)/g]}});b.push(w);const S=new ose(m,t),_=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],I=s.runWebGLProgram(S,[n],"float32",_),N=Ae({inputs:{x:I},backend:s,attrs:{shape:m}});b.push(I),b.push(N);const k=i!=null,M=r!=null,T=a==="leakyrelu",C=a?du(a,!0):null,R=new AN(f?N.shape:w.shape,f?w.shape:N.shape,f?[t.batchSize,y,t.outChannels]:[t.batchSize,t.outChannels,y],x,v,k,C,M,T),L=f?[N,w]:[w,N];if(i&&L.push(i),M&&L.push(r),T){const G=s.makeTensorInfo([],"float32",xo(o,"float32"));L.push(G),b.push(G)}const $=s.runWebGLProgram(R,L,"float32"),O=Ae({inputs:{x:$},backend:s,attrs:{shape:t.outShape}});b.push($);for(const G of b)s.disposeIntermediateTensorInfo(G);return O}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ase(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s,h=Rr(l),d=Bn(i.shape,r.shape,o,c,a,u,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=BN({x:i,filter:r,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&se().getBool("WEBGL_EXP_CONV")){const g=new zN(d),y=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(g,[i,r],"float32",y)}else if(se().getBool("WEBGL_CONV_IM2COL"))p=VN({x:i,filter:r,convInfo:d,backend:t});else{const g=new ON(d);p=t.runWebGLProgram(g,[i,r],"float32")}const f=Ae({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const lse={kernelName:uf,backendName:"webgl",kernelFunc:ase};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cse{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,i=e.padInfo.top,r=e.padInfo.left,o=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${i};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${o?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class use{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,i=e.strideHeight,r=e.strideWidth,o=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=s-1-e.padInfo.left,c=o?1:2,u=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class hse{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,i=e.strideWidth,r=e.padInfo.front,o=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${o};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${i} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class dse{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,i=e.filterWidth,r=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,c=s-1-e.padInfo.top,u=i-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${i}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${i} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,h=Rr(l),d=Bn(i.shape,u,o,1,a,c,!1,h),p=new cse(d);return t.runWebGLProgram(p,[i,r],"float32")}const fse={kernelName:Z0,backendName:"webgl",kernelFunc:pse};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mse{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Yn(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,i=t-1-e.padInfo.top,r=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gse(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s,h=Rr(c),d=Bn(o,r.shape,a,1,l,u,!1,h);if(se().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new mse(d);return t.runWebGLProgram(f,[i,r],"float32",p)}else{const p=new use(d);return t.runWebGLProgram(p,[i,r],"float32")}}const xse={kernelName:hf,backendName:"webgl",kernelFunc:gse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:o,pad:a,dilations:l}=s,c=yo(i.shape,r.shape,o,l,a),u=new rse(c);return t.runWebGLProgram(u,[i,r],"float32")}const bse={kernelName:df,backendName:"webgl",kernelFunc:yse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:o,pad:a,filterShape:l}=s,c=yo(i.shape,l,o,1,a),u=new hse(c);return t.runWebGLProgram(u,[i,r],"float32")}const wse={kernelName:Y0,backendName:"webgl",kernelFunc:vse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sse(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{pad:o,strides:a,inputShape:l}=s,c=yo(l,r.shape,a,1,o),u=new dse(c);return t.runWebGLProgram(u,[i,r],"float32")}const _se={kernelName:J0,backendName:"webgl",kernelFunc:Sse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cse=pc+`
  return cos(x);
`,Tse=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Ma}
  return result;
`,Ise=wt({opSnippet:Cse,packedOpSnippet:Tse}),Ese={kernelName:Lu,backendName:"webgl",kernelFunc:Ise};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mse=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,kse=wt({opSnippet:Mse}),Nse={kernelName:Fu,backendName:"webgl",kernelFunc:kse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ase{constructor(e,t,s,i,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,l,c]=e,[u]=t,[h,d]=s;this.outputShape=[u,h,d,c];const p=i==="bilinear"?1:0,[f,g]=[`${a-1}.0`,`${l-1}.0`],[y,m,x]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[v,b,w]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${m};
        float width_scale = ${b};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rse=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:i,boxes:r,boxInd:o}=e,{cropSize:a,method:l,extrapolationValue:c}=s,u=new Ase(i.shape,r.shape,a,l,c);return t.runWebGLProgram(u,[i,r,o],"float32")},$se={kernelName:Q0,backendName:"webgl",kernelFunc:Rse};var fu;(function(n){n.Prod="*",n.Sum="+"})(fu||(fu={}));class p_{constructor(e,t,s,i){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,o=this.op===fu.Prod?"1.0":"0.0",a=s?o:`getX(${f_(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";s?(c=i?`end != ${l-1}`:"end != 0",u=i?"end + 1":"end - 1"):(c=i?`end + pow2 < ${l}`:"end >= pow2",u=i?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${$t(r)} coords = getOutputCoords();
        int end = ${m_(r,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${m_(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${f_(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function f_(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function m_(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UN(n,e,t,s,i,r){const o=e.shape.length,a=nn([s],o);let l=e;a!=null&&(l=as({inputs:{x:e},backend:t,attrs:{perm:a}}));const c=un(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const u=l.shape[c];let h=Ms({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const p=new p_(n,l.shape,!1,r),f=[[d]],g=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(g)}if(i){const d=new p_(n,l.shape,i,r),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(a!=null){const d=bo(a),p=as({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(l),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,exclusive:o,reverse:a}=s;return UN(fu.Prod,i,t,r,o,a)}const Lse={kernelName:K0,backendName:"webgl",kernelFunc:Dse};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,exclusive:o,reverse:a}=s;return UN(fu.Sum,i,t,r,o,a)}const Pse={kernelName:pf,backendName:"webgl",kernelFunc:Fse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ose(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,weights:r}=e,{size:o,binaryOutput:a}=s;if(i.shape.length===1){const l=t.readSync(i.dataId),c=t.readSync(r.dataId),u=SN(l,c,r.dtype,r.shape,o);return t.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=t.bufferSync(i),c=t.bufferSync(r),u=UQ(l,c,o,a);return t.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const zse={kernelName:ey,backendName:"webgl",kernelFunc:Ose};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bse{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockSize:r,dataFormat:o}=s,a=i.shape[0],l=o==="NHWC"?i.shape[1]:i.shape[2],c=o==="NHWC"?i.shape[2]:i.shape[3],u=o==="NHWC"?i.shape[3]:i.shape[1],h=l*r,d=c*r,p=u/(r*r),f=o==="NHWC"?[a,h,d,p]:[a,p,h,d],g=new Bse(f,r,o);return t.runWebGLProgram(g,[i],i.dtype)}const Use={kernelName:ty,backendName:"webgl",kernelFunc:Vse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WN{constructor(e,t=!1,s=null,i=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Yn(this.outputShape.length);const o=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let c="",u="";s&&(i?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,u="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GN{constructor(e,t=!1,s=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Yn(this.outputShape.length);const o=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,c=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<h;m++)p+=`
          vec4 xTexelC${m*2};
          int xTexelC${m*2}Ready;
          vec4 xTexelC${m*2+1};
          int xTexelC${m*2+1}Ready;
          vec4 xC${m};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let m=0;m<h;m++)p+=`
          xTexelC${m*2} = vec4(0.0);
          xTexelC${m*2}Ready = 0;
          xTexelC${m*2+1} = vec4(0.0);
          xTexelC${m*2+1}Ready = 0;
          xC${m} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let m=0;m<(d+1)/2;m++){const x=m*2;if(p+=`
          xC = xCCorner + ${x*c};
          `,l===1){if(x<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,c===1&&x>0?p+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<h)){const v=a%2===0?F0(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:p+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):v===1?p+=`
                    xC${x+1} = xTexelC${x};
                    `:p+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<h&&(p+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<h&&(p+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<h&&(p+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",g="";s&&(i?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=s;let u=l;u==null&&(u=[1,1]),A(qn(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=Bn(i.shape,r.shape,o,u,a,c,!0);let d;se().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new GN(h):d=new WN(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[i,r],"float32",p)}const Gse={kernelName:ff,backendName:"webgl",kernelFunc:Wse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hse{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,i=e.padInfo.top,r=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${i};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class jse{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,i=e.strideHeight,r=e.strideWidth,o=t-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xse(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,dy:r}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s,h=Bn(i.shape,u,o,a,l,c,!0),d=new Hse(h);return t.runWebGLProgram(d,[i,r],"float32")}const qse={kernelName:ny,backendName:"webgl",kernelFunc:Xse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zse(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,filter:r}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s,h=Bn(u,r.shape,o,a,l,c,!0),d=new jse(h);return t.runWebGLProgram(d,[i,r],"float32")}const Yse={kernelName:sy,backendName:"webgl",kernelFunc:Zse};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jse{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kse(n){const{inputs:e,backend:t}=n,{x:s}=e,i=[...s.shape,...s.shape],r=ce(s.shape),o=Ae({inputs:{x:s},backend:t,attrs:{shape:[r]}}),a=new Jse(r),l=t.runWebGLProgram(a,[o],o.dtype),c=Ae({inputs:{x:l},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),c}const Qse={kernelName:TT,backendName:"webgl",kernelFunc:Kse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eie{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:i,strideHeight:r,strideWidth:o,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=e,{top:h,left:d}=i;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r}=e,{strides:o,pad:a,dilations:l}=s,c=vh(i.shape,r.shape,o,a,"NHWC",l);let u;const h=new eie(c);u=t.runWebGLProgram(h,[i,r],"float32");const d=Ae({inputs:{x:u},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(u),d}const nie={kernelName:mf,backendName:"webgl",kernelFunc:tie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sie(n){const{inputs:e,backend:t,attrs:s}=n,{equation:i}=s,r=e,{allDims:o,summedDims:a,idDims:l}=Ab(i,r.length);$b(o.length,l,r);const{path:c,steps:u}=Db(a,l),h=u.length;let d=null,p=o.length;const f=[];for(let g=0;g<h;++g){for(const y of u[g]){const{permutationIndices:m,expandDims:x}=Rb(p,l[y]);let v;Lb(m)?v=r[y]:(v=as({inputs:{x:r[y]},backend:t,attrs:{perm:m}}),f.push(v));const b=v.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);Et(v.shape,b)||(v=Ae({inputs:{x:v},backend:t,attrs:{shape:b}}),f.push(v)),d===null?d=v:(d=Sv({inputs:{a:v,b:d},backend:t}),f.push(d))}g<h-1&&(c[g]>=0&&(d=km({inputs:{x:d},backend:t,attrs:{axis:c[g]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&t.disposeIntermediateTensorInfo(g);return d}const iie={kernelName:iy,backendName:"webgl",kernelFunc:sie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rie="return (x >= 0.0) ? x : (exp(x) - 1.0);",oie=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,aie=wt({opSnippet:rie,packedOpSnippet:oie}),lie={kernelName:Ou,backendName:"webgl",kernelFunc:aie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cie="return (b >= 0.0) ? a : a * (b + 1.0);",uie=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,hie=n=>{const{inputs:e,backend:t}=n,{dy:s,y:i}=e,r=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dc(uie,s.shape,i.shape):new pa(cie,s.shape,i.shape);return t.runWebGLProgram(r,[s,i],s.dtype)},die={kernelName:ry,backendName:"webgl",kernelFunc:hie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pie=`
  return vec4(equal(a, b));
`,fie="return float(a == b);",mie=Un({opSnippet:fie,packedOpSnippet:pie,dtype:"bool",cpuKernelImpl:XQ}),gie={kernelName:gf,backendName:"webgl",kernelFunc:mie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xie=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Cb};
  float a1 = ${Tb};
  float a2 = ${Ib};
  float a3 = ${Eb};
  float a4 = ${Mb};
  float a5 = ${kb};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,yie=wt({opSnippet:xie}),bie={kernelName:zu,backendName:"webgl",kernelFunc:yie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vie=pc+`
  return exp(x);
`,wie=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,HN=wt({opSnippet:vie,packedOpSnippet:wie,cpuKernelImpl:qQ,dtype:"float32"}),Sie={kernelName:Bu,backendName:"webgl",kernelFunc:HN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xx(n){const{inputs:e,attrs:t,backend:s}=n,{dim:i}=t,{input:r}=e,o=r.shape.length,a=r.shape.slice();let l=i;return i<0&&(A(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),a.splice(l,0,1),Ae({inputs:{x:r},backend:s,attrs:{shape:a}})}const _ie={kernelName:xf,backendName:"webgl",kernelFunc:Xx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g_="return exp(x) - 1.0;",Cie=wt({opSnippet:g_,packedOpSnippet:g_,cpuKernelImpl:ZQ}),Tie={kernelName:Vu,backendName:"webgl",kernelFunc:Cie};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x_{constructor(e,t,s){this.variableNames=["real","imag"];const i=t[1];this.outputShape=t;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=s?`${i}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${i});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${i}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jN(n,e,t){const s=t.texData.get(n.dataId),i=ce(n.shape),r=n.shape[n.shape.length-1],o=i/r,a=Ae({inputs:{x:n},backend:t,attrs:{shape:[o,r]}}),l=a.shape,c=new x_("real",l,e),u=new x_("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(u,h,"float32"),f=To({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const g=Ae({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(f),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iie(n){const{inputs:e,backend:t}=n,{input:s}=e;return jN(s,!1,t)}const Eie={kernelName:oy,backendName:"webgl",kernelFunc:Iie};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mie{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vh(n){const{backend:e,attrs:t}=n,{shape:s,value:i}=t;let{dtype:r}=t;if(r=r||Kl(i),r==="string"){const o=an(r,ce(s));return o.fill(i),e.makeTensorInfo(s,r,o)}else{const o=new Mie(s,i),a=[[i]];return e.runWebGLProgram(o,[],r,a)}}const kie={kernelName:ay,backendName:"webgl",kernelFunc:Vh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nie{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aie={kernelName:ly,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,i=new Nie(t.shape);return s.runWebGLProgram(i,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y_="return floor(x);",Rie=wt({opSnippet:y_,packedOpSnippet:y_,cpuKernelImpl:YQ}),$ie={kernelName:Uu,backendName:"webgl",kernelFunc:Rie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Die=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Lie=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Fie=Un({opSnippet:Die,packedOpSnippet:Lie,dtype:"int32"}),Pie={kernelName:Wu,backendName:"webgl",kernelFunc:Fie};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oie{constructor(e){this.variableNames=["A"];const t=cs(),[s,i]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zie{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=cs(),[s,i]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${i}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bie={kernelName:eV,backendName:"webgl",kernelFunc:Vie};let el,Bg=se().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Vie(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:i}=e;const{numChannels:r}=s,o=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,[l,c]=o?[i.videoWidth,i.videoHeight]:[i.width,i.height],u=[c,l],h=[c,l,r];if(a||o){const g=se().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(el==null||g!==Bg)&&(Bg=g,el=document.createElement("canvas").getContext("2d",{willReadFrequently:Bg})),el.canvas.width=l,el.canvas.height=c,el.drawImage(i,0,0,l,c),i=el.canvas}const d=t.makeTensorInfo(u,"int32");t.texData.get(d.dataId).usage=Fs.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),i);const p=se().getBool("WEBGL_PACK")?new zie(h):new Oie(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r,bias:o,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,g=Rr(u),y=Bn(i.shape,r.shape,l,h,c,d,!1,g);let m;const x=[],v=o!=null,b=a!=null,w=p==="leakyrelu",S=()=>{const I=[i,r],N=(k,M)=>{if(M==="NCHW"&&k.shape.length===1&&k.shape[0]!==1){const T=Ae({inputs:{x:k},backend:t,attrs:{shape:[k.shape[0],1,1]}});return x.push(T),T}return k};if(v&&I.push(N(o,u)),b&&I.push(N(a,u)),w){const k=t.makeTensorInfo([],"float32",xo(f,"float32"));I.push(k),x.push(k)}return I};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))m=BN({x:i,filter:r,convInfo:y,backend:t,bias:o,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(y.strideWidth<=2&&g==="channelsLast"&&se().getBool("WEBGL_EXP_CONV")){const I=p?du(p,!0):null,N=new zN(y,v,I,b,w),k=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],M=S();m=t.runWebGLProgram(N,M,"float32",k)}else if(se().getBool("WEBGL_CONV_IM2COL"))m=VN({x:i,filter:r,convInfo:y,backend:t,bias:o,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const I=p?du(p,!1):null,N=new ON(y,v,I,b,w),k=S();m=t.runWebGLProgram(N,k,"float32")}const _=Ae({inputs:{x:m},backend:t,attrs:{shape:y.outShape}});return x.push(m),x.forEach(I=>t.disposeIntermediateTensorInfo(I)),_}const Wie={kernelName:np,backendName:"webgl",kernelFunc:Uie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gie(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,filter:r,bias:o,preluActivationWeights:a}=e,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let g=u;g==null&&(g=[1,1]),A(qn(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const y=Bn(i.shape,r.shape,l,g,c,h,!0),m=se().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=d?du(d,m):null,v=[i,r],b=o!=null,w=a!=null,S=d==="leakyrelu";if(b&&v.push(o),w&&v.push(a),S){const k=t.makeTensorInfo([],"float32",xo(p,"float32"));v.push(k),f.push(k)}let _;m?_=new GN(y,b,x,w,S):_=new WN(y,b,x,w,S);const I=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=t.runWebGLProgram(_,v,"float32",I);return f.forEach(k=>t.disposeIntermediateTensorInfo(k)),N}const Hie={kernelName:GT,backendName:"webgl",kernelFunc:Gie};class jie{constructor(e,t,s,i){this.sliceDim=e,this.strides=t,this.paramsShape=i,this.variableNames=["x","indices"],this.outputShape=s;const r=$t(s.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xie(n){const{inputs:e,backend:t}=n,{params:s,indices:i}=e,r=i.shape,o=r[r.length-1],a=ce(s.shape),[l,c,u,h]=pb(s,i),d=Ae({inputs:{x:i},backend:t,attrs:{shape:[c,o]}}),p=Ae({inputs:{x:s},backend:t,attrs:{shape:[ce(s.shape)/u,u]}});if(t.shouldExecuteOnCPU([s,i])||s.dtype==="string"){const m=t.readSync(i.dataId),x=t.bufferSync(s),v=JQ(m,x,s.dtype,c,o,u,h,s.shape,a);return t.makeTensorInfo(l,s.dtype,v.values)}const f=new jie(o,h,[c,u],s.shape),g=t.runWebGLProgram(f,[p,d],p.dtype),y=Ae({inputs:{x:g},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),y}const qie={kernelName:IT,backendName:"webgl",kernelFunc:Xie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zie{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=$t(this.rank),i=Yie(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${i}));
      }
    `}}function Yie(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let i=0;i<n.length;i++)i===2?s.push("index"):s.push(`${t[i]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,indices:r}=e,{axis:o,batchDims:a}=s,l=dt(o,i.shape)[0];if(se().get("DEBUG")){const x=t.readSync(r.dataId),v=i.shape[l];for(let b=0;b<x.length;++b){const w=x[b];A(w<=v-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${v-1}]`)}}const c=Pb(i,r,l,a),u=ce(r.shape),h=[],d=Ae({inputs:{x:i},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=Ae({inputs:{x:r},backend:t,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(p);const f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([i,r])||i.dtype==="string"){const x=t.bufferSync(p),v=t.bufferSync(d),b=KQ(v,x,f);return h.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(c.outputShape,b.dtype,b.values)}const g=new Zie(d.shape,f),y=t.runWebGLProgram(g,[d,p],d.dtype);h.push(y);const m=Ae({inputs:{x:y},backend:t,attrs:{shape:c.outputShape}});return h.forEach(x=>t.disposeIntermediateTensorInfo(x)),m}const Jie={kernelName:bf,backendName:"webgl",kernelFunc:XN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kie="return float(a > b);",Qie=`
  return vec4(greaterThan(a, b));
`,ere=Un({opSnippet:Kie,packedOpSnippet:Qie,cpuKernelImpl:QQ,dtype:"bool"}),tre={kernelName:vf,backendName:"webgl",kernelFunc:ere};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nre="return float(a >= b);",sre=`
  return vec4(greaterThanEqual(a, b));
`,ire=Un({opSnippet:nre,packedOpSnippet:sre,dtype:"bool",cpuKernelImpl:eee}),rre={kernelName:Gu,backendName:"webgl",kernelFunc:ire};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ore(n){const{inputs:e,backend:t}=n,{input:s}=e;return jN(s,!0,t)}const are={kernelName:cy,backendName:"webgl",kernelFunc:ore};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lre="return float(!isnan(x) && !isinf(x));",cre=wt({opSnippet:lre,dtype:"bool"}),ure={kernelName:ju,backendName:"webgl",kernelFunc:cre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hre="return float(isinf(x));",dre=wt({opSnippet:hre,dtype:"bool"}),pre={kernelName:Xu,backendName:"webgl",kernelFunc:dre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fre="return float(isnan(x));",mre=wt({opSnippet:fre,dtype:"bool"}),gre={kernelName:qu,backendName:"webgl",kernelFunc:mre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xre="return float(a < b);",yre=`
  return vec4(lessThan(a, b));
`,bre=Un({opSnippet:xre,packedOpSnippet:yre,cpuKernelImpl:tee,dtype:"bool"}),vre={kernelName:Sf,backendName:"webgl",kernelFunc:bre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wre="return float(a <= b);",Sre=`
  return vec4(lessThanEqual(a, b));
`,_re=Un({opSnippet:wre,packedOpSnippet:Sre,cpuKernelImpl:nee,dtype:"bool"}),Cre={kernelName:_f,backendName:"webgl",kernelFunc:_re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tre(n){const{backend:e,attrs:t}=n,{start:s,stop:i,num:r}=t,o=see(s,i,r);return e.makeTensorInfo([o.length],"float32",o)}const Ire={kernelName:ET,backendName:"webgl",kernelFunc:Tre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ere=pc+`
  return x < 0.0 ? 0./0. : log(x);
`,Mre=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,kre=wt({opSnippet:Ere,packedOpSnippet:Mre,cpuKernelImpl:iee}),Nre={kernelName:Zu,backendName:"webgl",kernelFunc:kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Are=pc+`
  return log(1.0 + x);
`,Rre=wt({opSnippet:Are}),$re={kernelName:Yu,backendName:"webgl",kernelFunc:Rre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dre="return float(a >= 1.0 && b >= 1.0);",Lre=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Fre=Un({opSnippet:Dre,packedOpSnippet:Lre,dtype:"bool"}),Pre={kernelName:Cf,backendName:"webgl",kernelFunc:Fre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ore="return float(!(x >= 1.0));",zre=wt({opSnippet:Ore}),Bre={kernelName:Tf,backendName:"webgl",kernelFunc:zre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vre="return float(a >= 1.0 || b >= 1.0);",Ure=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Wre=Un({opSnippet:Vre,packedOpSnippet:Ure,dtype:"bool"}),Gre={kernelName:If,backendName:"webgl",kernelFunc:Wre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hre{constructor(e,t,s,i,r){this.variableNames=["x"],this.outputShape=[];const o=t,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jre{constructor(e,t,s,i,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xre=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{depthRadius:r,bias:o,alpha:a,beta:l}=s,c=se().getBool("WEBGL_PACK_NORMALIZATION")?new jre(i.shape,r,o,a,l):new Hre(i.shape,r,o,a,l);return t.runWebGLProgram(c,[i],i.dtype)},qre={kernelName:Ef,backendName:"webgl",kernelFunc:Xre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zre{constructor(e,t,s,i,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=i,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${i}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${i})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yre=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:i,y:r,dy:o}=e,{depthRadius:a,bias:l,alpha:c,beta:u}=s,h=new Zre(i.shape,a,l,c,u);return t.runWebGLProgram(h,[i,r,o],i.dtype)},Jre={kernelName:hy,backendName:"webgl",kernelFunc:Yre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kre(n,e,t,s){const i=ce(e),o=ce(n.shape)/i,a=Ae({inputs:{x:n},attrs:{shape:[o,i]},backend:s}),l=ka(a,n.dtype,"max",s),c=Ae({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{reductionIndices:r,keepDims:o}=s,a=i.shape.length,l=dt(r,i.shape);let c=l;const u=nn(c,a),h=u!=null,d=t.shouldExecuteOnCPU([i]);let p=i;if(h){if(d){const v=t.texData.get(p.dataId).values,b=new Array(a);for(let _=0;_<b.length;_++)b[_]=i.shape[u[_]];const w=vv(v,i.shape,i.dtype,u,b);p=t.makeTensorInfo(b,i.dtype);const S=t.texData.get(p.dataId);S.values=w}else p=Mm(i,u,t);c=un(c.length,a)}Vn("max",c,a);const[f,g]=Dn(p.shape,c);let y=f;o&&(y=xn(f,l));let m;if(d){const v=t.texData.get(p.dataId).values,b=ree(v,ce(g),y,i.dtype);m=t.makeTensorInfo(y,i.dtype);const w=t.texData.get(m.dataId);w.values=b}else m=Kre(p,g,y,t);return h&&t.disposeIntermediateTensorInfo(p),m}const Qre={kernelName:Mf,backendName:"webgl",kernelFunc:qN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eoe=wv+`
  return max(a, b);
`,toe=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ma+`
  return result;
`,noe=Un({opSnippet:eoe,packedOpSnippet:toe,cpuKernelImpl:oee}),soe={kernelName:Ju,backendName:"webgl",kernelFunc:noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ioe(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e;Oh(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=s,c=1;A(qn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=ti(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Et(u.inShape,u.outShape))return Ms({inputs:{x:i},backend:t});const h=new pu(u,"max",!1);return t.runWebGLProgram(h,[i],i.dtype)}const roe={kernelName:kf,backendName:"webgl",kernelFunc:ioe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ooe(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{filterSize:r,strides:o,pad:a,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],h=Ar(i.shape,r,o,u,a,c,l),d=new _v(h,"max",!1);return t.runWebGLProgram(d,[i],i.dtype)}const aoe={kernelName:Nf,backendName:"webgl",kernelFunc:ooe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class loe{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,r=e.effectiveFilterHeight,o=e.effectiveFilterWidth,a=r-1-e.padInfo.top,l=o-1-e.padInfo.left,c=r*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class coe{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,i=e.strideWidth,r=e.dilationDepth,o=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=c-1-e.padInfo.top,p=u-1-e.padInfo.left,f=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uoe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r}=e,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=Ar(o.shape,a,l,h,c,u),p=new _v(d,"max",!0),f=t.runWebGLProgram(p,[o],o.dtype),g=new coe(d),y=t.runWebGLProgram(g,[i,f],o.dtype);return t.disposeIntermediateTensorInfo(f),y}const hoe={kernelName:py,backendName:"webgl",kernelFunc:uoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function doe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:i,input:r,output:o}=e,a=r;Oh([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=ti(a.shape,l,c,1,u,h),p=!0,f=new pu(d,"max",p),g=t.runWebGLProgram(f,[a],a.dtype),y=new loe(d),m=t.runWebGLProgram(y,[i,g],a.dtype);return t.disposeIntermediateTensorInfo(g),m}const poe={kernelName:dy,backendName:"webgl",kernelFunc:doe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function foe(n,e,t,s){let i=new pu(t,"max",!1);const r=s.runWebGLProgram(i,[n],"float32");i=new pu(t,"max",!0,!0,e);const o=s.runWebGLProgram(i,[n],"float32");return[r,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const moe={kernelName:MT,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=e,l=t;A(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];A(qn(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=ti(s.shape,i,r,c,o),[h,d]=foe(s,a,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function goe(n,e,t,s){const i=ce(e),o=ce(n.shape)/i,a=Ae({inputs:{x:n},attrs:{shape:[o,i]},backend:s}),l=ka(a,"float32","mean",s),c=Ae({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xoe={kernelName:Af,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:i,axis:r}=e,o=t,a=s.shape.length,l=dt(r,s.shape);let c=l;const u=nn(c,a),h=u!=null,d=o.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const b=o.texData.get(f.dataId).values,w=new Array(a);for(let I=0;I<w.length;I++)w[I]=s.shape[u[I]];const S=vv(b,s.shape,s.dtype,u,w);f=o.makeTensorInfo(w,s.dtype);const _=o.texData.get(f.dataId);_.values=S}else f=Mm(s,u,o);p.push(f),c=un(c.length,a)}Vn("sum",c,a);const[g,y]=Dn(f.shape,c);let m=g;i&&(m=xn(g,l));const x=goe(f,y,m,o);for(const v of p)o.disposeIntermediateTensorInfo(v);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yoe(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:o}=s,a=i.shape.length,l=dt(r,i.shape);let c=l;const u=nn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:t,attrs:{perm:u}}),c=un(c.length,i.shape.length)),Vn("min",c,a);const[d,p]=Dn(h.shape,c),f=ce(p),g=Ae({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),y=ka(g,g.dtype,"min",t);let m;if(o){const x=xn(d,l);m=Ae({inputs:{x:y},backend:t,attrs:{shape:x}})}else m=Ae({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),u!=null&&t.disposeIntermediateTensorInfo(h),m}const boe={kernelName:Rf,backendName:"webgl",kernelFunc:yoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const voe=wv+`
  return min(a, b);
`,woe=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ma+`
  return result;
`,Soe=Un({opSnippet:voe,packedOpSnippet:woe,cpuKernelImpl:aee}),_oe={kernelName:Ku,backendName:"webgl",kernelFunc:Soe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Coe{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((u,h)=>u[0]+e[h]+u[1]);const i=e.length,r=$t(i),o=t.map(u=>u[0]).join(","),a=t.map((u,h)=>u[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),c=s==="reflect"?0:1;if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${i}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Toe{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,g)=>f[0]+e[g]+f[1]);const i=e.length,r=$t(i),o=t.map(f=>f[0]).join(","),a=t.map((f,g)=>f[0]+e[g]).join(","),l=ss("rc",i),c=ss("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(i===1){const f=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const f=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[i-2]} += 1;
        if(${l[i-2]} < ${this.outputShape[i-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[i-1]} += 1;
          if(${u}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ioe=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:i,mode:r}=t,o=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Toe(s.shape,i,r):new Coe(s.shape,i,r);return e.runWebGLProgram(o,[s],s.dtype)},Eoe={kernelName:$f,backendName:"webgl",kernelFunc:Ioe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Moe=`if (b == 0.0) return NAN;
  return mod(a, b);`,koe=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Ma+`
  return result;
`,Noe=Un({opSnippet:Moe,packedOpSnippet:koe}),Aoe={kernelName:Qu,backendName:"webgl",kernelFunc:Noe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Roe{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $oe=`
if (a == b) {
  return 1.0;
};
return a / b;`,Doe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,ZN=Un({opSnippet:$oe,packedOpSnippet:Doe,checkOutOfBounds:!0}),Loe={kernelName:Pu,backendName:"webgl",kernelFunc:ZN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b_="return a - b;",YN=Un({opSnippet:b_,packedOpSnippet:b_,supportsComplex:!0,cpuKernelImpl:Mee}),Foe={kernelName:mh,backendName:"webgl",kernelFunc:YN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JN(n){const{inputs:e,backend:t,attrs:s}=n,{logits:i}=e,{dim:r}=s,o=dt([r],i.shape),a=qN({inputs:{x:i},backend:t,attrs:{reductionIndices:o,keepDims:!1}}),l=xn(a.shape,o),c=Ae({inputs:{x:a},backend:t,attrs:{shape:l}}),u=YN({inputs:{a:i,b:c},backend:t}),h=HN({inputs:{x:u},backend:t}),d=km({inputs:{x:h},backend:t,attrs:{axis:o,keepDims:!1}}),p=Ae({inputs:{x:d},backend:t,attrs:{shape:l}}),f=ZN({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const Poe={kernelName:Jf,backendName:"webgl",kernelFunc:JN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ooe(n){const{inputs:e,backend:t,attrs:s}=n,{logits:i}=e,{numSamples:r,seed:o,normalized:a}=s,l=a?i:JN({inputs:{logits:i},backend:t,attrs:{dim:i.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new Roe(c,u,r),d=[[o]],p=t.runWebGLProgram(h,[l],"int32",d);return a||t.disposeIntermediateTensorInfo(l),p}const zoe={kernelName:kT,backendName:"webgl",kernelFunc:Ooe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Boe=si+`
  return -x;
`,Voe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Uoe(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const r=t.texData.get(s.dataId),[o,a]=cee(r.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,o)}let i;return se().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Xr(s.shape,Voe):i=new Ui(s.shape,Boe),t.runWebGLProgram(i,[s],s.dtype)}const Woe={kernelName:Df,backendName:"webgl",kernelFunc:Uoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Goe=lb;function Hoe(n){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=s,c=t.readSync(i.dataId),u=t.readSync(r.dataId),{selectedIndices:h}=Goe(c,u,o,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const joe={kernelName:fy,backendName:"webgl",kernelFunc:Hoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xoe=cb;function qoe(n){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s,u=t.readSync(i.dataId),h=t.readSync(r.dataId),{selectedIndices:d,validOutputs:p}=Xoe(u,h,o,a,l,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const Zoe={kernelName:my,backendName:"webgl",kernelFunc:qoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yoe=ub;function Joe(n){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:i,scores:r}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s,u=t.readSync(i.dataId),h=t.readSync(r.dataId),d=o,p=a,f=l,g=c,{selectedIndices:y,selectedScores:m}=Yoe(u,h,d,p,f,g);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([m.length],"float32",new Float32Array(m))]}const Koe={kernelName:gy,backendName:"webgl",kernelFunc:Joe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qoe{constructor(e,t,s,i){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${i}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eae=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:i}=e,{dtype:r,depth:o,onValue:a,offValue:l}=s,c=ce(i.shape),u=new Qoe(c,o,a,l),h=Ae({inputs:{x:i},backend:t,attrs:{shape:[c]}}),d=t.runWebGLProgram(u,[h],r);t.disposeIntermediateTensorInfo(h);const p=[...i.shape,o],f=Ae({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f},tae={kernelName:Pf,backendName:"webgl",kernelFunc:eae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mp(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const i=Bh({inputs:{input:s},backend:t}),r=Mp({inputs:{x:i},backend:t}),o=Nm({inputs:{input:s},backend:t}),a=Mp({inputs:{x:o},backend:t}),l=To({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return Vh({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const nae={kernelName:em,backendName:"webgl",kernelFunc:Mp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const i=Bh({inputs:{input:s},backend:t}),r=KN({inputs:{x:i},backend:t}),o=Nm({inputs:{input:s},backend:t}),a=Mp({inputs:{x:o},backend:t}),l=To({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return Vh({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const sae={kernelName:Ff,backendName:"webgl",kernelFunc:KN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iae(n){const{inputs:e,backend:t,attrs:s}=n,{axis:i}=s;if(e.length===1)return Xx({inputs:{input:e[0]},backend:t,attrs:{dim:i}});const r=e[0].shape,o=e[0].dtype;e.forEach(u=>{P0(r,u.shape,"All tensors passed to stack must have matching shapes"),A(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(u=>{const h=Xx({inputs:{input:u},backend:t,attrs:{dim:i}});return a.push(h),h}),c=PN({inputs:l,backend:t,attrs:{axis:i}});return a.forEach(u=>t.disposeIntermediateTensorInfo(u)),c}const rae={kernelName:Of,backendName:"webgl",kernelFunc:iae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oae{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);const i=e.length,r=$t(i),o=t.map(c=>c[0]).join(","),a=t.map((c,u)=>c[0]+e[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aae{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((g,y)=>g[0]+e[y]+g[1]);const i=e.length,r=$t(i),o=t.map(g=>g[0]).join(","),a=t.map((g,y)=>g[0]+e[y]).join(","),l=ss("rc",i),c=ss("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[i-1]} += 1;
       if(${u}) {
      `,i===1?"":`}
       rc = outputLoc;
       ${l[i-2]} += 1;
       if(${l[i-2]} < ${this.outputShape[i-2]}) {`,i===1?"":`  ${l[i-1]} += 1;
         if(${u}) {`],p=i===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let g=0,y=i===1?2:4;g<y;g++)f+=`
        ${d[g]}
        if (${p}) {
          result[${g}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${g}] = getChannel(getX(${c.join()}), ${h});
        }
      `;f+=i===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QN=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{paddings:r,constantValue:o}=s;if(ce(i.shape)===0){const c=r.map((u,h)=>u[0]+i.shape[h]+u[1]);return Vh({backend:t,attrs:{shape:c,value:o,dtype:i.dtype}})}const a=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aae(i.shape,r,o):new oae(i.shape,r,o),l=[[o]];return t.runWebGLProgram(a,[i],i.dtype,l)},lae={kernelName:zf,backendName:"webgl",kernelFunc:QN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cae=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,uae=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Ma+`
  return result;
`,hae=Un({opSnippet:cae,packedOpSnippet:uae}),dae={kernelName:th,backendName:"webgl",kernelFunc:hae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pae(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{axis:r,keepDims:o}=s,a=i.shape.length,l=[],c=dt(r,i.shape);let u=c;const h=nn(u,a);let d=i;h!=null&&(d=as({inputs:{x:i},backend:t,attrs:{perm:h}}),u=un(u.length,a),l.push(d)),Vn("prod",u,a);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:g,outShape:y,outDtype:m}=hee(d.shape,d.dtype,f,u);p=t.makeTensorInfo(y,m,g)}else{const[f,g]=Dn(d.shape,u),y=ce(g),m=Ae({inputs:{x:d},backend:t,attrs:{shape:[-1,y]}}),x=ky(i.dtype),v=ka(m,x,"prod",t);p=Ae({inputs:{x:v},backend:t,attrs:{shape:f}}),l.push(m),l.push(v)}if(o){l.push(p);const f=xn(p.shape,c);p=Ae({inputs:{x:p},backend:t,attrs:{shape:f}})}return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const fae={kernelName:Vf,backendName:"webgl",kernelFunc:pae};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mae(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=e,{outputRaggedRank:a}=s,l=i.map(m=>t.readSync(m.dataId)),c=i.map(m=>m.shape),u=t.readSync(r.dataId),h=t.readSync(o.dataId),[d,p,f]=dee(l,c,u,r.shape,r.dtype,h,o.shape,a),g=d.map(m=>t.makeTensorInfo([m.length],"int32",m)),y=t.makeTensorInfo(f,r.dtype,p);return g.concat([y])}const gae={kernelName:NT,backendName:"webgl",kernelFunc:mae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xae(n){const{inputs:e,backend:t}=n,{starts:s,limits:i,deltas:r}=e,o=t.readSync(s.dataId),a=t.readSync(i.dataId),l=t.readSync(r.dataId),[c,u]=pee(o,s.shape,s.dtype,a,i.shape,l,r.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const yae={kernelName:AT,backendName:"webgl",kernelFunc:xae};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bae(n){const{inputs:e,backend:t,attrs:s}=n,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=t.readSync(i.dataId),u=t.readSync(r.dataId),h=t.readSync(o.dataId),d=a.map(y=>t.readSync(y.dataId)),p=a.map(y=>y.shape),[f,g]=fee(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,p,l);return t.makeTensorInfo(f,r.dtype,g)}const vae={kernelName:RT,backendName:"webgl",kernelFunc:bae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eA=n=>{const{backend:e,attrs:t}=n,{start:s,stop:i,step:r,dtype:o}=t,a=mee(s,i,r,o);return e.makeTensorInfo([a.length],o,a)},wae={kernelName:xy,backendName:"webgl",kernelFunc:eA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sae="return 1.0 / x;",_ae=wt({opSnippet:Sae}),Cae={kernelName:nh,backendName:"webgl",kernelFunc:_ae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tae=si+`
  return (x < 0.0) ? 0.0 : x;
`,Iae=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Eae=wt({opSnippet:Tae,packedOpSnippet:Iae}),Mae={kernelName:sh,backendName:"webgl",kernelFunc:Eae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kae=si+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Nae=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Aae=wt({opSnippet:kae,packedOpSnippet:Nae}),Rae={kernelName:ih,backendName:"webgl",kernelFunc:Aae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ae{constructor(e,t,s,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=e;this.outputShape=[o,t,s,c];const u=[i&&t>1?a-1:a,i&&s>1?l-1:l],h=[i&&t>1?t-1:t,i&&s>1?s-1:s];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dae{constructor(e,t,s,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=e;this.outputShape=[o,t,s,c];const u=[i&&t>1?a-1:a,i&&s>1?l-1:l],h=[i&&t>1?t-1:t,i&&s>1?s-1:s];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lae(n){const{inputs:e,backend:t,attrs:s}=n,{images:i}=e,{alignCorners:r,halfPixelCenters:o,size:a}=s,[l,c]=a,u=se().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Dae(i.shape,l,c,r,o):new $ae(i.shape,l,c,r,o);return t.runWebGLProgram(u,[i],"float32")}const Fae={kernelName:Gf,backendName:"webgl",kernelFunc:Lae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pae{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,i,r]=t,[,o,a]=e,l=[s&&o>1?i-1:i,s&&a>1?r-1:r],c=[s&&o>1?o-1:o,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,g=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oae(n){const{inputs:e,backend:t,attrs:s}=n,{images:i,dy:r}=e,{alignCorners:o}=s,a=new Pae(r.shape,i.shape,o);return t.runWebGLProgram(a,[r],r.dtype)}const zae={kernelName:vy,backendName:"webgl",kernelFunc:Oae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bae{constructor(e,t,s,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=e;this.outputShape=[o,t,s,c];const u=[i&&t>1?a-1:a,i&&s>1?l-1:l],h=[i&&t>1?t-1:t,i&&s>1?s-1:s],d=i?"0.5":"0.0";let p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vae{constructor(e,t,s,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=e;this.outputShape=[o,t,s,c];const u=[i&&t>1?a-1:a,i&&s>1?l-1:l],h=[i&&t>1?t-1:t,i&&s>1?s-1:s],d=i?"0.5":"0.0";let p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uae(n){const{inputs:e,backend:t,attrs:s}=n,{images:i}=e,{alignCorners:r,halfPixelCenters:o,size:a}=s,[l,c]=a,u=se().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Vae(i.shape,l,c,r,o):new Bae(i.shape,l,c,r,o);return t.runWebGLProgram(u,[i],i.dtype)}const Wae={kernelName:Wf,backendName:"webgl",kernelFunc:Uae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gae{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,i,r]=t,[,o,a]=e,l=[s&&o>1?i-1:i,s&&a>1?r-1:r],c=[s&&o>1?o-1:o,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,g=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hae(n){const{inputs:e,backend:t,attrs:s}=n,{images:i,dy:r}=e,{alignCorners:o}=s,a=new Gae(r.shape,i.shape,o);return t.runWebGLProgram(a,[r],r.dtype)}const jae={kernelName:by,backendName:"webgl",kernelFunc:Hae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xae{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const i=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,r=e.map((a,l)=>i(l)).join(","),o=$t(s);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qae{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const i=ss("rc",s),r=`${i[s-1]} + 1 < ${this.outputShape[s-1]}`,o=`${i[s-2]} + 1 < ${this.outputShape[s-2]}`,a=$t(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(i.slice())};
          if(${r}){
            result.g = ${c(i.slice())};
          }
          if(${o}) {
            result.b = ${u(i.slice())};
            if(${r}) {
              result.a = ${h(i.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function c(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function u(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const g=e.map((x,v)=>p(v,f)),y=g.join(","),m=g.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${m}))`}function p(f,g){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${g[f]} - 1`:`${g[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zae(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{dims:r}=s,o=i.shape.length,a=dt(r,i.shape);if(o===0)return Ms({inputs:{x:i},backend:t});const l=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qae(i.shape,a):new Xae(i.shape,a);return t.runWebGLProgram(l,[i],i.dtype)}const Yae={kernelName:Hf,backendName:"webgl",kernelFunc:Zae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jae{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],i=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kae={kernelName:Ey,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:i,fillValue:r,center:o}=e,a=t,l=new Jae(s.shape,r),[c,u]=wb(o,s.shape[1],s.shape[2]),h=[[c,u,Math.sin(i),Math.cos(i)]];return a.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qae=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,ele=wt({opSnippet:Qae}),tle={kernelName:rh,backendName:"webgl",kernelFunc:ele};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nle="return inversesqrt(x);",sle=wt({opSnippet:nle,cpuKernelImpl:gee}),ile={kernelName:oh,backendName:"webgl",kernelFunc:sle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cv{constructor(e,t,s,i,r,o,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const c=$t(r.length),u=$t(o.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";i===1?p="i":i===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let g="";l&&(g="coords[0], coords[1]");const y=`getDefaultValue(${g})`,m=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${m};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rle{constructor(e,t,s,i,r,o,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const c=$t(r.length),u=$t(o.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";i===1?p="i":i===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let g="";l&&(g="coords[0], coords[1]");const y=`getDefaultValue(${g})`,m=t>1?"strides[j]":"strides",x=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${m};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ole(n){const{inputs:e,backend:t,attrs:s}=n,{indices:i,updates:r}=e,{shape:o}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=_a(r,i,o),d=[h/c,c];if(h===0)return t.makeTensorInfo(o,i.dtype);const p=Ae({inputs:{x:i},backend:t,attrs:{shape:[l,a]}}),f=Ae({inputs:{x:r},backend:t,attrs:{shape:[l,c]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0]));let y;se().getBool("WEBGL_PACK")?y=new rle(l,a,p.shape.length,f.shape.length,u,d):y=new Cv(l,a,p.shape.length,f.shape.length,u,d);const m=t.runWebGLProgram(y,[f,p,g],f.dtype),x=Ae({inputs:{x:m},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),x}const ale={kernelName:$T,backendName:"webgl",kernelFunc:ole};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lle{constructor(e,t,s,i){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const r="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=se().getNumber("WEBGL_VERSION")===2?r:o,l=i==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cle(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:i,values:r}=e,{side:o}=s,a=new lle(i.shape[0],i.shape[1],r.shape[1],o),l=[[i.shape[1]]];return t.runWebGLProgram(a,[i,r],"int32",l)}const ule={kernelName:LT,backendName:"webgl",kernelFunc:cle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hle{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let i,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",i="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<t.length;u++)c.push(`${a[u]}`),u<e&&l.push(`${a[u]}`);i=l.join(),r=c.join()}const o=$t(s);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${i});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dle(n){const{inputs:e,backend:t}=n,{condition:s,t:i,e:r}=e,o=new hle(s.shape.length,i.shape,i.shape.length);return t.runWebGLProgram(o,[s,i,r],Is(i.dtype,r.dtype))}const ple={kernelName:jf,backendName:"webgl",kernelFunc:dle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fle=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${dm};
  float scale = ${pm};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,mle=wt({opSnippet:fle}),gle={kernelName:ah,backendName:"webgl",kernelFunc:mle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xle=pc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,yle=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ble=wt({opSnippet:xle,packedOpSnippet:yle,cpuKernelImpl:yee}),vle={kernelName:hh,backendName:"webgl",kernelFunc:ble};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wle=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Sle=wt({opSnippet:wle}),_le={kernelName:uh,backendName:"webgl",kernelFunc:Sle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cle=pc+`
  return sin(x);
`,Tle=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Ma}
  return result;
`,Ile=wt({opSnippet:Cle,packedOpSnippet:Tle}),Ele={kernelName:lh,backendName:"webgl",kernelFunc:Ile};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mle=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,kle=wt({opSnippet:Mle}),Nle={kernelName:ch,backendName:"webgl",kernelFunc:kle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ale=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Rle=wt({opSnippet:Ale}),$le={kernelName:dh,backendName:"webgl",kernelFunc:Rle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dle=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{blockShape:r,paddings:o}=s;A(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((m,x)=>m*x),l=[[0,0]];l.push(...o);for(let m=1+r.length;m<i.shape.length;++m)l.push([0,0]);const c=[],u=QN({inputs:{x:i},backend:t,attrs:{paddings:l,constantValue:0}}),h=Th(u.shape,r,a,!1),d=Ih(h.length,r.length,!1),p=Eh(u.shape,r,a,!1),f=Ae({inputs:{x:u},backend:t,attrs:{shape:h}}),g=as({inputs:{x:f},backend:t,attrs:{perm:d}}),y=Ae({inputs:{x:g},backend:t,attrs:{shape:p}});return c.push(u),c.push(f),c.push(g),c.forEach(m=>t.disposeIntermediateTensorInfo(m)),y},Lle={kernelName:Zf,backendName:"webgl",kernelFunc:Dle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fle(n){const{inputs:e,backend:t}=n,{indices:s,values:i,denseShape:r,defaultValue:o}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=t.readSync(s.dataId),l=t.readSync(i.dataId),c=t.readSync(r.dataId),u=t.readSync(o.dataId)[0],[h,d,p,f,g]=vee(a,s.shape,s.dtype,l,i.dtype,c,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],i.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const Ple={kernelName:FT,backendName:"webgl",kernelFunc:Fle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ole(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:i,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(t.readSync(i.dataId)),a=t.readSync(s.dataId),l=Array.from(t.readSync(r.dataId)),[c,u,h]=wee(a,s.shape,s.dtype,o,l);return[t.makeTensorInfo(u,s.dtype,c),t.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const zle={kernelName:PT,backendName:"webgl",kernelFunc:Ole};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ble(n){const{inputs:e,backend:t}=n,{data:s,indices:i,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const o=t.readSync(s.dataId),a=t.readSync(i.dataId),l=t.readSync(r.dataId),[c,u]=CN(o,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(u,s.dtype,c)}const Vle={kernelName:OT,backendName:"webgl",kernelFunc:Ble};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ule(n){const{inputs:e,backend:t}=n,{data:s,indices:i,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const o=t.readSync(s.dataId),a=t.readSync(i.dataId),l=t.readSync(r.dataId),[c,u]=CN(o,s.shape,s.dtype,a,l);return t.makeTensorInfo(u,s.dtype,c)}const Wle={kernelName:zT,backendName:"webgl",kernelFunc:Ule};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gle(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:i,sparseValues:r,defaultValue:o}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=_a(r,i,a),p=!1;if(r.dtype==="string"){const m=t.bufferSync(i),x=t.bufferSync(r),v=ao(t.readSync(o.dataId)[0]),b=xee(m,x,a,d,u,c,l,h,v,p);return t.makeTensorInfo(a,b.dtype,b.values)}const f=new Cv(c,l,i.shape.length,r.shape.length,h,[d,1],p),g=t.runWebGLProgram(f,[r,i,o],r.dtype),y=Ae({inputs:{x:g},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(g),y}const Hle={kernelName:BT,backendName:"webgl",kernelFunc:Gle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jle(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{numOrSizeSplits:r,axis:o}=s,a=dt(o,i.shape)[0],l=Fb(i,r,a),c=i.shape.length,u=new Array(c).fill(0),h=i.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const f=fc({inputs:{x:i},backend:t,attrs:{begin:u,size:p}});return u[a]+=d,f})}const Xle={kernelName:Yf,backendName:"webgl",kernelFunc:jle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v_="return sqrt(x);",qle=wt({opSnippet:v_,packedOpSnippet:v_,cpuKernelImpl:See}),Zle={kernelName:ph,backendName:"webgl",kernelFunc:qle};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yle="return x * x;",Jle=wt({opSnippet:Yle}),Kle={kernelName:wy,backendName:"webgl",kernelFunc:Jle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w_="return (a - b) * (a - b);",Qle=Un({opSnippet:w_,packedOpSnippet:w_}),ece={kernelName:fh,backendName:"webgl",kernelFunc:Qle};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tce(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");const r=t.readSync(i.dataId),o=Ir(r),a=_ee(o,"string",s);return t.makeTensorInfo(i.shape,"string",a)}const nce={kernelName:Sy,backendName:"webgl",kernelFunc:tce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sce({inputs:n,attrs:e,backend:t}){const{x:s}=n,i=si+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,r=new Ui(s.shape,i);return t.runWebGLProgram(r,[s],s.dtype)}const ice={kernelName:bh,backendName:"webgl",kernelFunc:sce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rce{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const i=s.length,r=$t(s.length),o=$t(s.length);let a="";if(i===1)a="coords * strides + begin";else{let l=0;a=s.map((c,u)=>(l++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oce(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:y,isSimpleSlice:m,begin:x,end:v,strides:b}=yb(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=Ae({inputs:{x:i},backend:t,attrs:{shape:f}});else if(y||m){A(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const _=mb(x,v,b),I=fc({inputs:{x:i},backend:t,attrs:{begin:x,size:_}});w=Ae({inputs:{x:I},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(I)}else if(t.shouldExecuteOnCPU([i])){const I=t.readSync(i.dataId),N=ht(i.shape,i.dtype,I),k=Cee(p,N,b,x);w=t.makeTensorInfo(f,i.dtype,k.values)}else{const I=new rce(x,b,p);w=t.runWebGLProgram(I,[i],i.dtype)}const S=Ae({inputs:{x:w},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(w),S}const ace={kernelName:_y,backendName:"webgl",kernelFunc:oce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lce(n){const{inputs:e,backend:t,attrs:s}=n,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=t.readSync(u.dataId),p=t.readSync(h.dataId),[f,g]=Tee(d,p,i,r,o,a,l,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",g)]}const cce={kernelName:VT,backendName:"webgl",kernelFunc:lce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uce(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:i}=s,{input:r,delimiter:o}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=t.readSync(r.dataId),l=t.readSync(o.dataId)[0],[c,u,h]=Iee(a,l,i),d=u.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const hce={kernelName:UT,backendName:"webgl",kernelFunc:uce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dce(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:i}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=t.readSync(r.dataId),a=Eee(o,i);return t.makeTensorInfo(r.shape,"int32",a)}const pce={kernelName:WT,backendName:"webgl",kernelFunc:dce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fce="return tan(x);",mce=wt({opSnippet:fce}),gce={kernelName:gh,backendName:"webgl",kernelFunc:mce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xce=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,yce=wt({opSnippet:xce}),bce={kernelName:xh,backendName:"webgl",kernelFunc:yce};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vce(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:i,indices:r,updates:o}=e,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=_a(o,r,i.shape),d=[h/c,c];if(h===0)return t.makeTensorInfo(i.shape,r.dtype);const p=Ae({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),f=Ae({inputs:{x:o},backend:t,attrs:{shape:[l,c]}}),g=Ae({inputs:{x:i},backend:t,attrs:{shape:d}}),y=new Cv(l,a,p.shape.length,f.shape.length,u,d,!1,!0),m=t.runWebGLProgram(y,[f,p,g],g.dtype),x=Ae({inputs:{x:m},backend:t,attrs:{shape:i.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(m),x}const wce={kernelName:DT,backendName:"webgl",kernelFunc:vce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sce{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let o=0;o<s.length;o++)s[o]=e[o]*t[o];this.outputShape=s,this.rank=s.length;const i=$t(this.rank),r=_ce(e);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function _ce(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let i=0;i<n.length;i++)s.push(`imod(${t[i]}, ${n[i]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{reps:r}=s;if(i.dtype==="string"||i.shape.length>5){const l=t.readSync(i.dataId),c=i.dtype==="string"?l.map(d=>ao(d)):l,u=ht(i.shape,i.dtype,c),h=kee(u,r);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new Sce(i.shape,r);return t.runWebGLProgram(o,[i],i.dtype)}const Cce={kernelName:yh,backendName:"webgl",kernelFunc:tA};class Tce{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Ice{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ro(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function S_(n){let e=1;for(;e<n;)e*=2;return e}function Ece(n){const{inputs:e,backend:t,attrs:s}=n,{x:i}=e,{k:r,sorted:o}=s,a=se().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=se().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=i.shape,u=c[c.length-1];if(t.shouldExecuteOnCPU([i])||u<a||r>l){const k=t.readSync(i.dataId),[M,T]=Nee(k,c,i.dtype,r,o);return[t.makeTensorInfo(M.shape,M.dtype,M.values),t.makeTensorInfo(T.shape,T.dtype,T.values)]}if(r===0)return c[c.length-1]=0,[t.makeTensorInfo(c,i.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(u===1)return[i,Vh({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const h=t.texData.get(i.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(i):i,g=ce(c)/u,y=Ae({inputs:{x:p},attrs:{shape:[g,u]},backend:t});d&&Ro(t,p);const m=S_(r),x=S_(u);let v=null;const b=()=>v===null?[y,y]:[y,v],w=(k,M,T)=>{const C=b(),R=new Tce(T),$=[[u],[v===null?1:0],[Number.NEGATIVE_INFINITY],[k],[M]],O=v;v=t.runWebGLProgram(R,C,"int32",$),Ro(t,O)};for(let k=1;k<m;k*=2){const M=k*2;for(let T=k;T>=1;T/=2)w(M,T,[g,x])}for(let k=x;k>m;k/=2){const M=b(),T=new Ice([g,k/2]),R=[[u],[v===null?1:0],[m]],L=v;v=t.runWebGLProgram(T,M,"int32",R),Ro(t,L);const $=m/2,O=$*2;for(let G=$;G>=1;G/=2)w(O,G,v.shape)}let S=v;v=fc({inputs:{x:v},backend:t,attrs:{begin:0,size:[g,r]}}),Ro(t,S);let _=XN({inputs:{x:y,indices:v},backend:t,attrs:{axis:1,batchDims:1}});Ro(t,y);const I=c.slice(0,-1);I.push(r),S=v,v=Ae({inputs:{x:v},attrs:{shape:I},backend:t}),Ro(t,S);const N=_;return _=Ae({inputs:{x:_},attrs:{shape:I},backend:t}),Ro(t,N),[_,v]}const Mce={kernelName:Cy,backendName:"webgl",kernelFunc:Ece};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kce{constructor(e,t,s,i,r,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=s==="nearest"?1:2;let l;switch(i){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nce(n){const{inputs:e,backend:t,attrs:s}=n,{image:i,transforms:r}=e,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=s,[u,h,d,p]=i.shape,[f,g]=c??[h,d],y=[u,f,g,p],m=new kce(h,d,o,a,l,y);return t.runWebGLProgram(m,[i,r],"float32")}const Ace={kernelName:Ty,backendName:"webgl",kernelFunc:Nce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rce(n){const{inputs:e,attrs:t,backend:s}=n,{axis:i}=t,{x:r}=e;Oh(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=s.readSync(r.dataId),{outputValues:a,outputShape:l,indices:c}=Aee(o,i,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const $ce={kernelName:Iy,backendName:"webgl",kernelFunc:Rce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dce(n){const{inputs:e,backend:t,attrs:s}=n,{value:i}=e;let{axis:r}=s;r<0&&(r+=i.shape.length);const o=i,a=o.shape.length,l=i.shape[r],c=new Array(a-1);let u=0;for(let g=0;g<a;g++)g!==r&&(c[u++]=o.shape[g]);const h=[],d=new Array(a).fill(0),p=o.shape.slice();p[r]=1;const f=new Array(l);for(let g=0;g<f.length;g++){d[r]=g;const y=fc({inputs:{x:o},backend:t,attrs:{begin:d,size:p}}),m=Ae({inputs:{x:y},backend:t,attrs:{shape:c}});f[g]=m,h.push(y)}return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),f}const Lce={kernelName:Kf,backendName:"webgl",kernelFunc:Dce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fce{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,i=e.batchSize,r=e.inSize,o=e.numSegments,a=o*Math.ceil(r/s);this.outputShape=[i,a];const l="0.0",c="sumValue",u=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";r%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pce(n){const{inputs:e,backend:t,attrs:s}=n,{x:i,segmentIds:r}=e,{numSegments:o}=s,a=i.shape.length,l=[];let c=0;const u=nn([c],a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:t,attrs:{perm:u}}),l.push(h),c=un(1,a)[0]);const d=PE(h.shape,c,o),p=ce([h.shape[c]]),f=Ae({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});l.push(f);const g=ky(i.dtype),y=(b,w,S,_,I)=>{const N=b.shape[0],k=b.shape[1],M=FE(k,I),T={windowSize:M,inSize:k,batchSize:N,numSegments:I},C=new Fce(T,w),R=t.compileAndRun(C,[b,S],_);if(l.push(R),R.shape[1]===I)return R;const L=eA({backend:t,attrs:{start:0,stop:I,step:1,dtype:"float32"}}),$=tA({inputs:{x:L},backend:t,attrs:{reps:[k/M]}});return l.push(L),l.push($),y(R,w,$,_,I)},m=y(f,"unsortedSegmentSum",r,g,o),x=Ae({inputs:{x:m},backend:t,attrs:{shape:d}});let v=x;if(u!=null){l.push(x);const b=bo(u);v=as({inputs:{x:v},backend:t,attrs:{perm:b}})}return l.forEach(b=>t.disposeIntermediateTensorInfo(b)),v}const Oce={kernelName:Qf,backendName:"webgl",kernelFunc:Pce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zce=[Ste,Cte,Ete,Nte,Rte,Lte,Pte,zte,Wte,Hte,qte,Jte,ene,ine,ane,cne,hne,mne,xne,bne,_ne,Nne,Rne,Fne,One,Gne,jne,Yne,rte,Qne,ise,lse,fse,xse,bse,wse,_se,Ese,Nse,$se,Lse,Pse,zse,Use,Gse,qse,Yse,Qse,nie,iie,lie,die,gie,bie,Sie,_ie,Tie,Eie,kie,Aie,$ie,Pie,Bie,Wie,Hie,qie,Jie,tre,rre,ite,are,nse,ure,pre,gre,ate,vre,Cre,Ire,Nre,$re,Pre,Bre,Gre,qre,Jre,Qre,soe,roe,aoe,hoe,poe,moe,xoe,boe,_oe,Eoe,Aoe,zoe,ute,Woe,joe,Zoe,Koe,Bne,tae,sae,rae,lae,dae,cte,fae,gae,yae,vae,wae,Vne,Loe,Cae,Mae,Rae,dte,Fae,zae,Wae,jae,Yae,Kae,tle,ile,ale,ule,ple,gle,vle,_le,Ele,Nle,Mne,Poe,$le,Lle,Ple,zle,Vle,Wle,Hle,Xle,Zle,Kle,ece,nce,ice,ace,cce,hce,pce,Foe,bte,gce,bce,wce,Cce,Mce,Ace,vte,$ce,Lce,Oce,nae];for(const n of zce)HT(n);const vr="flow-attractor-training-data",Vg="1",Uh=()=>{const n=localStorage.getItem(vr);if(n){const e=JSON.parse(n);e.version!==Vg&&(e.version=Vg,localStorage.setItem(vr,JSON.stringify(e)))}else{const e={version:Vg,lastUpdated:Date.now(),dataPoints:[]};localStorage.setItem(vr,JSON.stringify(e))}},Tv=()=>{try{const n=localStorage.getItem(vr);return n?JSON.parse(n).dataPoints:(Uh(),[])}catch(n){return console.error("Error getting training data:",n),[]}},__=(n,e)=>{try{const t=localStorage.getItem(vr);t||Uh();const s=JSON.parse(t||'{"version":"1","lastUpdated":0,"dataPoints":[]}');let i=!1;s.dataPoints.length>=9?i=s.dataPoints.some(r=>r.label===e&&r.input===n):i=s.dataPoints.some(r=>Math.abs(r.label-e)<.001),i?console.log(`Skipped duplicate data point: input=${n}, label=${e}`):(s.dataPoints.push({input:n,label:e}),s.lastUpdated=Date.now(),localStorage.setItem(vr,JSON.stringify(s)),console.log(`Successfully stored data point: input=${n}, label=${e}`))}catch(t){console.error("Error adding training data point:",t)}},nA=()=>{try{const n=localStorage.getItem(vr);return n?JSON.parse(n).dataPoints.length:(Uh(),0)}catch(n){return console.error("Error getting training data count:",n),0}},Bce=()=>{try{const n=localStorage.getItem(vr);if(!n){Uh();return}const e=JSON.parse(n);e.dataPoints=[],e.lastUpdated=Date.now(),localStorage.setItem(vr,JSON.stringify(e))}catch(n){console.error("Error clearing training data:",n)}},Vce=()=>{const n=Tv();return{inputs:n.map(e=>e.input),labels:n.map(e=>e.label)}};Uh();const qx=10,Ko=()=>{const n=nA();return{current:n,target:qx,percentage:Math.round(n/qx*100)}},yl=()=>Math.random()<.5?-1:1,_i=(n,e)=>Math.random()*(e-n)+n,sA=n=>{const e=D().get("rangeMax")*(D().get("scale")*D().get("flwItmSizeLimit")),t=D().get("rangeMidpoint"),s=D().get("rangeIncreaseRate");return e/(1+Math.exp(-s*(n-t)))},iA=(n,e)=>{const t=D().get("paretoPoint"),s=Math.log(.8)/Math.log(t);return Math.round(n*Math.pow(e/n,s)*100)/100},rA=(n=0)=>{E().set("uuid",E().get("uuid")+1);const e={uuid:E().get("uuid").toString(),name:E().get("uuid").toString(),dAge:0,dColor:"",dDysEachTouchStep:0,dDysRmnngInTotal:0,dDysRmnngThisStep:0,dDysTotal:0,dExpedite:!1,dMoving:!1,dPosition:{},dScale:1,dSkipForWip:!1,dStepsAges:{},dStpIndex:0,dTmNumber:1,dValue:1,dVolume:1};return Uce(e),Wce(e,n),jce(e,n),E().get("flwItmTracker")[e.name]=[],Gce(e),Hce(e),Xce(e),qce(e),e},Uce=n=>(n.name=n.uuid,n.dTmNumber=_i(1,1),n.dExpedite=!1,n.dSkipForWip=!1,n),Wce=(n,e)=>(n.dStpIndex=e,E().get("flwMap")[n.dStpIndex.toString()].push(n),n),Gce=n=>{const e=ga(),t=Yl();let s=D().get("flwTimeMin");s>e&&(s=e),n.dDysTotal=_i(s,t);let r=n.dDysTotal/t;return n.dValue=r,D().get("flwItmSizeLimit")>=.2&&D().get("flwItmSizeLimit")<1&&r>=D().get("flwItmSizeLimit")&&(n.dValue=iA(r,D().get("flwItmSizeLimit")),n.dDysTotal=D().get("flwItmSizeLimit")*t,r=D().get("flwItmSizeLimit")),n.dScale=r,n},Hce=n=>{const e=n.dScale;return n.dVolume=D().get("x")*e*(D().get("y")*e)*(D().get("z")*e),n},jce=(n,e)=>{n.dAge=0,n.dStepsAges={},D().get("steps").forEach((t,s)=>{n.dStepsAges[s.toString()]=0}),n.dAge=e,e>0&&(n.dAge=_i(0,Yl()),n.dStepsAges[e.toString()]=n.dAge)},Xce=n=>{let e=n.dStpIndex;e>D().get("steps").length-1&&(e=D().get("steps").length-1,n.dStpIndex=e),n.dDysEachTouchStep=n.dDysTotal/Dp(),n.dDysRmnngThisStep=0,D().get("steps")[e].status==="touch"&&(n.dDysRmnngThisStep=_i(0,n.dDysEachTouchStep))},qce=(n,e)=>{n.dMoving=!1},Zce=n=>{const e=D().get("steps")||[];if(e[n]===void 0)return;const t=E().get("scnData");t.stepLabels===void 0&&(t.stepLabels=[]),t.camera;const i=e[n].name.toUpperCase().split(":"),r=E().get("clckCbGroup"),o=$0(i,25),a=new Xp(o),l=new fa({map:a,transparent:!0,opacity:.75,side:Sr});a.image.width,a.image.height;const c=new Hl(o.width/375,o.height/375),u=new gn(c,l);t.stepLabels.push(u),Yce(u),Jce(u,n),Kce(u),r.add(u)},Yce=n=>(n.name=n.uuid,n),Jce=(n,e)=>{const t=E().get("strtPosition"),s=E().get("scale");E().get("rangeMax"),n.position.x=t.x,n.position.y=t.y,n.position.z=Kp(e)-s,n.dPosition={...n.position}},Kce=n=>{const e=E().get("endPosition");let t=new V;t.subVectors(e,n.position),t.y=0,t.normalize();let s=Math.atan2(-t.x,t.z);n.rotation.set(0,s,0)},Qce=(n,e)=>{const t=D().get("steps")||[];if(t[n]===void 0)return;const s=t[n];if(n===0)return;const i=E().get("scnData");i.stpMetrics===void 0&&(i.stpMetrics=[]),i.camera,s.name;const r=E().get("clckCbGroup"),o=25,a=D().get("devUnitsTerm"),l=e.map(g=>g.key==="DvUnts"?`${a}: ${g.value}`:`${g.key}: ${g.value}`),c=$0(l,o),u=new Xp(c),h=new fa({map:u,transparent:!0,opacity:1,side:Sr}),d=u.image.width/u.image.height,p=new Hl(d,1),f=new gn(p,h);f.scale.set(.16,.16,.16),i.stpMetrics.push(f),qz(f,e,n),eue(f,n),tue(f),r.add(f)},eue=(n,e)=>{const t=E().get("strtPosition"),s=E().get("scale"),i=E().get("rangeMax");return n.position.x=t.x,n.position.y=t.y+(i-3)*s,n.position.z=Kp(e)-s,n.dPosition={...n.position},n},tue=n=>{const e=E().get("endPosition");let t=new V;t.subVectors(e,n.position),t.y=0,t.normalize();let s=Math.atan2(-t.x,t.z);return n.rotation.set(0,s,0),n},Na=()=>D().get("expdtQueueLength")>0&&D().get("expdtDvUnitsFactor")>0,Iv=()=>{const n=Jl(),e=D().get("steps")||[];if(n.length===0||e.length===0||n.length!==e.length){setTimeout(Iv,1e3);return}n.forEach((t,s)=>{if(e[s]!==void 0&&e[s].limit!==void 0)for(let i=1;i<=e[s].limit;i++)e[s].status!=="done"&&rA(s)})},nue=()=>{E().set("strtPosition",{x:0,y:0,z:0}),E().get("endPosition")||E().set("endPosition",{x:10,y:0,z:-10}),E().get("vSphere")||E().set("vSphere",{dPosition:{x:10,y:0,z:-10},x:10,y:0,z:-10}),Iv()},sue=n=>{n===void 0&&(n=[]),Na()===!0&&(oue([...n].reduce(iue,[0])),aue([...n].reduce(rue,[])))},iue=(n,e)=>(e.dExpedite===!0&&(n[0]+=1),n),rue=(n,e)=>(e.dExpedite===!0&&n.push(e.dAge),n),oue=n=>{E().get("thrPtExpQueue").length()>=D().get("timeBox")&&E().get("thrPtExpQueue").dequeue(),E().get("thrPtExpQueue").enqueue(n)},aue=n=>{E().get("flwTmExpQueue").length()>=D().get("timeBox")&&E().get("flwTmExpQueue").dequeue(),E().get("flwTmExpQueue").enqueue(n)},lue=(n,e)=>{n===void 0&&(n=[]),hue([...n].reduce(cue,[0])),due([...n].reduce(uue,[]))},cue=(n,e)=>((Na()===!1||e.dExpedite===!1)&&(n[0]+=1),n),uue=(n,e)=>((Na()===!1||e.dExpedite===!1)&&n.push(e.dAge),n),hue=n=>{for(;E().get("thrPtQueue").length()>=D().get("timeBox");)E().get("thrPtQueue").dequeue();E().get("thrPtQueue").enqueue(n)},due=n=>{for(;E().get("flwTmQueue").length()>=D().get("timeBox");)E().get("flwTmQueue").dequeue();E().get("flwTmQueue").enqueue(n)},oA=n=>()=>{E().get("vSphere").dRllngTtlVolume=0;const e=E().get("flwMap")[(D().get("steps").length-1).toString()];e!==void 0&&(Na()===!0&&sue(e),lue(e),fue([...e].reduce(pue,[])),[...e].reduceRight(n,null))},pue=(n,e)=>(n.push(e.dValue),n),fue=n=>{for(;E().get("vQueue").length()>=D().get("timeBox");)E().get("vQueue").dequeue();E().get("vQueue").enqueue(n)},mue=()=>{if(Math.floor(E().get("arrivalNumber"))>=1){if(E().get("flwMap")[0].length<D().get("steps")[0].limit||D().get("steps")[0].limit===0){for(let n=1;n<=E().get("arrivalNumber");n++)rA();E().set("arrivalNumber",E().get("arrivalNumber")%1+D().get("arrivalRate"))}}else E().set("arrivalNumber",E().get("arrivalNumber")+D().get("arrivalRate"))},Am=()=>{const n=[];return Jl().forEach(e=>{e.forEach(t=>{n.push(t)})}),n},gue=()=>Am().reduce((n,e)=>{let t=e.dStpIndex;return t>D().get("steps").length-1&&(t=D().get("steps").length-1,e.dStpIndex=t),(!Na()||e.dExpedite===!1)&&(D().get("steps")[t].status==="touch"||D().get("steps")[t].status==="wait")?n+=1:n},0),aA=()=>{const n=gue();xue(n)},xue=n=>{for(;E().get("wipQueue").length()>=D().get("timeBox");)E().get("wipQueue").dequeue();E().get("wipQueue").enqueue([n])},lA=()=>E().get("strtPosition").z-D().get("step")*(D().get("steps").length*.8),yue=n=>{if(n<=0)return 0;const e=Math.PI;let t=Math.cbrt(3*n/(4*e));return Math.round(t*100)/100},bue=()=>{const n=E().get("vQueue").total();if(n===0)return;const e=D().get("scale")||.07,i=n*e*.5/10,r=yue(i);E().get("vSphere").dRadius=r;const o=Math.floor(E().get("vSphere").dRadius/D().get("step")*100)/100*D().get("step"),a=lA()-o;E().get("vSphere").dPosition.z=a,E().get("endPosition").z=a},vue=n=>{let e=n.dStpIndex;e>D().get("steps").length-1&&(e=D().get("steps").length-1,n.dStpIndex=e),n.dStepsAges[e.toString()]+=1;const t=D().get("steps")[e].status==="done";return e!==0&&!t&&(n.dAge+=1,console.log(`makeItOneClickOlder: ${e} - Incrementing age of item ${n.name} to ${n.dAge}`)),n},cA=()=>{Am().map(vue)};var uA={update:null,begin:null,loopBegin:null,changeBegin:null,change:null,changeComplete:null,loopComplete:null,complete:null,loop:1,direction:"normal",autoplay:!0,timelineOffset:0},Ev={duration:1e3,delay:0,endDelay:0,easing:"easeOutElastic(1, .5)",round:0},wue=["translateX","translateY","translateZ","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","perspective","matrix","matrix3d"],kp={CSS:{},springs:{}};function Wi(n,e,t){return Math.min(Math.max(n,e),t)}function jc(n,e){return n.indexOf(e)>-1}function Ug(n,e){return n.apply(null,e)}var Ye={arr:function(n){return Array.isArray(n)},obj:function(n){return jc(Object.prototype.toString.call(n),"Object")},pth:function(n){return Ye.obj(n)&&n.hasOwnProperty("totalLength")},svg:function(n){return n instanceof SVGElement},inp:function(n){return n instanceof HTMLInputElement},dom:function(n){return n.nodeType||Ye.svg(n)},str:function(n){return typeof n=="string"},fnc:function(n){return typeof n=="function"},und:function(n){return typeof n>"u"},nil:function(n){return Ye.und(n)||n===null},hex:function(n){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(n)},rgb:function(n){return/^rgb/.test(n)},hsl:function(n){return/^hsl/.test(n)},col:function(n){return Ye.hex(n)||Ye.rgb(n)||Ye.hsl(n)},key:function(n){return!uA.hasOwnProperty(n)&&!Ev.hasOwnProperty(n)&&n!=="targets"&&n!=="keyframes"}};function hA(n){var e=/\(([^)]+)\)/.exec(n);return e?e[1].split(",").map(function(t){return parseFloat(t)}):[]}function dA(n,e){var t=hA(n),s=Wi(Ye.und(t[0])?1:t[0],.1,100),i=Wi(Ye.und(t[1])?100:t[1],.1,100),r=Wi(Ye.und(t[2])?10:t[2],.1,100),o=Wi(Ye.und(t[3])?0:t[3],.1,100),a=Math.sqrt(i/s),l=r/(2*Math.sqrt(i*s)),c=l<1?a*Math.sqrt(1-l*l):0,u=1,h=l<1?(l*a+-o)/c:-o+a;function d(f){var g=e?e*f/1e3:f;return l<1?g=Math.exp(-g*l*a)*(u*Math.cos(c*g)+h*Math.sin(c*g)):g=(u+h*g)*Math.exp(-g*a),f===0||f===1?f:1-g}function p(){var f=kp.springs[n];if(f)return f;for(var g=1/6,y=0,m=0;;)if(y+=g,d(y)===1){if(m++,m>=16)break}else m=0;var x=y*g*1e3;return kp.springs[n]=x,x}return e?d:p}function Sue(n){return n===void 0&&(n=10),function(e){return Math.ceil(Wi(e,1e-6,1)*n)*(1/n)}}var _ue=function(){var n=11,e=1/(n-1);function t(u,h){return 1-3*h+3*u}function s(u,h){return 3*h-6*u}function i(u){return 3*u}function r(u,h,d){return((t(h,d)*u+s(h,d))*u+i(h))*u}function o(u,h,d){return 3*t(h,d)*u*u+2*s(h,d)*u+i(h)}function a(u,h,d,p,f){var g,y,m=0;do y=h+(d-h)/2,g=r(y,p,f)-u,g>0?d=y:h=y;while(Math.abs(g)>1e-7&&++m<10);return y}function l(u,h,d,p){for(var f=0;f<4;++f){var g=o(h,d,p);if(g===0)return h;var y=r(h,d,p)-u;h-=y/g}return h}function c(u,h,d,p){if(!(0<=u&&u<=1&&0<=d&&d<=1))return;var f=new Float32Array(n);if(u!==h||d!==p)for(var g=0;g<n;++g)f[g]=r(g*e,u,d);function y(m){for(var x=0,v=1,b=n-1;v!==b&&f[v]<=m;++v)x+=e;--v;var w=(m-f[v])/(f[v+1]-f[v]),S=x+w*e,_=o(S,u,d);return _>=.001?l(m,S,u,d):_===0?S:a(m,x,x+e,u,d)}return function(m){return u===h&&d===p||m===0||m===1?m:r(y(m),h,p)}}return c}(),pA=function(){var n={linear:function(){return function(s){return s}}},e={Sine:function(){return function(s){return 1-Math.cos(s*Math.PI/2)}},Expo:function(){return function(s){return s?Math.pow(2,10*s-10):0}},Circ:function(){return function(s){return 1-Math.sqrt(1-s*s)}},Back:function(){return function(s){return s*s*(3*s-2)}},Bounce:function(){return function(s){for(var i,r=4;s<((i=Math.pow(2,--r))-1)/11;);return 1/Math.pow(4,3-r)-7.5625*Math.pow((i*3-2)/22-s,2)}},Elastic:function(s,i){s===void 0&&(s=1),i===void 0&&(i=.5);var r=Wi(s,1,10),o=Wi(i,.1,2);return function(a){return a===0||a===1?a:-r*Math.pow(2,10*(a-1))*Math.sin((a-1-o/(Math.PI*2)*Math.asin(1/r))*(Math.PI*2)/o)}}},t=["Quad","Cubic","Quart","Quint"];return t.forEach(function(s,i){e[s]=function(){return function(r){return Math.pow(r,i+2)}}}),Object.keys(e).forEach(function(s){var i=e[s];n["easeIn"+s]=i,n["easeOut"+s]=function(r,o){return function(a){return 1-i(r,o)(1-a)}},n["easeInOut"+s]=function(r,o){return function(a){return a<.5?i(r,o)(a*2)/2:1-i(r,o)(a*-2+2)/2}},n["easeOutIn"+s]=function(r,o){return function(a){return a<.5?(1-i(r,o)(1-a*2))/2:(i(r,o)(a*2-1)+1)/2}}}),n}();function Mv(n,e){if(Ye.fnc(n))return n;var t=n.split("(")[0],s=pA[t],i=hA(n);switch(t){case"spring":return dA(n,e);case"cubicBezier":return Ug(_ue,i);case"steps":return Ug(Sue,i);default:return Ug(s,i)}}function fA(n){try{var e=document.querySelectorAll(n);return e}catch{return}}function Rm(n,e){for(var t=n.length,s=arguments.length>=2?arguments[1]:void 0,i=[],r=0;r<t;r++)if(r in n){var o=n[r];e.call(s,o,r,n)&&i.push(o)}return i}function $m(n){return n.reduce(function(e,t){return e.concat(Ye.arr(t)?$m(t):t)},[])}function C_(n){return Ye.arr(n)?n:(Ye.str(n)&&(n=fA(n)||n),n instanceof NodeList||n instanceof HTMLCollection?[].slice.call(n):[n])}function kv(n,e){return n.some(function(t){return t===e})}function Nv(n){var e={};for(var t in n)e[t]=n[t];return e}function Zx(n,e){var t=Nv(n);for(var s in n)t[s]=e.hasOwnProperty(s)?e[s]:n[s];return t}function Dm(n,e){var t=Nv(n);for(var s in e)t[s]=Ye.und(n[s])?e[s]:n[s];return t}function Cue(n){var e=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(n);return e?"rgba("+e[1]+",1)":n}function Tue(n){var e=/^#?([a-f\d])([a-f\d])([a-f\d])$/i,t=n.replace(e,function(a,l,c,u){return l+l+c+c+u+u}),s=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t),i=parseInt(s[1],16),r=parseInt(s[2],16),o=parseInt(s[3],16);return"rgba("+i+","+r+","+o+",1)"}function Iue(n){var e=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(n)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(n),t=parseInt(e[1],10)/360,s=parseInt(e[2],10)/100,i=parseInt(e[3],10)/100,r=e[4]||1;function o(d,p,f){return f<0&&(f+=1),f>1&&(f-=1),f<1/6?d+(p-d)*6*f:f<1/2?p:f<2/3?d+(p-d)*(2/3-f)*6:d}var a,l,c;if(s==0)a=l=c=i;else{var u=i<.5?i*(1+s):i+s-i*s,h=2*i-u;a=o(h,u,t+1/3),l=o(h,u,t),c=o(h,u,t-1/3)}return"rgba("+a*255+","+l*255+","+c*255+","+r+")"}function Eue(n){if(Ye.rgb(n))return Cue(n);if(Ye.hex(n))return Tue(n);if(Ye.hsl(n))return Iue(n)}function wr(n){var e=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(n);if(e)return e[1]}function Mue(n){if(jc(n,"translate")||n==="perspective")return"px";if(jc(n,"rotate")||jc(n,"skew"))return"deg"}function Yx(n,e){return Ye.fnc(n)?n(e.target,e.id,e.total):n}function Gi(n,e){return n.getAttribute(e)}function Av(n,e,t){var s=wr(e);if(kv([t,"deg","rad","turn"],s))return e;var i=kp.CSS[e+t];if(!Ye.und(i))return i;var r=100,o=document.createElement(n.tagName),a=n.parentNode&&n.parentNode!==document?n.parentNode:document.body;a.appendChild(o),o.style.position="absolute",o.style.width=r+t;var l=r/o.offsetWidth;a.removeChild(o);var c=l*parseFloat(e);return kp.CSS[e+t]=c,c}function mA(n,e,t){if(e in n.style){var s=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),i=n.style[e]||getComputedStyle(n).getPropertyValue(s)||"0";return t?Av(n,i,t):i}}function Rv(n,e){if(Ye.dom(n)&&!Ye.inp(n)&&(!Ye.nil(Gi(n,e))||Ye.svg(n)&&n[e]))return"attribute";if(Ye.dom(n)&&kv(wue,e))return"transform";if(Ye.dom(n)&&e!=="transform"&&mA(n,e))return"css";if(n[e]!=null)return"object"}function gA(n){if(Ye.dom(n)){for(var e=n.style.transform||"",t=/(\w+)\(([^)]*)\)/g,s=new Map,i;i=t.exec(e);)s.set(i[1],i[2]);return s}}function kue(n,e,t,s){var i=jc(e,"scale")?1:0+Mue(e),r=gA(n).get(e)||i;return t&&(t.transforms.list.set(e,r),t.transforms.last=e),s?Av(n,r,s):r}function $v(n,e,t,s){switch(Rv(n,e)){case"transform":return kue(n,e,s,t);case"css":return mA(n,e,t);case"attribute":return Gi(n,e);default:return n[e]||0}}function Dv(n,e){var t=/^(\*=|\+=|-=)/.exec(n);if(!t)return n;var s=wr(n)||0,i=parseFloat(e),r=parseFloat(n.replace(t[0],""));switch(t[0][0]){case"+":return i+r+s;case"-":return i-r+s;case"*":return i*r+s}}function xA(n,e){if(Ye.col(n))return Eue(n);if(/\s/g.test(n))return n;var t=wr(n),s=t?n.substr(0,n.length-t.length):n;return e?s+e:s}function Lv(n,e){return Math.sqrt(Math.pow(e.x-n.x,2)+Math.pow(e.y-n.y,2))}function Nue(n){return Math.PI*2*Gi(n,"r")}function Aue(n){return Gi(n,"width")*2+Gi(n,"height")*2}function Rue(n){return Lv({x:Gi(n,"x1"),y:Gi(n,"y1")},{x:Gi(n,"x2"),y:Gi(n,"y2")})}function yA(n){for(var e=n.points,t=0,s,i=0;i<e.numberOfItems;i++){var r=e.getItem(i);i>0&&(t+=Lv(s,r)),s=r}return t}function $ue(n){var e=n.points;return yA(n)+Lv(e.getItem(e.numberOfItems-1),e.getItem(0))}function bA(n){if(n.getTotalLength)return n.getTotalLength();switch(n.tagName.toLowerCase()){case"circle":return Nue(n);case"rect":return Aue(n);case"line":return Rue(n);case"polyline":return yA(n);case"polygon":return $ue(n)}}function Due(n){var e=bA(n);return n.setAttribute("stroke-dasharray",e),e}function Lue(n){for(var e=n.parentNode;Ye.svg(e)&&Ye.svg(e.parentNode);)e=e.parentNode;return e}function vA(n,e){var t=e||{},s=t.el||Lue(n),i=s.getBoundingClientRect(),r=Gi(s,"viewBox"),o=i.width,a=i.height,l=t.viewBox||(r?r.split(" "):[0,0,o,a]);return{el:s,viewBox:l,x:l[0]/1,y:l[1]/1,w:o,h:a,vW:l[2],vH:l[3]}}function Fue(n,e){var t=Ye.str(n)?fA(n)[0]:n,s=e||100;return function(i){return{property:i,el:t,svg:vA(t),totalLength:bA(t)*(s/100)}}}function Pue(n,e,t){function s(u){u===void 0&&(u=0);var h=e+u>=1?e+u:0;return n.el.getPointAtLength(h)}var i=vA(n.el,n.svg),r=s(),o=s(-1),a=s(1),l=t?1:i.w/i.vW,c=t?1:i.h/i.vH;switch(n.property){case"x":return(r.x-i.x)*l;case"y":return(r.y-i.y)*c;case"angle":return Math.atan2(a.y-o.y,a.x-o.x)*180/Math.PI}}function T_(n,e){var t=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g,s=xA(Ye.pth(n)?n.totalLength:n,e)+"";return{original:s,numbers:s.match(t)?s.match(t).map(Number):[0],strings:Ye.str(n)||e?s.split(t):[]}}function Fv(n){var e=n?$m(Ye.arr(n)?n.map(C_):C_(n)):[];return Rm(e,function(t,s,i){return i.indexOf(t)===s})}function wA(n){var e=Fv(n);return e.map(function(t,s){return{target:t,id:s,total:e.length,transforms:{list:gA(t)}}})}function Oue(n,e){var t=Nv(e);if(/^spring/.test(t.easing)&&(t.duration=dA(t.easing)),Ye.arr(n)){var s=n.length,i=s===2&&!Ye.obj(n[0]);i?n={value:n}:Ye.fnc(e.duration)||(t.duration=e.duration/s)}var r=Ye.arr(n)?n:[n];return r.map(function(o,a){var l=Ye.obj(o)&&!Ye.pth(o)?o:{value:o};return Ye.und(l.delay)&&(l.delay=a?0:e.delay),Ye.und(l.endDelay)&&(l.endDelay=a===r.length-1?e.endDelay:0),l}).map(function(o){return Dm(o,t)})}function zue(n){for(var e=Rm($m(n.map(function(r){return Object.keys(r)})),function(r){return Ye.key(r)}).reduce(function(r,o){return r.indexOf(o)<0&&r.push(o),r},[]),t={},s=function(r){var o=e[r];t[o]=n.map(function(a){var l={};for(var c in a)Ye.key(c)?c==o&&(l.value=a[c]):l[c]=a[c];return l})},i=0;i<e.length;i++)s(i);return t}function Bue(n,e){var t=[],s=e.keyframes;s&&(e=Dm(zue(s),e));for(var i in e)Ye.key(i)&&t.push({name:i,tweens:Oue(e[i],n)});return t}function Vue(n,e){var t={};for(var s in n){var i=Yx(n[s],e);Ye.arr(i)&&(i=i.map(function(r){return Yx(r,e)}),i.length===1&&(i=i[0])),t[s]=i}return t.duration=parseFloat(t.duration),t.delay=parseFloat(t.delay),t}function Uue(n,e){var t;return n.tweens.map(function(s){var i=Vue(s,e),r=i.value,o=Ye.arr(r)?r[1]:r,a=wr(o),l=$v(e.target,n.name,a,e),c=t?t.to.original:l,u=Ye.arr(r)?r[0]:c,h=wr(u)||wr(l),d=a||h;return Ye.und(o)&&(o=c),i.from=T_(u,d),i.to=T_(Dv(o,u),d),i.start=t?t.end:0,i.end=i.start+i.delay+i.duration+i.endDelay,i.easing=Mv(i.easing,i.duration),i.isPath=Ye.pth(r),i.isPathTargetInsideSVG=i.isPath&&Ye.svg(e.target),i.isColor=Ye.col(i.from.original),i.isColor&&(i.round=1),t=i,i})}var SA={css:function(n,e,t){return n.style[e]=t},attribute:function(n,e,t){return n.setAttribute(e,t)},object:function(n,e,t){return n[e]=t},transform:function(n,e,t,s,i){if(s.list.set(e,t),e===s.last||i){var r="";s.list.forEach(function(o,a){r+=a+"("+o+") "}),n.style.transform=r}}};function _A(n,e){var t=wA(n);t.forEach(function(s){for(var i in e){var r=Yx(e[i],s),o=s.target,a=wr(r),l=$v(o,i,a,s),c=a||wr(l),u=Dv(xA(r,c),l),h=Rv(o,i);SA[h](o,i,u,s.transforms,!0)}})}function Wue(n,e){var t=Rv(n.target,e.name);if(t){var s=Uue(e,n),i=s[s.length-1];return{type:t,property:e.name,animatable:n,tweens:s,duration:i.end,delay:s[0].delay,endDelay:i.endDelay}}}function Gue(n,e){return Rm($m(n.map(function(t){return e.map(function(s){return Wue(t,s)})})),function(t){return!Ye.und(t)})}function CA(n,e){var t=n.length,s=function(r){return r.timelineOffset?r.timelineOffset:0},i={};return i.duration=t?Math.max.apply(Math,n.map(function(r){return s(r)+r.duration})):e.duration,i.delay=t?Math.min.apply(Math,n.map(function(r){return s(r)+r.delay})):e.delay,i.endDelay=t?i.duration-Math.max.apply(Math,n.map(function(r){return s(r)+r.duration-r.endDelay})):e.endDelay,i}var I_=0;function Hue(n){var e=Zx(uA,n),t=Zx(Ev,n),s=Bue(t,n),i=wA(n.targets),r=Gue(i,s),o=CA(r,t),a=I_;return I_++,Dm(e,{id:a,children:[],animatables:i,animations:r,duration:o.duration,delay:o.delay,endDelay:o.endDelay})}var pi=[],TA=function(){var n;function e(){!n&&(!E_()||!Pt.suspendWhenDocumentHidden)&&pi.length>0&&(n=requestAnimationFrame(t))}function t(i){for(var r=pi.length,o=0;o<r;){var a=pi[o];a.paused?(pi.splice(o,1),r--):(a.tick(i),o++)}n=o>0?requestAnimationFrame(t):void 0}function s(){Pt.suspendWhenDocumentHidden&&(E_()?n=cancelAnimationFrame(n):(pi.forEach(function(i){return i._onDocumentVisibility()}),TA()))}return typeof document<"u"&&document.addEventListener("visibilitychange",s),e}();function E_(){return!!document&&document.hidden}function Pt(n){n===void 0&&(n={});var e=0,t=0,s=0,i,r=0,o=null;function a(x){var v=window.Promise&&new Promise(function(b){return o=b});return x.finished=v,v}var l=Hue(n);a(l);function c(){var x=l.direction;x!=="alternate"&&(l.direction=x!=="normal"?"normal":"reverse"),l.reversed=!l.reversed,i.forEach(function(v){return v.reversed=l.reversed})}function u(x){return l.reversed?l.duration-x:x}function h(){e=0,t=u(l.currentTime)*(1/Pt.speed)}function d(x,v){v&&v.seek(x-v.timelineOffset)}function p(x){if(l.reversePlayback)for(var b=r;b--;)d(x,i[b]);else for(var v=0;v<r;v++)d(x,i[v])}function f(x){for(var v=0,b=l.animations,w=b.length;v<w;){var S=b[v],_=S.animatable,I=S.tweens,N=I.length-1,k=I[N];N&&(k=Rm(I,function(Q){return x<Q.end})[0]||k);for(var M=Wi(x-k.start-k.delay,0,k.duration)/k.duration,T=isNaN(M)?1:k.easing(M),C=k.to.strings,R=k.round,L=[],$=k.to.numbers.length,O=void 0,G=0;G<$;G++){var Z=void 0,H=k.to.numbers[G],j=k.from.numbers[G]||0;k.isPath?Z=Pue(k.value,T*H,k.isPathTargetInsideSVG):Z=j+T*(H-j),R&&(k.isColor&&G>2||(Z=Math.round(Z*R)/R)),L.push(Z)}var ne=C.length;if(!ne)O=L[0];else{O=C[0];for(var ee=0;ee<ne;ee++){C[ee];var oe=C[ee+1],ue=L[ee];isNaN(ue)||(oe?O+=ue+oe:O+=ue+" ")}}SA[S.type](_.target,S.property,O,_.transforms),S.currentValue=O,v++}}function g(x){l[x]&&!l.passThrough&&l[x](l)}function y(){l.remaining&&l.remaining!==!0&&l.remaining--}function m(x){var v=l.duration,b=l.delay,w=v-l.endDelay,S=u(x);l.progress=Wi(S/v*100,0,100),l.reversePlayback=S<l.currentTime,i&&p(S),!l.began&&l.currentTime>0&&(l.began=!0,g("begin")),!l.loopBegan&&l.currentTime>0&&(l.loopBegan=!0,g("loopBegin")),S<=b&&l.currentTime!==0&&f(0),(S>=w&&l.currentTime!==v||!v)&&f(v),S>b&&S<w?(l.changeBegan||(l.changeBegan=!0,l.changeCompleted=!1,g("changeBegin")),g("change"),f(S)):l.changeBegan&&(l.changeCompleted=!0,l.changeBegan=!1,g("changeComplete")),l.currentTime=Wi(S,0,v),l.began&&g("update"),x>=v&&(t=0,y(),l.remaining?(e=s,g("loopComplete"),l.loopBegan=!1,l.direction==="alternate"&&c()):(l.paused=!0,l.completed||(l.completed=!0,g("loopComplete"),g("complete"),!l.passThrough&&"Promise"in window&&(o(),a(l)))))}return l.reset=function(){var x=l.direction;l.passThrough=!1,l.currentTime=0,l.progress=0,l.paused=!0,l.began=!1,l.loopBegan=!1,l.changeBegan=!1,l.completed=!1,l.changeCompleted=!1,l.reversePlayback=!1,l.reversed=x==="reverse",l.remaining=l.loop,i=l.children,r=i.length;for(var v=r;v--;)l.children[v].reset();(l.reversed&&l.loop!==!0||x==="alternate"&&l.loop===1)&&l.remaining++,f(l.reversed?l.duration:0)},l._onDocumentVisibility=h,l.set=function(x,v){return _A(x,v),l},l.tick=function(x){s=x,e||(e=s),m((s+(t-e))*Pt.speed)},l.seek=function(x){m(u(x))},l.pause=function(){l.paused=!0,h()},l.play=function(){l.paused&&(l.completed&&l.reset(),l.paused=!1,pi.push(l),h(),TA())},l.reverse=function(){c(),l.completed=!l.reversed,h()},l.restart=function(){l.reset(),l.play()},l.remove=function(x){var v=Fv(x);IA(v,l)},l.reset(),l.autoplay&&l.play(),l}function M_(n,e){for(var t=e.length;t--;)kv(n,e[t].animatable.target)&&e.splice(t,1)}function IA(n,e){var t=e.animations,s=e.children;M_(n,t);for(var i=s.length;i--;){var r=s[i],o=r.animations;M_(n,o),!o.length&&!r.children.length&&s.splice(i,1)}!t.length&&!s.length&&e.pause()}function jue(n){for(var e=Fv(n),t=pi.length;t--;){var s=pi[t];IA(e,s)}}function Xue(n,e){e===void 0&&(e={});var t=e.direction||"normal",s=e.easing?Mv(e.easing):null,i=e.grid,r=e.axis,o=e.from||0,a=o==="first",l=o==="center",c=o==="last",u=Ye.arr(n),h=parseFloat(u?n[0]:n),d=u?parseFloat(n[1]):0,p=wr(u?n[1]:n)||0,f=e.start||0+(u?h:0),g=[],y=0;return function(m,x,v){if(a&&(o=0),l&&(o=(v-1)/2),c&&(o=v-1),!g.length){for(var b=0;b<v;b++){if(!i)g.push(Math.abs(o-b));else{var w=l?(i[0]-1)/2:o%i[0],S=l?(i[1]-1)/2:Math.floor(o/i[0]),_=b%i[0],I=Math.floor(b/i[0]),N=w-_,k=S-I,M=Math.sqrt(N*N+k*k);r==="x"&&(M=-N),r==="y"&&(M=-k),g.push(M)}y=Math.max.apply(Math,g)}s&&(g=g.map(function(C){return s(C/y)*y})),t==="reverse"&&(g=g.map(function(C){return r?C<0?C*-1:-C:Math.abs(y-C)}))}var T=u?(d-h)/y:h;return f+T*(Math.round(g[x]*100)/100)+p}}function que(n){n===void 0&&(n={});var e=Pt(n);return e.duration=0,e.add=function(t,s){var i=pi.indexOf(e),r=e.children;i>-1&&pi.splice(i,1);function o(d){d.passThrough=!0}for(var a=0;a<r.length;a++)o(r[a]);var l=Dm(t,Zx(Ev,n));l.targets=l.targets||n.targets;var c=e.duration;l.autoplay=!1,l.direction=e.direction,l.timelineOffset=Ye.und(s)?c:Dv(s,c),o(e),e.seek(l.timelineOffset);var u=Pt(l);o(u),r.push(u);var h=CA(r,n);return e.delay=h.delay,e.endDelay=h.endDelay,e.duration=h.duration,e.seek(0),e.reset(),e.autoplay&&e.play(),e},e}Pt.version="3.2.1";Pt.speed=1;Pt.suspendWhenDocumentHidden=!0;Pt.running=pi;Pt.remove=jue;Pt.get=$v;Pt.set=_A;Pt.convertPx=Av;Pt.path=Fue;Pt.setDashoffset=Due;Pt.stagger=Xue;Pt.timeline=que;Pt.easing=Mv;Pt.penner=pA;Pt.random=function(n,e){return Math.floor(Math.random()*(e-n+1))+n};const Zue=(n,e=1200,t=()=>{})=>{let s={x:n.scale.x,y:n.scale.y,z:n.scale.z};n.dMoving=!0,Pt({targets:[s],x:0,y:0,z:0,duration:e,easing:"linear",update:function(){n.scale.set(s.x,s.y,s.z)},complete:t})},Jx=n=>{if(n.dMoving)return;let e=E().get("scnData").scene.getObjectByName(n.name);if(e!==void 0)Zue(n,300,Yue(e));else{let t={color:"#FF0000"},s=new Xe(t.color);n.material.color.copy(s),n.material.needsUpdate=!0}},Yue=n=>()=>{n.geometry&&n.geometry.dispose(),n.material&&(n.material instanceof Array?n.material.forEach(e=>e.dispose()):n.material.dispose()),n.removeFromParent()},Np=(n,e,t)=>{let s=e.dStpIndex;s>D().get("steps").length-1&&(s=D().get("steps").length-1,e.dStpIndex=s),E().get("flwMap")[s.toString()].splice(t,1)},Jue=(n,e)=>D().get("backlogDeath")>0&&n.dStepsAges[0]>=D().get("backlogDeath")||D().get("death")>0&&n.dAge>=D().get("death")?(Jx(n),Np(null,n,e),!1):!0,Kue=(n,e)=>{let t=n.dStpIndex;const s=D().get("steps")[t].status,i=n.dDysRmnngThisStep;return t>D().get("steps").length-1&&(n.dStpIndex=D().get("steps").length-1),s==="touch"&&i>0},Que=(n,e)=>{if(e>=n)return 1;const t=e/n;return ehe(t)},ehe=n=>{if(n>1)return 1;const e=D().get("drag");if(e<=0||D().get("dragPoint")<=0)return 1;const s=Math.log(1-e)/Math.log(.5);return Math.round(Math.pow(n,s)*100)/100},the=(n,e)=>E().get("flwMap")[n].reduce((t,s)=>(s.dExpedite===e||D().get("expdtQueueLength")===0)&&s.dSkipForWip===!1?t+=1:t,0),nhe=(n,e,t)=>s=>{const i=D().get("steps"),r=D().get("expdtDvUnitsFactor");let o=s.dStpIndex;if(o>i.length-1&&(o=i.length-1,s.dStpIndex=o),i[o].status!=="touch")return;console.log(`applyDevCapacityToFlwItem(): Applying dev capacity to flow item "${s.name}" in step ${o} with days remaining: ${s.dDysRmnngThisStep}`);let a=0;if(t===!1){const l=the(o.toString(),s.dExpedite);let c=i[o].movingDevUnits||0;if(c<=0||l<=0)return;Na()===!0&&n===!0&&(c=c*r);const u=i[o].flwTimeAtStart,h=i[o].actualFlwTime;ga()/Dp();const p=h/u,f=gR()/p,g=Que(l,c);console.log(`applyDevCapacityToFlwItem(): devDays = (${c} * (${f} * ${g})) / ${l};`),a=c*(f*g)/l}isNaN(a)&&console.error(`applyDevCapacityToFlwItem(): devDays is NaN for flow item "${s.name}" in step ${o}.`),EA(s,a,e,o)},EA=(n,e,t,s)=>{console.log("updateDaysAndStoreSpareCapacity(): *************************************************************"),t[s.toString()]===void 0&&(t[s.toString()]=0,console.log(`updateDaysAndStoreSpareCapacity(): No spare capacity for step ${s}. Initialised to 0.`)),e===0&&t[s.toString()]>0&&(e=t[s.toString()],console.log(`updateDaysAndStoreSpareCapacity(): Using up ${n.dDysRmnngThisStep} of the ${e} days spare capacity in step ${s}.`),t[s.toString()]=0),!(e===0&&t[s.toString()]===0)&&(console.log(`updateDaysAndStoreSpareCapacity(): ${n.dDysRmnngThisStep} -= ${e}...`),n.dDysRmnngThisStep-=e,console.log(`updateDaysAndStoreSpareCapacity(): Updated ${n.name} in step ${s} to ${n.dDysRmnngThisStep} days remaining.`),n.dDysRmnngThisStep<=0?(console.log(`updateDaysAndStoreSpareCapacity(): Flow item "${n.name}" in step ${s} has ${n.dDysRmnngThisStep} days remaining. Adding ${Math.abs(n.dDysRmnngThisStep)} to the spare capacity in step ${s}.`),t[s.toString()]+=Math.abs(n.dDysRmnngThisStep),n.dDysRmnngThisStep=0,console.log(`updateDaysAndStoreSpareCapacity(): Flow item "${n.name}" in step ${s} now has ${n.dDysRmnngThisStep} days remaining.`)):t[s.toString()]>0?(console.log(`updateDaysAndStoreSpareCapacity(): Updating days again for "${n.name}" to use up spare capacity in step ${s}.`),EA(n,0,t,s)):(n.dDysRmnngThisStep=Math.round(n.dDysRmnngThisStep*100)/100,console.log(`updateDaysAndStoreSpareCapacity(): Rounded ${n.dDysRmnngThisStep} to ${n.dDysRmnngThisStep} days remaining.`)),isNaN(n.dDysRmnngThisStep)&&console.error(`updateDaysAndStoreSpareCapacity(): Flow item "${n.name}" in step ${s} has NaN days remaining.`),console.log(`updateDaysAndStoreSpareCapacity(): Flow item "${n.name}" in step ${s} has ${n.dDysRmnngThisStep} days remaining.`))},MA=n=>{const e=D().get("steps");n>=e.length&&console.error("The Flow Map and the Steps are out of sync.");let t=e[n].movingLimit;return n===e.length-1&&(t=0),t},kA=(n,e)=>{let t="no limit";return n>0&&(t=n-e.length),t!=="no limit"&&t<0&&(t=0),t},NA=n=>{var r,o,a;const e=sA(n.dStpIndex),t={...n.dPosition};if(((r=D().get("steps")[n.dStpIndex])==null?void 0:r.status)==="done"){const l=E().get("vSphere"),c=E().get("endPosition");t.x=(o=l==null?void 0:l.dPosition)==null?void 0:o.x,t.y=(a=l==null?void 0:l.dPosition)==null?void 0:a.y,t.z=c==null?void 0:c.z}else{const l=E().get("strtPosition");t.x=(l==null?void 0:l.x)+Math.round(yl()*_i(0,e)*100)/100*yl(),t.y=(l==null?void 0:l.y)+Math.round(_i(0,e)*100)/100*yl(),t.z=Kp(n.dStpIndex)}return t},Ap=n=>{n.dMoving=!0,n.dPosition={...NA(n)},n.dStpIndex<D().get("steps").length-1&&(n.dDysRmnngThisStep=n.dDysEachTouchStep),n.dMoving=!1},she=n=>{n.dMoving===!1&&(rhe(n,ohe(n)),D().get("steps")[n.dStpIndex].status==="done"?AA(n):ihe(n))},ihe=n=>{Pt({targets:[n.position],x:n.dPosition.x,y:n.dPosition.y,z:n.dPosition.z,duration:1e3/(D().get("fps")>=1?D().get("fps"):1),delay:0,easing:"easeInOutCirc",complete:()=>RA(n)})},AA=n=>{const e=n.dPosition.x,t=n.dPosition.y,s=n.dPosition.z,i=n.position.x,r=n.position.y,o=n.position.z,a=E().get("vSphere"),l=a.dPosition.x,c=a.dPosition.y,u=Math.abs(i-l),h=Math.abs(r-c),d=Math.sqrt(u*u+h*h),p={x:i,y:r,z:o},f={factor:n.dScale||1},g=1e3/(D().get("fps")>=1?D().get("fps"):1);n.dMoving=!0,Pt({targets:[p,f],x:e,y:t,z:s,factor:[f.factor,.1],duration:g,easing:"easeInOutCirc",update:function(){n.position.x=p.x,n.position.y=p.y,n.position.z=p.z;const y=Math.abs(p.x-l),m=Math.abs(p.y-c),v=Math.sqrt(y*y+m*m)/d;Math.max(.1,v*n.dScale),n.scale.x=f.factor,n.scale.y=f.factor,n.scale.z=f.factor},complete:()=>RA(n)})},RA=n=>{n.dMoving=!1,D().get("steps")[n.dStpIndex].status==="done"&&(n.dPosition.z===E().get("endPosition").z?(n.visible=!1,Jx(n)):(n.dPosition={...NA(n)},AA(n)))},rhe=(n,e)=>{let t={color:n.dColor};n.dColor=e,Pt({targets:t,color:e,duration:1e3,easing:"linear",update:function(){let s=new Xe(t.color);n.material.color.copy(s),n.material.needsUpdate=!0}})},ohe=n=>{const e=D().get("steps")[n.dStpIndex].status;let t="#"+D().get("colorGrey");return(e==="touch"||e==="done")&&(t="#"+D().get("colorGold"),n.dExpedite==!0&&(t="#"+D().get("colorGreen"))),t},$A=n=>{Ap(n),she(n)},Kx=(n,e)=>{let t=n.dStpIndex;t>D().get("steps").length-1&&(t=D().get("steps").length-1,n.dStpIndex=t),E().get("flwMap")[(t-1).toString()].splice(e,1),E().get("flwMap")[t.toString()].push(n)},Qx=(n,e,t)=>(s,i,r)=>{const o=E().get("flwItmsToMove");if(D().get("death")>0&&i.dAge>=D().get("death"))return console.log(`pullFlowItem(): Ignoring flwItem ${i.name} at step index ${i.dStpIndex} because it has died of old age`),s;let a=i.dStpIndex;if(a>D().get("steps").length-1&&(a=D().get("steps").length-1,i.dStpIndex=a,console.log(`pullFlowItem(): Adjusting flwItem ${i.name} dStpIndex to ${a} because it is out of bounds`)),a===0||D().get("steps")[a].status==="wait"||i.dDysRmnngThisStep<=0){if(i.dExpedite===!1&&s===0)return s;i.dStpIndex+=1,i.dStpIndex<D().get("steps").length-1&&(i.dDysRmnngThisStep=i.dDysEachTouchStep),o[i.name]=i,t(i,r),E().set("pullFlowItem(): flwItmsPulledCount",E().get("flwItmsPulledCount")+1)}return s!=="no limit"&&s>0&&s--,s},ahe=(n,e)=>{if(n<0)return;const t=n.toString(),s=E().get("flwMap")[t];if(s.length>0){let i=e;s.reduceRight(Qx(!1,$A,Kx),i)}},lhe=()=>(n,e,t)=>{if(t===0)return;let s=MA(t),i=kA(s,e);ahe(t-1,i)},DA=()=>{Jl().reduceRight(lhe(),null),E().get("flwItmsPulledCount")>0&&(E().set("flwItmsPulledCount",0),DA())},LA=()=>{E().set("flwItmsPulledCount",0),DA()},FA=(n,e,t={},s=!1)=>{const i={};n.forEach(o=>{i[o.dStpIndex.toString()]=!0,nhe(e,t,s)(o)}),Object.keys(t).reduce((o,a)=>i[a]===!0?o+=t[a]:o,0)>0&&(s=!0,LA(),Pv(t,s))},che=(n,e={},t=!1)=>{const s=n.filter(r=>r.dExpedite===!0);FA(s,!0,e,t)},uhe=(n,e={},t=!1)=>{const s=n.filter(r=>Na()===!0?r.dExpedite===!1:!0);FA(s,!1,e,t)},Pv=(n={},e=!1)=>{const t=Am().filter(Jue).filter(Kue);D().get("expdtQueueLength")>0&&D().get("expdtDvUnitsFactor")>0&&che(t,n,e),uhe(t,n,e)},hhe=()=>{if(E().get("vQueue")!==void 0&&E().get("thrPtQueue")!==void 0&&E().get("thrPtExpQueue")!==void 0&&E().get("thrPut")!==void 0&&D().get("timeBox")!==void 0){const n=D().get("timeBox");E().set("tmBox",(n/5).toString()+" wks");const e=E().get("thrPtQueue").dailyMean(),t=E().get("thrPtExpQueue").dailyMean(),s=Math.round(t*n+e*n*100)/100;E().set("thrPut",s);const i=ga(),r=Yl(),o=R0();let a=0,l=0,c=0;const u=E().get("vQueue").total();r>0&&(a=i/r),i>0&&(l=o/i*n),l>0&&a>0?(c=u/a/l*100,E().set("value",Math.floor(c).toString()+"%")):E().set("value","NA")}},PA=()=>{if(E().get("flwTmQueue")!==void 0&&E().get("thrPtQueue")!==void 0&&E().get("wipQueue")!==void 0&&E().get("flwTmExpQueue")!==void 0&&E().get("thrPtExpQueue")!==void 0&&E().get("wipExpQueue")!==void 0&&E().get("scnData")!==void 0){const n=E().get("thrPtQueue").dailyMean();E().set("thrPutPerDay",n);const e=E().get("thrPtExpQueue").dailyMean();E().set("thrPutExpPerDay",e);const t=E().get("flwTmQueue").flwItemMean();E().set("flwTime",t);const s=E().get("flwTmExpQueue").flwItemMean();E().set("flwTmExp",s);const i=E().get("wipQueue").dailyMean();E().set("wip",i);const r=E().get("wipExpQueue").dailyMean();E().set("wipExp",r)}},dhe=(n,e)=>{if(n<0)return;const t=n.toString(),s=E().get("flwMap")[t];if(s.length>0&&(e==="no limit"||e>0)){let i=!0;s.reduce(Qx(i,Ap,Kx),e),i=!1,s.reduce(Qx(i,Ap,Kx),e)}},phe=()=>(n,e,t)=>{if(t===0)return;let s=MA(t),i=kA(s,e);dhe(t-1,i)},OA=()=>{Jl().reduceRight(phe(),null),E().get("flwItmsPulledCount")>0&&(E().set("flwItmsPulledCount",0),OA())},fhe=()=>{E().set("flwItmsPulledCount",0),OA()},mhe=()=>{const n=D().get("steps"),e=E().get("flwMap");return n===void 0||e===void 0?0:n.reduce((t,s,i)=>{if(s.status==="touch"||s.status==="wait"){const r=e[i]?e[i].length:0;return t+r}return t},0)},zA=()=>{const n=D().get("steps"),e=E().get("flwMap"),t=nu(),s=mhe();if(s===0)return;n.map((r,o)=>{let a=0;return e[o]&&(a=e[o].length),o>0&&n[o-1].status==="wait"&&e[o-1]&&(a+=e[o-1].length),{index:o,wip:a}}).filter(r=>n[r.index].status==="touch").forEach(r=>{const o=r.wip/s,a=Math.round(t*o);n[r.index].movingDevUnits=a}),n.forEach(r=>{r.status!=="touch"&&(r.movingDevUnits=0)}),D().set("steps",n)},ghe=()=>{const n=E().get("flwItmsToMove"),e=D().get("timeBox");E().get("clicks");const t=Object.keys(n);for(let s=0;s<t.length;++s){const i=n[t[s]];delete n[t[s]],Ap(i)}D().get("devUnitsMoveToWork")&&zA(),mue(),cA(),Pv(),fhe(),aA(),oA(Np)(),PA(),E().get("clicks")===e&&hhe()},BA=(n,e,t)=>{const s=D().get("timeBox");if(E().get("clicks"),D().set("devPowerFix",e),n===0)return t;for(let r=0;r<s;r++)E().set("clicks",r+1),ghe();const i=E().get("flwTime");return t.push(i),BA(--n,e,t)},xhe=(n,e)=>async t=>{const s=[],i=E().getAllKeyValuePairsDeepCopy();$_(),nue();for(const d of t){E().set("currentDevPowerFix",d);const p=e(20,d,[]),f=p.reduce((y,m)=>y+m,0)/p.length,g=Math.round(f*1e3)/1e3;s.push(g),await new Promise(y=>setTimeout(y,250))}const r={inputs:s,labels:t},o=E().get("trainingStage"),a=E().get("lastPrediction"),l=E().get("modelTrained"),c=E().get("lastDataPoint"),u=E().get("currentDevPowerFix"),h=E().get("trainingProgress");return E().clear(),E().setAllKeyValuePairsWithFreshQueues(i),E().set("trainingStage",o),E().set("lastPrediction",a),E().set("lastDataPoint",c),E().set("modelTrained",l),E().set("currentDevPowerFix",u),E().set("trainingProgress",h),r};let hs=null,Rs,zi,ui,mr,Vd=!1,Ud=!1;const e0=1,t0=.001,n0=5,k_=1;let Qt=0,Bi=t0,qr=n0,bl=!1;const Rp=()=>{const n=n8();return n.add(v8({units:1,inputShape:[1]})),n.compile({optimizer:Lo.sgd(.1),loss:"meanSquaredError"}),n},Ov=()=>{if(Qt===0){Bi=t0,qr=n0;return}const n=E().get("lastPrediction");if(!n){Bi=t0,qr=n0;return}let e;switch(Qt){case 1:e=1;break;case 2:e=.1;break;default:e=.01}Bi=Math.max(.001,n-e),qr=Math.min(5,n+e),console.log("Stage "+Qt+": Using range "+Bi+" to "+qr+" (based on last prediction: "+n+")")},VA=()=>{hs||(hs=Rp()),E().get("trainingStage")===void 0?(console.log("The global state trainingStage is undefined, initializing to 0"),E().set("trainingStage",0),Qt=0,bl=!0):(Qt=E().get("trainingStage"),Qt>0?bl=!1:bl=!0),Ov()},yhe=()=>{Ud=!0},bhe=()=>Vd,vhe=async()=>{if(Vd){console.log("Training already in progress");return}hs||VA(),Vd=!0,Ud=!1;try{E().get("trainingStage")===void 0?(Qt=0,console.log("The global state trainingStage is undefined, initializing to 0"),E().set("trainingStage",0)):Qt=E().get("trainingStage"),console.log("Starting training for stage "+Qt+"/"+(e0-1)),Ov(),Qt>0&&(bl?console.log(`Continuing refinement stage (${Qt}): using existing data and narrowed range`):(console.log(`New refinement stage (${Qt}): clearing previous training data once for this stage`),Bce(),bl=!0,console.log("Training data cleared for stage",Qt)),hs=Rp());const n=nA(),e=Ko();if(E().set("trainingProgress",e.percentage),console.log("Starting stage "+Qt+" training with "+n+" existing data points out of "+e.target+" target"),n>=e.target){console.log("We have enough data points, training the model with existing data"),await mu(),E().set("modelTrained",!0),await N_();return}const t=e.target-n;console.log(`Need ${t} more points to reach target`);const s=Math.min(t<=k_?t:k_,t);console.log(`Planning to collect ${s} points in this session`);const i=Bi,r=qr;console.log("Using devPowerFix range: "+i+" to "+r+" for stage "+Qt);const a=Tv().map(m=>m.label),l=[];for(let m=0;m<s;m++){let x=0,v=i;const b=[...a].sort((w,S)=>w-S);if(b.length<2)v=i+(r-i)*(m/s);else{b[0]-i>x&&(x=b[0]-i,v=(i+b[0])/2);for(let w=0;w<b.length-1;w++){const S=b[w+1]-b[w];S>x&&(x=S,v=(b[w]+b[w+1])/2)}r-b[b.length-1]>x&&(x=r-b[b.length-1],v=(b[b.length-1]+r)/2)}l.push(v),a.push(v)}let c=0,u=0;const h=l.length*4;let d=0,p=0;const f=Math.floor(e.current/qx*100),g=f>=80?2:5;for(console.log(`Using failure threshold of ${g} (${f}% complete)`);u<s&&d<h;){if(d++,Ud){console.log("Training stopped by user");break}if(p>=g){if(console.warn(`⚠️ ${p} consecutive failures. Activating fallback mechanism...`),f>=80){console.log("🔄 Creating synthetic data point since we're near completion");const I=3+u*1.2%5,N=qr-Bi,k=Bi+u*.7%N;console.log(`💡 Generated synthetic data: input=${I}, label=${k}`),__(I,k),u++,p=0,E().set("lastDataPoint",{input:I,label:k}),console.log(`✅ Added synthetic training data point ${u}/${s}: input=${I}, label=${k}`);continue}const b=qr-Bi,w=Array.from({length:10}).map((I,N)=>Bi+b*(N/9)),S=u%w.length,_=w[S];console.log("Using fallback value: "+_+" (from stage "+Qt+" range)"),E().set("currentDevPowerFix",_),c=S,p=0}const m=l[c%l.length];E().set("currentDevPowerFix",m),console.log(`Attempting to collect data point ${u+1}/${s} with devPowerFix=${m}`);try{const v=E().get("currentDevPowerFix"),b=[v];console.log(`Generating data for devPowerFix=${v}`);const w=await xhe(Iv,BA)(b);if(console.log("Generated training data:",w),!w||!w.inputs||!w.labels)throw new Error("Invalid training data structure received");if(w.inputs.length>0&&w.inputs[0]>0){const S=w.inputs[0],_=w.labels[0];if(isNaN(S)||isNaN(_)||S<=0||_<=0)throw new Error(`Invalid numeric values: input=${S}, label=${_}`);__(S,_),u++,p=0,E().set("lastDataPoint",{input:S,label:_}),console.log(`✅ Added valid training data point ${u}/${s}: input=${S}, label=${_}`)}else console.log("❌ Invalid data point generated (input was 0 or empty). Trying again."),p++}catch(v){console.error(`Error generating data point: ${v.message}`,v),p++}const x=Ko();E().set("trainingProgress",x.percentage),console.log(`Current progress: ${x.current}/${x.target} (${x.percentage}%)`),c++,await new Promise(v=>setTimeout(v,100))}d>=h&&console.warn(`⚠️ Reached maximum attempts (${h}) with only ${u} valid points collected`),u>0&&u<s?(console.log(`Collected ${u}/${s} points in this session.`),console.log("We'll continue with next batch in the next session.")):u===0?console.error("Failed to collect any data points in this session."):console.log(`Successfully collected all ${s} points for this session!`),u>0?(console.log(`Training model with data collected (${u} new points)`),await mu()):console.warn("No new valid data points were collected in this session.");const y=Ko();console.log(`Final training progress: ${y.current}/${y.target} (${y.percentage}%)`),y.percentage===100?(console.log("🎉 Data collection for this stage complete! Processing results and preparing for next stage."),await N_()):console.log("Training progress for stage "+Qt+": "+y.percentage+"%. Will continue collecting data in next session.")}finally{Vd=!1,Ud=!1,console.log("Training process completed")}},N_=async()=>{E().set("currentDevPowerFix",null),await mu(),E().set("modelTrained",!0);const n=E().get("targetFlowTime")||30;console.log("Making a prediction for target flow time "+n+" using the stage "+Qt+" model");const e=await UA(n);console.log("🎯 Stage "+Qt+" model predicted optimal devPowerFix: "+e),E().set("lastPrediction",e),D().set("devPowerFix",e),console.log("✅ Updated global devPowerFix setting to: "+e),Qt<e0-1?(Qt++,E().set("trainingStage",Qt),console.log("Advanced to stage "+Qt+"/"+(e0-1)),bl=!1,Ov(),console.log("Next stage will use range: "+Bi+" to "+qr)):(console.log("🎊 All refinement stages complete! Final prediction: "+e),Qt=0,E().set("trainingStage",0))},mu=async()=>{console.log("Starting trainModelWithExistingData()");const n=Vce();if(n.inputs.length===0){console.error("No training data available");return}console.log(`Training with ${n.inputs.length} data points`),console.log("Sample inputs:",n.inputs.slice(0,3)),console.log("Sample labels:",n.labels.slice(0,3));const e=n.inputs,t=n.labels,s=Zo(e,[e.length,1]),i=Zo(t,[t.length,1]);Rs=s.min(),zi=s.max(),ui=i.min(),mr=i.max(),console.log("Data normalization values:",{inputMin:Rs.dataSync()[0],inputMax:zi.dataSync()[0],labelMin:ui.dataSync()[0],labelMax:mr.dataSync()[0]});const r=s.sub(Rs).div(zi.sub(Rs)),o=i.sub(ui).div(mr.sub(ui));if(hs||(console.log("Model not initialized, creating a new one"),hs=Rp()),console.log("Starting model training with",e.length,"data points"),hs){const l=Zo([.5],[1,1]).sub(Rs).div(zi.sub(Rs)),u=await hs.predict(l).data();console.log("Prediction before training:",u[0]),!E().get("modelTrained")?(hs=Rp(),console.log("Model has been reset and recompiled")):console.log("Continuing with existing model (already partially trained)");const d=await hs.fit(r,o,{epochs:100,shuffle:!0,callbacks:{onEpochEnd:(g,y)=>{g%10===0&&console.log(`Epoch ${g+1}: loss = ${y.loss}`)},onTrainEnd:()=>{console.log("Training completed")}}}),f=await hs.predict(l).data();console.log("Prediction after training:",f[0]),console.log("Model prediction changed:",u[0]!==f[0]),console.log("Prediction difference:",f[0]-u[0]),console.log("Final training loss:",d.history.loss[d.history.loss.length-1]),E().set("modelTrained",!0)}},UA=async n=>{console.log(`⭐ PREDICT: predictDevPowerFix called with targetFlowTime: ${n}`);try{E().set("currentDevPowerFix",null);const e=E().get("lastDataPoint");if(e&&(console.log("Last data point found in state:",e),console.log("CLEARING lastDataPoint to prevent reuse"),E().set("lastDataPoint",null)),isNaN(n)||n<=0)return console.error(`Invalid targetFlowTime: ${n}`),1;hs||(console.log("No model initialized, creating one"),VA());const t=Ko();if(console.log(`Training progress: ${t.current}/${t.target} (${t.percentage}%)`),t.current<3)return console.log("Not enough training data available for prediction. Using default value."),1;const s=E().get("modelTrained");if(console.log(`Model trained flag state: ${s}`),(!Rs||!zi||!ui||!mr||!s)&&(console.log("Model normalization parameters not set, training model first"),await mu()),!hs||!Rs||!zi||!ui||!mr)return console.error("Model or normalization tensors are not ready after attempted training."),1;t.percentage===100&&(console.log("At 100% training progress - ensuring model is trained with all data"),await mu()),console.log("Model normalization parameters:",{inputMin:Rs==null?void 0:Rs.dataSync()[0],inputMax:zi==null?void 0:zi.dataSync()[0],labelMin:ui==null?void 0:ui.dataSync()[0],labelMax:mr==null?void 0:mr.dataSync()[0]});const i=parseFloat(n)||0;if(i<0)return console.log("Invalid target flow time (negative), using default value"),1;console.log(`Normalized input from ${i}`);const r=Zo([i],[1,1]).sub(Rs).div(zi.sub(Rs));if(hs){console.log("Making prediction with trained model");const o=E().get("currentDevPowerFix");console.log("Current devPowerFix in state:",o);const a=Tv();console.log("All training data points:",JSON.stringify(a,null,2));const l=a.find(f=>Math.abs(f.input-i)<.001);l&&console.log("Found exact match in training data:",l);const u=hs.predict(r).mul(mr.sub(ui)).add(ui),[h]=await u.data();if(console.log("Raw predicted value from MODEL:",h),a.length>0){const f=a[a.length-1];console.log("Last training data point:",f);const g=Math.abs(h-f.label)<1e-4;if(console.log("Is prediction suspiciously close to last point's label?",g),g){console.warn("⚠️ PREDICTION TOO CLOSE TO LAST TRAINING POINT! Adjusting prediction");const y=a.reduce((b,w)=>b+w.label,0)/a.length;console.log("Average of all training labels:",y);const m=y*.9;console.log("Using adjusted prediction instead:",m);const x=Math.max(.01,m),v=Math.round(x*100)/100;return E().set("currentDevPowerFix",null),E().set("lastDataPoint",null),console.log(`FINAL ADJUSTED PREDICTION: ${v}`),v}}if(isNaN(h))return console.error("Prediction resulted in NaN, using default value"),1;const d=Math.max(.01,h),p=Math.round(d*100)/100;return console.log(`Final prediction from MODEL: ${p} (after clamping and rounding)`),E().set("currentDevPowerFix",null),E().set("lastDataPoint",null),p}return console.log("No model available for prediction, returning default value"),1}catch(e){return console.error("Error in predictDevPowerFix:",e),1}};bi({"div#config-container p":{marginBottom:"1rem",marginTop:"1rem"}});const Wd=n=>{const[e,t]=Kt(null),[s,i]=Kt(Ko());Bt(()=>{const g=setInterval(()=>{const y=E().get("currentDevPowerFix");t(y),bhe()&&i(Ko())},1e3);return()=>clearInterval(g)},[]);const[r,o]=Kt({});Bt(()=>{bi(D0()),o(LB())},[]);const[a,l]=Ol(io),[c,u]=Kt(!1),h=async()=>{if(c){yhe(),u(!1);return}u(!0);try{if(await vhe(),c){E().set("currentDevPowerFix",null);const g=await UA(a.targetFlowTime);console.log("PREDICTION RECEIVED IN CONFIG:",g),D().set("devPowerFix",g),l({type:"SET",payload:{key:"devPowerFix",value:g}})}}catch(g){console.error("Error during training:",g)}finally{u(!1),i(Ko())}},[d,p]=Kt(!1),f=()=>{p(!d)};return Bt(()=>{p(!1)},[]),Bt(DB(d),[d]),Bt(()=>{setTimeout(()=>{const g=document.getElementById("config-icon");g&&(g.style.display="block")},20)},[]),Fe`
    <div
      id="config-close-icon"
      className="${r.configClose}"
      onClick="${f}"
    >
      <span className="material-icons ${r.configIcon}"> close </span>
    </div>

    <div id="config-container" className="${r.configContainer}">
      <fieldset>
        <${vB}
          sid=${a.sid}
          styles=${r}
          changeSetting=${Ke("sid",l)}
        />

        <!-------------------------------------------------------------------->
        <!-- DISPLAY TERMS -->
        <!-------------------------------------------------------------------->
        <h2 className=${r.legend}>Display Terms</h2>

        <${bB}
          displayName=${a.displayName}
          changeSetting=${Ke("displayName",l)}
        />

        <${yB}
          devUnitsTerm=${a.devUnitsTerm}
          changeSetting=${Ke("devUnitsTerm",l)}
        />

        <!-------------------------------------------------------------------->
        <!-- WORKFLOW STEPS-->
        <!-------------------------------------------------------------------->
        <h2 className=${r.legend}>Workflow Steps</h2>

        <${AB}
          numberOfSteps=${a.numberOfSteps}
          changeSetting=${Ke("numberOfSteps",l)}
        />
        <${NB} numberOfSteps=${a.numberOfSteps} />

        <!-------------------------------------------------------------------->
        <!-- QUEUE SETTINGS -->
        <!-------------------------------------------------------------------->
        <h2 className=${r.legend}>Queue Settings</h2>

        <div className=${r.field}>
          <${mT}
            arrivalRate=${a.arrivalRate}
            changeSetting=${Ke("arrivalRate",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="arrivalRateParam"
              name="arrivalRateParam"
              onChange=${Ke("arrivalRateParam",l)}
              checked=${a.arrivalRateParam===!0}
            />
            <label className=${r.legendSub}for="arrivalRateParam">Editable</label>
          </div>
        </div>

        <div className=${r.field}>
          <${fT}
            timeBox=${a.timeBox}
            changeSetting=${Ke("timeBox",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="timeBoxParam"
              name="timeBoxParam"
              onChange=${Ke("timeBoxParam",l)}
              checked=${a.timeBoxParam===!0}
            />
            <label className=${r.legendSub}for="timeBoxParam">Editable</label>
          </div>
        </div>

        <${pB}
          flwTimeMin=${a.flwTimeMin}
          changeSetting=${Ke("flwTimeMin",l)}
        />

        <h3 className=${r.legendH3}>Pareto Principle</h2>

        <p>
          The Pareto Principle (80/20 rule) is often applied to software development to suggest that 20% of features deliver 80% of the value that users derive from a product. Here we're extrapolating that to suggest that 20% of the work items in a workflow will deliver 80% of the value. But the 80/20 rule is always a guess. In any particular situation the actual ratio may be different, so we can change the ratio to reflect what we feel about the particular context for the workflow.
        </p>

        <div className=${r.field}>
          <${pT}
            paretoPoint=${a.paretoPoint}
            changeSetting=${Ke("paretoPoint",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="paretoPointParam"
              name="paretoPointParam"
              onChange=${Ke("paretoPointParam",l)}
              checked=${a.paretoPointParam===!0}
            />
            <label className=${r.legendSub}for="paretoPointParam">Editable</label>
          </div>

        </div>

        <h3 className=${r.legendH3}>Expiry Dates</h3>

        <${iT}
          death=${a.death}
          changeSetting=${Ke("death",l)}
        />
        <div className=${r.field}>
          <${sT}
            backlogDeath=${a.backlogDeath}
            changeSetting=${Ke("backlogDeath",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="backlogDeathParam"
              name="backlogDeathParam"
              onChange=${Ke("backlogDeathParam",l)}
              checked=${a.backlogDeathParam===!0}
            />
            <label className=${r.legendSub}for="backlogDeathParam">Editable</label>
          </div>
        </div>
        
        <div className=${r.field}>
          <${$B}
            staggeredStart=${a.staggeredStart}
            changeSetting=${Ke("staggeredStart",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="staggeredStartParam"
              name="staggeredStartParam"
              onChange=${Ke("staggeredStartParam",l)}
              checked=${a.staggeredStartParam===!0}
            />
            <label className=${r.legendSub}for="staggeredStartParam">Editable</label>
          </div>
        </div>

        <h3 className=${r.legendH3}>Drag</h2>

        <p>Drag from excess WIP:</p>
        <div className=${r.field}>
          <${hT}
            drag=${a.drag}
            changeSetting=${Ke("drag",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="dragParam"
              name="dragParam"
              onChange=${Ke("dragParam",l)}
              checked=${a.dragParam===!0}
            />
            <label className=${r.legendSub}for="dragParam">Editable</label>
          </div>
        </div>
        <div className=${r.field}>
          <${dT}
            dragPoint=${a.dragPoint}
            changeSetting=${Ke("dragPoint",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="dragPointParam"
              name="dragPointParam"
              onChange=${Ke("dragPointParam",l)}
              checked=${a.dragPointParam===!0}
            />
            <label className=${r.legendSub}for="dragPointParam">Editable</label>
          </div>
        </div>

        <!-------------------------------------------------------------------->
        <!-- ENABLING CONSTRAINTS -->
        <!-------------------------------------------------------------------->

        <h2 className=${r.legend}>Enabling Constraints</h2>

        <div className=${r.field}>
          <${aT}
            flwItmSizeLimit=${a.flwItmSizeLimit}
            changeSetting=${Ke("flwItmSizeLimit",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="flwItmSizeLimitParam"
              name="flwItmSizeLimitParam"
              onChange=${Ke("flwItmSizeLimitParam",l)}
              checked=${a.flwItmSizeLimitParam===!0}
            />
            <label className=${r.legendSub}for="flwItmSizeLimitParam">Editable</label>
          </div>
        </div>

        <div className=${r.field}>
          <${lT}
            devUnitsMoveToWork=${a.devUnitsMoveToWork}
            changeSetting=${Ke("devUnitsMoveToWork",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="devUnitsMoveToWorkParam"
              name="devUnitsMoveToWorkParam"
              onChange=${Ke("devUnitsMoveToWorkParam",l)}
              checked=${a.devUnitsMoveToWorkParam===!0}
            />
            <label className=${r.legendSub}for="devUnitsMoveToWorkParam">Editable</label>
          </div>
        </div>

        <h3 className=${r.legendH3}>Unplanned Work</h2>

        <div className=${r.field}>
          <${oT}
            expdtQueueLength=${a.expdtQueueLength}
            changeSetting=${Ke("expdtQueueLength",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="expdtQueueLengthParam"
              name="expdtQueueLengthParam"
              onChange=${Ke("expdtQueueLengthParam",l)}
              checked=${a.expdtQueueLengthParam===!0}
            />
            <label className=${r.legendSub}for="expdtQueueLengthParam">Editable</label>
          </div>
        </div>
        <div className=${r.field}>
          <${rT}
            expdtDvUnitsFactor=${a.expdtDvUnitsFactor}
            changeSetting=${Ke("expdtDvUnitsFactor",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="expdtDvUnitsFactorParam"
              name="expdtDvUnitsFactorParam"
              onChange=${Ke("expdtDvUnitsFactorParam",l)}
              checked=${a.expdtDvUnitsFactorParam===!0}
            />
            <label className=${r.legendSub}for="expdtDvUnitsFactorParam">Editable</label>
          </div>
        </div>

        <!-------------------------------------------------------------------->
        <!-- UI SETTINGS -->
        <!-------------------------------------------------------------------->

        <h2 className=${r.legend}>UI Settings</h2>

        <${RB}
          paramsMaxWip=${a.paramsMaxWip}
          changeSetting=${Ke("paramsMaxWip",l)}
        />
        <div className=${r.field}>
          <${cT}
            fps=${a.fps}
            changeSetting=${Ke("fps",l)}
          />
          <div className=${r.checkboxContainer}>
            <input
              type="checkbox"
              className=${r.editableCheckbox}
              id="fpsParam"
              name="fpsParam"
              onChange=${Ke("fpsParam",l)}
              checked=${a.fpsParam===!0}
            />
            <label className=${r.legendSub}for="fpsParam">Editable</label>
          </div>
        </div>
        <${aB}
          scaleCm=${a.scaleCm}
          changeSetting=${Ke("scaleCm",l)}
        />

        <p>
          "Range" settings for the cube spread/clumping display at each step.
        </p>

        <${mB}
          rangeMax=${a.rangeMax}
          changeSetting=${Ke("rangeMax",l)}
        />
        <${gB}
          rangeIncreaseRate=${a.rangeIncreaseRate}
          changeSetting=${Ke("rangeIncreaseRate",l)}
        />
        <${xB}
          rangeMidpoint=${a.rangeMidpoint}
          changeSetting=${Ke("rangeMidpoint",l)}
        />

        <!-------------------------------------------------------------------->
        <!-- TUNING -->
        <!-------------------------------------------------------------------->

        <h2 className=${r.legend}>Tuning</h2>

        <${fB}
          targetFlowTime=${a.targetFlowTime}
          changeSetting=${Ke("targetFlowTime",l)}
        />
        <button data-cy="tune-button" onClick=${h}>
          ${c?"Cancel Tuning":"Tune"}
        </button>
        <div style="margin-top: 0.5rem; color: #fff; font-size: 1rem;">
          ${c&&e!==null?`Testing with devPowerFix value: ${e}`:""}
          ${s.current>0?`Data points collected: ${s.current}/${s.target} (${s.percentage}%)`:""}
        </div>
        <div style="margin-bottom: 1rem; width: 100%; height: 5px; background: #333;">
          <div style="height: 100%; width: ${s.percentage}%; background: #4CAF50;"></div>
        </div>
        <${uT}
          devPowerFix=${a.devPowerFix}
          changeSetting=${Ke("devPowerFix",l)}
        />
      </fieldset>
    </div>
    <div
      id="config-icon"
      className="${r.config}"
      onClick="${f}"
    >
      <span className="material-icons ${r.configIcon}"> tune </span>
    </div>
  `};Er(kr("flwshare"));const[whe]=Mr({linkedIn:{position:"absolute",zIndex:"50000",display:"block",boxSizing:"border-box",bottom:"0.5rem",left:"0.5rem",cursor:"pointer"},linkedInIcon:{fontSize:"54px",color:"white"}});bi({});const She=n=>(Bt(()=>{setTimeout(()=>{_he()},20)},[]),Fe`
    <div id="linkedin-icon" className="${whe.linkedIn}">
      <a href="https://www.linkedin.com/in/kynanhughes/" target="_blank"
        ><img src="/img/cv_profile_circle.png" height="45px" width="45px"
      /></a>
    </div>
  `),_he=()=>{const n=document.getElementById("linkedin-icon");n!==null&&(n.style.display="block")};Er(kr("flwhome"));const[A_]=Mr({home:{position:"absolute",zIndex:"50000",boxSizing:"border-box",top:"1.2rem",left:"1.2rem",cursor:"pointer",display:"none"},homeIcon:{fontSize:"54px",color:"white"}});bi({});const Che=n=>(Bt(()=>{setTimeout(()=>{The()},20)},[]),Fe`
    <div
      id="home-icon"
      className="${A_.home}"
      onClick=${()=>window.location.reload()}
    >
      <span className="material-icons ${A_.homeIcon}"> home </span>
    </div>
  `),The=()=>{const n=document.getElementById("home-icon");n!==null&&(n.style.display="none")};var Xc=function(){var n=0,e=document.createElement("div");e.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",e.addEventListener("click",function(u){u.preventDefault(),s(++n%e.children.length)},!1);function t(u){return e.appendChild(u.dom),u}function s(u){for(var h=0;h<e.children.length;h++)e.children[h].style.display=h===u?"block":"none";n=u}var i=(performance||Date).now(),r=i,o=0,a=t(new Xc.Panel("FPS","#0ff","#002")),l=t(new Xc.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var c=t(new Xc.Panel("MB","#f08","#201"));return s(0),{REVISION:16,dom:e,addPanel:t,showPanel:s,begin:function(){i=(performance||Date).now()},end:function(){o++;var u=(performance||Date).now();if(l.update(u-i,200),u>=r+1e3&&(a.update(o*1e3/(u-r),100),r=u,o=0,c)){var h=performance.memory;c.update(h.usedJSHeapSize/1048576,h.jsHeapSizeLimit/1048576)}return u},update:function(){i=this.end()},domElement:e,setMode:s}};Xc.Panel=function(n,e,t){var s=1/0,i=0,r=Math.round,o=r(window.devicePixelRatio||1),a=80*o,l=48*o,c=3*o,u=2*o,h=3*o,d=15*o,p=74*o,f=30*o,g=document.createElement("canvas");g.width=a,g.height=l,g.style.cssText="width:80px;height:48px";var y=g.getContext("2d");return y.font="bold "+9*o+"px Helvetica,Arial,sans-serif",y.textBaseline="top",y.fillStyle=t,y.fillRect(0,0,a,l),y.fillStyle=e,y.fillText(n,c,u),y.fillRect(h,d,p,f),y.fillStyle=t,y.globalAlpha=.9,y.fillRect(h,d,p,f),{dom:g,update:function(m,x){s=Math.min(s,m),i=Math.max(i,m),y.fillStyle=t,y.globalAlpha=1,y.fillRect(0,0,a,d),y.fillStyle=e,y.fillText(r(m)+" "+n+" ("+r(s)+"-"+r(i)+")",c,u),y.drawImage(g,h+o,d,p-o,f,h,d,p-o,f),y.fillRect(h+p-o,d,o,f),y.fillStyle=t,y.globalAlpha=.9,y.fillRect(h+p-o,d,o,r((1-m/x)*f))}}};const R_=()=>{const n=new Xc;return n.setMode(0),n.domElement.id="stats",n.domElement.style.position="absolute",n.domElement.style.left="0",n.domElement.style.top="0",n},Ihe=()=>{const n=new ts(75,window.innerWidth/window.innerHeight,.01,50);return n.position.z=1.5,n.position.y=D().get("y"),n.position.x=Math.abs(parseInt(5/2))*D().get("x"),n},Ehe=()=>new ts(75,window.innerWidth/window.innerHeight,.01,50),Mhe=({scene:n,camera:e,renderer:t})=>{const s={};s.active=!0;const i=new T0(.15,.2,32).rotateX(-Math.PI/2),r=new fa;s.reticle=new gn(i,r);const o=D().get("scale");return s.reticle.scale.set(o,o,o),s.reticle.updateMatrix(),s.reticle.matrixAutoUpdate=!1,s.reticle.visible=!1,n.add(s.reticle),s},khe=async()=>{const n=E().get("scnData"),e=n.renderer.xr.getSession(),t=await e.requestReferenceSpace("viewer");n.reticleStuff.hitTestSource=await e.requestHitTestSource({space:t}),n.reticleStuff.localSpace=await e.requestReferenceSpace("local"),n.reticleStuff.hitTestSourceInitialized=!0,e.addEventListener("end",()=>{n.reticleStuff.hitTestSourceInitialized=!1,n.reticleStuff.hitTestSource=null})},Nhe=()=>async(n,e)=>{const t=E().get("scnData");if(e){if(t.reticleStuff.hitTestSourceInitialized||await khe(),t.reticleStuff.active){if(t.reticleStuff.hitTestSourceInitialized){const s=e.getHitTestResults(t.reticleStuff.hitTestSource);if(s.length>0){const r=s[0].getPose(t.reticleStuff.localSpace);t.reticleStuff.reticle.visible=!0,t.reticleStuff.reticle.matrix.fromArray(r.transform.matrix)}else t.reticleStuff.reticle.visible=!1}}else t.reticleStuff.reticle.visible=!1;if(t.stats!==void 0&&t.stats.update(),t.stpMetrics!==void 0)for(let s of t.stpMetrics)s.lookAt(t.camera.position);t.renderer.render(t.scene,t.camera)}},WA=()=>{let n=document.getElementById("ar-container");if(n)return n;n=document.createElement("div"),n.id="ar-container";const e=document.getElementById("flw");return e!==null?e.appendChild(n):console.error('There is no <div> with id "flw".'),n},Ahe=()=>{const n=new Dt({antialias:!0,alpha:!0});return n.shadowMap.enabled=!0,n.setPixelRatio(window.devicePixelRatio),n.setSize(window.innerWidth,window.innerHeight),n.xr.enabled=!0,n},GA=()=>{const n=new Xz;n.setSize(window.innerWidth,window.innerHeight),n.domElement.style.position="absolute",n.domElement.style.top="0",n.domElement.style.pointerEvents="none",n.domElement.id="label-renderer";const e=document.getElementById("dom-overlay");return e!==null&&e.appendChild(n.domElement),n},HA=(n,e,t,s)=>()=>{n.aspect=s.innerWidth/s.innerHeight,n.updateProjectionMatrix(),e.setSize(s.innerWidth,s.innerHeight),t.setSize(s.innerWidth,s.innerHeight)},jA=(n=0)=>{const e=Rhe(n);return $he(e),Dhe(e,n),Phe(e),E().get("flwItmTracker")[e.name]=[],Lhe(e),Fhe(e),Ohe(e),zhe(e,n),E().get("clckCbGroup").add(e),e},Rhe=n=>{const e=new ma(D().get("x"),D().get("y"),D().get("z")),t=D().get("steps")[n].status;let s;t==="backlog"?s="#"+D().get("colorBlue"):t==="wait"?s="#"+D().get("colorGrey"):t==="touch"&&(s="#"+D().get("colorGold"));const i=new Jp({color:s}),r=new gn(e,i);return r.receiveShadow=!0,r.castShadow=!0,r.dColor=s,r},$he=n=>(n.name=n.uuid,n.dTmNumber=_i(1,1),n.dExpedite=!1,n.dSkipForWip=!1,n),Dhe=(n,e)=>(n.dStpIndex=e,E().get("flwMap")[n.dStpIndex.toString()].push(n),n),Lhe=n=>{const e=ga(),t=Yl();let s=D().get("flwTimeMin");s>e&&(s=e),n.dDysTotal=_i(s,t);let r=n.dDysTotal/t;return n.dValue=r,D().get("flwItmSizeLimit")>=.2&&D().get("flwItmSizeLimit")<1&&r>=D().get("flwItmSizeLimit")&&(n.dValue=iA(r,D().get("flwItmSizeLimit")),n.dDysTotal=D().get("flwItmSizeLimit")*t,r=D().get("flwItmSizeLimit")),n.scale.set(r,r,r),n.dScale=r,n},Fhe=n=>{const e=n.dScale;return n.dVolume=D().get("x")*e*(D().get("y")*e)*(D().get("z")*e),n},Phe=(n,e)=>{if(n.dAge=0,n.dStepsAges={},D().get("steps").forEach((s,i)=>{n.dStepsAges[i.toString()]=0}),D().get("staggeredStart")||!1){let s=n.dStpIndex;n.dAge=_i(Math.min(.1,D().get("steps")[s].actualFlwTime),D().get("steps")[s].actualFlwTime)}else n.dAge=0},Ohe=n=>{let e=n.dStpIndex;e>D().get("steps").length-1&&(e=D().get("steps").length-1,n.dStpIndex=e),n.dDysEachTouchStep=n.dDysTotal/Dp(),n.dDysRmnngThisStep=0,D().get("staggeredStart"),n.dDysRmnngThisStep=D().get("steps")[e].actualFlwTime-n.dAge},zhe=(n,e)=>{n.position.x=E().get("strtPosition").x,n.position.y=E().get("strtPosition").y,n.position.z=Kp(e),n.dPosition={...n.position},n.dPosition={...Bhe(n)},n.position.x=n.dPosition.x,n.position.y=n.dPosition.y,n.position.z=n.dPosition.z,n.dMoving=!1},Bhe=n=>{let e=n.dStpIndex;e>D().get("steps").length-1&&(e=D().get("steps").length-1,n.dStpIndex=e);const t=sA(e),s={...n.dPosition};return s.x=E().get("strtPosition").x+Math.round(yl()*_i(0,t)*100)/100*yl(),s.y=E().get("strtPosition").y+Math.round(_i(0,t)*100)/100*yl(),s},Vhe=()=>{if(Math.floor(E().get("arrivalNumber"))>=1){if(E().get("flwMap")[0].length<D().get("steps")[0].limit||D().get("steps")[0].limit===0){for(let n=1;n<=E().get("arrivalNumber");n++)jA();E().set("arrivalNumber",E().get("arrivalNumber")%1+D().get("arrivalRate"))}}else E().set("arrivalNumber",E().get("arrivalNumber")+D().get("arrivalRate"))},Uhe=()=>{E().get("vQueue").total()!==0&&(Ghe(),Whe())},Whe=()=>{Pt({targets:[E().get("vSphere").position],z:E().get("vSphere").dPosition.z,duration:300,delay:0,easing:"linear",complete:n=>{E().get("vSphere").dMoving=!1,E().get("vSphere").visible=!0}})},Ghe=()=>{if(E().get("vSphere").dMoving===!1){E().get("vSphere").dMoving=!0;let e={scale:E().get("vSphere").scale.x};Pt({targets:[e],scale:E().get("vSphere").dRadius,duration:300,easing:"linear",update:function(){E().get("vSphere").scale.set(e.scale,e.scale,e.scale)}})}},Hhe=()=>{bue(),Uhe()},jhe=n=>{let e=n.dStpIndex;if(e>D().get("steps").length-1&&(e=D().get("steps").length-1,n.dStpIndex=e),e!==0&&D().get("death")>0){const t=1-n.dAge/Yl()/20;t<n.material.opacity&&(n.material.opacity=t),n.material.needsUpdate=!0}return n},Xhe=()=>{Am().map(jhe)},qhe=()=>{cA(),Xhe()},Zhe=()=>{if(E().get("vQueue")!==void 0&&E().get("thrPtQueue")!==void 0&&E().get("thrPtExpQueue")!==void 0&&E().get("thrPut")!==void 0&&D().get("timeBox")!==void 0&&E().get("scnData")!==void 0){const n=D().get("timeBox");E().set("tmBox",(n/5).toString()+" wks");const e=E().get("thrPtQueue").dailyMean(),t=E().get("thrPtExpQueue").dailyMean(),s=Math.round(t*n+e*n*100)/100;E().set("thrPut",s);const i=ga(),r=Yl(),o=R0();let a=0,l=0,c=0;const u=E().get("vQueue").total();r>0&&(a=i/r),i>0&&(l=o/i*n),l>0&&a>0?(c=u/a/l*100,E().set("value",Math.floor(c).toString()+"%")):E().set("value","NA");const h=E().get("scnData");if(h===void 0||h.stpMetrics===void 0)return;h.stpMetrics.forEach(d=>{Zz(d)})}},Yhe=()=>{const n=E().get("flwItmsToMove");if(D().get("timeBox"),E().get("clicks"),E().get("paused")===!1){const e=Object.keys(n);for(let t=0;t<e.length;++t){const s=n[e[t]];delete n[e[t]],$A(s)}D().get("devUnitsMoveToWork")&&zA(),Vhe(),Hhe(),qhe(),Pv(),LA(),aA(),oA(Np)(),PA(),E().get("clicks")===1&&Zhe()}zv()},Jhe=()=>{Pt({targets:[E().get("clckCbGroup").clckCube.rotation],y:E().get("clckCbGroup").clckCube.rotation.y+Math.PI/2,duration:1e3/D().get("fps"),easing:"easeInOutSine",complete:Yhe})},zv=()=>{E().get("clicks")<D().get("timeBox")?E().set("clicks",E().get("clicks")+1):E().set("clicks",1),Jhe()},XA=()=>{const n=Jl(),e=D().get("steps")||[];if(n.length===0||e.length===0||n.length!==e.length){setTimeout(XA,1e3);return}n.forEach((t,s)=>{if(e[s]!==void 0&&e[s].limit!==void 0){e[s].status!=="done"&&(Zce(s),Qce(s,[{key:"Limit",value:e[s].limit.toString()},{key:"DvUnts",value:"0"}]));for(let i=1;i<=e[s].limit;i++)e[s].status!=="done"&&jA(s)}})},Khe=()=>new KC(16777215,1),Qhe=()=>{const e=new JC(16777215,.1);return e.position.set(E().get("endPosition").x,E().get("endPosition").y+10,E().get("endPosition").z+10),e.castShadow=!0,e.target=E().get("clickCube"),e},ede=async()=>{const n=await new XC().loadAsync("../../../img/assets/textures/gold_7.jpg").catch(i=>{console.log(i)}),e=new Jp({map:n,side:wl}),t=new E0(1,32,32),s=new gn(t,e);return s.receiveShadow=!0,s.castShadow=!0,s.visible=!1,s.position.x=E().get("endPosition").x,s.position.y=E().get("endPosition").y,s.position.z=E().get("endPosition").z,s.dPosition=s.position.clone(),s.material.opacity=.9,s.scale.set(0,0,0),s},tde=async()=>{E().set("vSphere",await ede()),E().get("vSphere").dRllngTtlVolume=0,E().get("vSphere").dRadius=D().get("scale"),E().get("vSphere").position.x=E().get("endPosition").x,E().get("vSphere").position.y=E().get("endPosition").y,E().get("vSphere").position.z=E().get("endPosition").z,E().get("vSphere").dPosition.x=E().get("endPosition").x,E().get("vSphere").dPosition.y=E().get("endPosition").y,E().get("vSphere").dPosition.z=E().get("endPosition").z,E().get("clckCbGroup").add(E().get("vSphere"))},nde=()=>{E().set("endPosition",E().get("strtPosition").clone()),E().get("endPosition").z=lA(),D().get("autoMode")&&(E().get("clckCbGroup").position.x+=15.3,E().get("clckCbGroup").position.z-=4)},qA=()=>{const n=E().get("clckCbGroup")||{},e=D().get("yOffset")||0;if(n!=={}&&e!==0){const t=n.clckCube.position.clone();t.y=e,E().set("strtPosition",t)}else setTimeout(qA,1e3),E().set("strtPosition",{x:0,y:0,z:0})},ZA=()=>{const n=new V;E().get("scnData").camera.getWorldDirection(n);let e=Math.atan2(n.x,n.z);if(E().get("clckCbGroup").rotation.y=e,D().get("autoMode")===!1){const t=E().get("scnData"),s=t&&t.reticleStuff;s&&s.reticle&&s.reticle.matrix&&E().get("clckCbGroup").position.setFromMatrixPosition(s.reticle.matrix)}return D().get("autoMode")&&E().get("clckCbGroup").rotateY(90*(Math.PI/180)),e},YA=()=>{const n=D().get("x"),e=D().get("y"),t=D().get("z"),s=new ma(n,e,t),i=new Jp({color:"rgb(135,206,235)"}),r=new gn(s,i);return r.position.z=D().get("z"),r.position.y=D().get("y"),r.castShadow=!0,r.receiveShadow=!0,r.material.opacity=.9,r},sde=()=>{const n=new al,e=YA();return n.add(e),n.clckCube=e,n},ide=()=>{E().set("clckCbGroup",sde()),D().get("autoMode")==!0&&(E().get("clckCbGroup").clckCube.position.z+=D().get("step")*D().get("steps").length+15,E().get("clckCbGroup").position.y-=D().get("yOffset")),E().get("scnData").scene.add(E().get("clckCbGroup"))},JA=()=>{const n=E().get("scnData"),e=n&&n.reticleStuff;e&&e.reticle&&typeof e.reticle.visible<"u"&&e.reticle.visible&&(e.active=!1)},Lm=async()=>{const n=E().get("scnData").scene;if(E().get("started")===!0)return;E().set("started",!0),D().get("autoMode")||(JA(),E().get("scnData").controller.removeEventListener("select",Lm)),ide(),ZA(),qA(),nde(),await tde();const t=Khe();n.add(t);const s=Qhe();s.target=E().get("vSphere"),n.add(s),XA(),zv()},rde=n=>{const{moveSpeed:e,camera:t,controller:s}=n,i={up:!1,down:!1,left:!1,right:!1},r=new V,o=new V,a=new V,l=h=>{switch(h.code){case"ArrowUp":i.up=!0,h.preventDefault();break;case"ArrowDown":i.down=!0,h.preventDefault();break;case"ArrowLeft":i.left=!0,h.preventDefault();break;case"ArrowRight":i.right=!0,h.preventDefault();break}},c=h=>{switch(h.code){case"ArrowUp":i.up=!1,h.preventDefault();break;case"ArrowDown":i.down=!1,h.preventDefault();break;case"ArrowLeft":i.left=!1,h.preventDefault();break;case"ArrowRight":i.right=!1,h.preventDefault();break}},u=()=>{r.set(0,0,0),t.getWorldDirection(o),o.y=0,o.normalize(),a.crossVectors(o,t.up).normalize(),i.up&&(r.y+=e),i.down&&(r.y-=e),i.left&&r.add(a.clone().multiplyScalar(-e)),i.right&&r.add(a.clone().multiplyScalar(e)),r.length()>0&&(t.position.add(r),s.target.add(r),s.update())};return window.addEventListener("keydown",l),window.addEventListener("keyup",c),{cleanup:()=>{window.removeEventListener("keydown",l),window.removeEventListener("keyup",c)},update:u}},ode=function(n){const e=WA();e.style.display="block",e.style.border="none",e.style.background="rgba(0,0,0,1)",e.style.position="absolute",e.style.top="0",e.style.left="0",e.style.width="100vw",e.style.height="100vh",e.style.zIndex="1000";const t=Ihe(),s=new jp;e.contains(n.domElement)||e.appendChild(n.domElement),n.setSize(window.innerWidth,window.innerHeight);const i=new Fz(t,n.domElement);i.target.set(0,t.position.y+.8,.15),i.update();const r=rde({moveSpeed:.01,camera:t,controller:i}),o=GA();function a(){r.update();const l=E().get("scnData");if(l&&l.stpMetrics!==void 0)for(let c of l.stpMetrics)c.lookAt(l.camera.position);l&&l.stats!==void 0&&l.stats.update(),n.render(s,t),o&&o.render(s,t)}n.setAnimationLoop(a),window.addEventListener("resize",HA(t,n,o,window)),E().set("scnData",{scene:s,camera:t,renderer:n,labelRenderer:o,reticleStuff:{},controller:i,keyboardNavigation:r}),Lm(),E().set("sceneInitialized",!0)},ade=function(n){WA();const e=Ehe(),t=new jp;let s={reticle:{},active:!1};const i=n.xr.getController(0);E().get("autoMode")===!1&&(s=Mhe({scene:t,camera:e,renderer:n}),i.addEventListener("select",Lm),t.add(i));const r=GA();n.setAnimationLoop(Nhe()),window.addEventListener("resize",HA(e,n,r,window)),E().set("scnData",{scene:t,camera:e,renderer:n,labelRenderer:r,reticleStuff:s,controller:i}),E().set("sceneInitialized",!0)},KA=async()=>{if(E().get("scnData").scene,E().get("started")===!0)return;JA(),E().get("scnData").controller.removeEventListener("select",KA);const t=E().get("clckCbGroup"),s=YA();t.add(s),t.clckCube=s,ZA(),E().set("started",!0),zv()},QA=()=>{const n=document.getElementById("config-icon"),e=document.getElementById("linkedin-icon"),t=document.getElementById("params-icon"),s=document.getElementById("controls-icon"),i=document.getElementById("start-button"),r=document.getElementById("home-icon");n&&(n.style.display="none"),e&&(e.style.display="none"),i&&(i.style.display="none"),t&&(t.style.display="block"),s&&(s.style.display="block"),r&&(r.style.display="block")},lde=(n,e={})=>{const t=document.getElementById("ARButton");t!==null&&t.remove();let s=null;const i=document.createElement("button");function r(){i.style.display="block",i.textContent=D().get("displayName")||"START",i.onmouseenter=function(){i.style.opacity="1.0"},i.onmouseleave=function(){i.style.opacity="0.5"},i.onclick=function(){if(s===null)"xr"in navigator&&(QA(),navigator.xr.requestSession("immersive-ar",e).then(u));else if(i.textContent==="REPLACE"){E().get("scnData").scene;const p=E().get("clckCbGroup"),f=p.clckCube;p.remove(f),f instanceof gn&&(f.material.dispose(),f.geometry.dispose());const g=E().get("scnData").reticleStuff;g.active=!0,g.reticle.visible=!0,g.hitTestSourceInitialized=!1,g.hitTestSource=null;const y=E().get("scnData").controller;setTimeout(()=>{y.addEventListener("select",KA)},1e3),E().set("started",!1)}else s.end()};async function u(d){d.addEventListener("end",h),"xr"in navigator&&(n.xr.setReferenceSpaceType("local"),await n.xr.setSession(d),D().get("autoMode")&&Lm(),i.textContent="REPLACE",o(i),s=d)}function h(){s!==null&&(s.removeEventListener("end",h),window.location.assign("/"))}}function o(u){u.style.padding="12px 24px",u.style.border="1px solid #fff",u.style.borderRadius="4px",u.style.background="rgba(0, 0, 0, 0.1)",u.style.color="#fff",u.style.font="normal 13px sans-serif",u.style.opacity="0.5",u.style.outline="none"}function a(){i.style.display="",i.style.cursor="auto",i.style.left="calc(50% - 75px)",i.style.width="150px",i.onmouseenter=null,i.onmouseleave=null,i.onclick=null}function l(){a(),i.textContent="AR NOT SUPPORTED"}function c(u){u.style.position="absolute",i.style.cursor="pointer",i.style.left="50%",i.style.transform="translateX(-50%)",u.style.bottom="24px",u.style.padding="20px 40px",u.style.border="none",u.style.borderRadius="8px",u.style.background="#4CAF50",u.style.color="#fff",u.style.font="bold 20px sans-serif",u.style.textAlign="center",u.style.opacity="1",u.style.outline="1px solid white",u.style.zIndex="10000"}if("xr"in navigator)return i.id="ARButton",i.style.display="none",c(i),navigator.xr.isSessionSupported("immersive-ar").then(function(u){u?r():l()}).catch(l),i;{const u=document.createElement("a");return window.isSecureContext===!1?(u.href=document.location.href.replace(/^http:/,"https:"),u.innerHTML="WEBXR NEEDS HTTPS"):(u.href="https://immersiveweb.dev/",u.innerHTML="WEBXR NOT AVAILABLE"),u.style.left="calc(50% - 90px)",u.style.width="180px",u.style.textDecoration="none",c(u),u}},cde={createButton:lde},ude=async(n,e=null,t=null)=>{const s=document.getElementById("dom-overlay");if(!s)return;let i=!1;if(navigator.xr&&navigator.xr.isSessionSupported)try{i=await navigator.xr.isSessionSupported("immersive-ar")}catch{i=!1}if(i){typeof t=="function"&&t(n);const r=cde.createButton(n,{requiredFeatures:["hit-test"],optionalFeatures:["dom-overlay"],domOverlay:{root:s}});r!==void 0&&s.appendChild(r)}else{const r=document.createElement("button");r.innerHTML=D().get("displayName")||"START",r.id="start-button",r.style.cssText=`
      position: absolute;
      bottom: 24px;
      padding: 20px 40px;
      border: none;
      border-radius: 8px;
      background: #4CAF50;
      color: #fff;
      font: bold 20px sans-serif;
      text-align: center;
      opacity: 1;
      outline: none;
      z-index: 999;
      cursor: pointer;
      left: 50%;
      transform: translateX(-50%);
      outline: 1px solid white;
    `,r.addEventListener("click",()=>{if(typeof e=="function")QA(),e(n);else{const o=document.createElement("div");o.style.cssText=`
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          text-align: center;
          background: rgba(0, 0, 0, 0.7);
          color: white;
          padding: 2rem;
          border-radius: 8px;
        `,o.innerHTML=`
          <h2>2D Experience</h2>
          <p>Augmented Reality is not supported on this device.<br>You are viewing the 2D desktop experience.</p>
        `,document.body&&document.body.appendChild(o)}}),s.appendChild(r)}},eR=()=>{const n=D().get("x"),e=D().get("y"),t=D().get("z");if(n===void 0||e===void 0||t===void 0){setTimeout(eR,1e3);return}const s=Ahe();ude(s,ode,ade)},hde=()=>{if(D().get("steps")===void 0||D().get("numberOfSteps")===void 0)return;const n=D().get("steps"),e=D().get("numberOfSteps");if(e<n.length)for(;e<n.length;)n.pop();else if(e>n.length)for(n.length>0&&(n[n.length-1].status="wait");e>n.length;)n.push({name:"Step "+(n.length+1),status:"wait",limit:0,movingLimit:0,devUnits:0,movingDevUnits:0,flwTimeAtStart:1,actualFlwTime:1});n[0].status="backlog",n[n.length-1].status="done",n.forEach((t,s)=>{t.limit=t.limit||0,t.movingLimit=t.limit,t.status!=="touch"&&(t.devUnits=0,t.flwTimeAtStart=0,t.actualFlwTime=0),t.status==="touch"&&(t.devUnits=t.devUnits||0,t.devUnits=t.devUnits,t.flwTimeAtStart=t.flwTimeAtStart||1,t.actualFlwTime=t.actualFlwTime||1),t.status==="done"&&(t.limit=0,t.movingLimit=0)}),D().set("steps",n),$p()},dde="/?sid=Example0___834645&share=eyJkZXZQb3dlckZpeCI6MSwiZHJhZyI6MC40LCJkcmFnUG9pbnQiOjAuNSwicGFyZXRvUG9pbnQiOjAuOCwiYXJyaXZhbFJhdGUiOjIuMjUsImZsd1RpbWVNaW4iOjEsInRpbWVCb3giOjEwLCJleHBkdFF1ZXVlTGVuZ3RoIjowLCJleHBkdER2VW5pdHNGYWN0b3IiOjAsImZsd0l0bVNpemVMaW1pdCI6MSwibnVtYmVyT2ZTdGVwcyI6MywicmFuZ2VNYXgiOjEwLCJyYW5nZUluY3JlYXNlUmF0ZSI6MC4xLCJyYW5nZU1pZHBvaW50IjowLjEsImZwcyI6MSwic2hvd01ldHJpY3MiOnRydWUsImNvbG9yR29sZCI6ImY2YmEwMCIsImNvbG9yR3JleSI6IjgwODA4MCIsImNvbG9yR3JlZW4iOiIwMGZmMDAiLCJjb2xvckJsdWUiOiIxZDI1NzAiLCJwYXJhbXNNYXhXaXAiOjEyLCJzY2FsZUNtIjo3LCJzY2FsZSI6MC4wNywieCI6MC4wNywieSI6MC4wNywieiI6MC4wNywic3RlcCI6MC4zNSwieU9mZnNldCI6MC43LCJzaWQiOiJFeGFtcGxlMCIsImRldlVuaXRzVGVybSI6IkRldnMiLCJkaXNwbGF5TmFtZSI6IkV4YW1wbGUgMDogTm8gV0lQIExpbWl0IiwiZGV2VW5pdHNNb3ZlVG9Xb3JrIjpmYWxzZSwiZGVhdGgiOjAsImJhY2tsb2dEZWF0aCI6MCwic3RlcHMiOlt7Im5hbWUiOiJCYWNrbG9nIiwic3RhdHVzIjoiYmFja2xvZyIsImxpbWl0Ijo4LCJtb3ZpbmdMaW1pdCI6OCwiYXZBZ2UiOjAsImRldlVuaXRzIjowLCJmbHdUaW1lQXRTdGFydCI6MCwiYWN0dWFsRmx3VGltZSI6MCwibW92aW5nRGV2VW5pdHMiOjB9LHsibmFtZSI6IkluIFByb2dyZXNzIiwic3RhdHVzIjoidG91Y2giLCJsaW1pdCI6MCwibW92aW5nTGltaXQiOjAsImF2QWdlIjowLCJkZXZVbml0cyI6OCwibW92aW5nRGV2VW5pdHMiOjgsImZsd1RpbWVBdFN0YXJ0Ijo1LCJhY3R1YWxGbHdUaW1lIjo1fSx7Im5hbWUiOiJEb25lIiwic3RhdHVzIjoiZG9uZSIsImxpbWl0IjowLCJhdkFnZSI6MCwibW92aW5nTGltaXQiOjAsImRldlVuaXRzIjowLCJmbHdUaW1lQXRTdGFydCI6MCwiYWN0dWFsRmx3VGltZSI6MCwibW92aW5nRGV2VW5pdHMiOjB9XSwiZGV2UG93ZXJGaXhQYXJhbSI6ZmFsc2UsImRyYWdQYXJhbSI6ZmFsc2UsImRyYWdQb2ludFBhcmFtIjpmYWxzZSwicGFyZXRvUG9pbnRQYXJhbSI6ZmFsc2UsImFycml2YWxSYXRlUGFyYW0iOmZhbHNlLCJmbHdUaW1lTWluUGFyYW0iOnRydWUsInRpbWVCb3hQYXJhbSI6ZmFsc2UsImV4cGR0UXVldWVMZW5ndGhQYXJhbSI6ZmFsc2UsImV4cGR0RHZVbml0c0ZhY3RvclBhcmFtIjpmYWxzZSwiZmx3SXRtU2l6ZUxpbWl0UGFyYW0iOmZhbHNlLCJiYWNrbG9nRGVhdGhQYXJhbSI6ZmFsc2UsIm1vdmluZ1dpcExpbWl0c1BhcmFtIjp0cnVlLCJtb3ZpbmdEZXZVbml0c1BhcmFtIjpmYWxzZSwiZGV2VW5pdHNNb3ZlVG9Xb3JrUGFyYW0iOmZhbHNlLCJmcHNQYXJhbSI6dHJ1ZX0=",pde=n=>{const[e,t]=Kt({});Bt(()=>{t(wde())},[]);const[s,i]=Kt(!0);Bt(()=>{R_(),eR()},[]),Bt(()=>{tR(n.sid,n.share)(),hde()},[n.share]),Bt(()=>{vde(s)()},[s]),Bt(()=>{const o=new URL(window.location.href),a=o.searchParams.get("sid"),l=o.searchParams.get("share");!a&&!l&&D().get("sid")==="FlwAttractor_v0.1.0"&&Pp(dde)},[]);const r=o=>{setInterval(()=>{E().get("started")===!0?i(!1):i(!0)},1e3)};return Bt(()=>{r()},[]),Bt(()=>{const o=R_(),a=E().get("scnData");a.stats=o;const l=document.getElementById("dom-overlay");l===null||window===void 0||window.location.hostname!=="localhost"||l.appendChild(o.dom)},[]),Fe`
    <div id="flw" className="${e.flw}">
      <div id="landing-container">
        <div id="logo" className="${e.logoDiv}">
          <div>
            <img src="/img/logo_final_05.png" className="${e.logo}" />
          </div>
        </div>
        <div id="shortcuts-container" className="${e.shortcutsDiv}">
          <select
            class="browser-default"
            className="${e.shortcutsSelect}"
            onChange=${fde}
          >
            <option value="" disabled selected>Presets:</option>
            <option value=${mde}>
              EXAMPLE_0: No WIP Limit (Hint: 1. Set WIP limit to 8)
            </option>
            <option value=${gde}>
              EXAMPLE_1: Time Period & Little's Law (Hint: 1. Set TimeBox to 12)
            </option>
            <option value=${xde}>
              EXAMPLE_2: Bottleneck in Test (Hint: 1. People can move 2. Set WIP
              limit in)
            </option>
            <option value=${yde}>
              EXAMPLE_3: Initiative WIP (Hint: 1. Set WIP limit to 25 2. Set max
              size limit to 20%)
            </option>
          </select>
        </div>
      </div>
      <div id="dom-overlay">
        <${Qz} />
        <${She} />
        <${Che} />
        <${sB} />
        <${iB} />
        <${Wd} />
        <${hB} />
      </div>
    </div>
  `},fde=n=>{const e=n.currentTarget.value;Pp(e),setTimeout(Qp,100)},mde="/?sid=Example0___834645&share=eyJkZXZQb3dlckZpeCI6MSwiZHJhZyI6MC40LCJkcmFnUG9pbnQiOjAuNSwicGFyZXRvUG9pbnQiOjAuOCwiYXJyaXZhbFJhdGUiOjIuMjUsImZsd1RpbWVNaW4iOjEsInRpbWVCb3giOjEwLCJleHBkdFF1ZXVlTGVuZ3RoIjowLCJleHBkdER2VW5pdHNGYWN0b3IiOjAsImZsd0l0bVNpemVMaW1pdCI6MSwibnVtYmVyT2ZTdGVwcyI6MywicmFuZ2VNYXgiOjEwLCJyYW5nZUluY3JlYXNlUmF0ZSI6MC4xLCJyYW5nZU1pZHBvaW50IjowLjEsImZwcyI6MSwic2hvd01ldHJpY3MiOnRydWUsImNvbG9yR29sZCI6ImY2YmEwMCIsImNvbG9yR3JleSI6IjgwODA4MCIsImNvbG9yR3JlZW4iOiIwMGZmMDAiLCJjb2xvckJsdWUiOiIxZDI1NzAiLCJwYXJhbXNNYXhXaXAiOjEyLCJzY2FsZUNtIjo3LCJzY2FsZSI6MC4wNywieCI6MC4wNywieSI6MC4wNywieiI6MC4wNywic3RlcCI6MC4zNSwieU9mZnNldCI6MC43LCJzaWQiOiJFeGFtcGxlMCIsImRldlVuaXRzVGVybSI6IkRldnMiLCJkaXNwbGF5TmFtZSI6IkV4YW1wbGUgMDogTm8gV0lQIExpbWl0IiwiZGV2VW5pdHNNb3ZlVG9Xb3JrIjpmYWxzZSwiZGVhdGgiOjAsImJhY2tsb2dEZWF0aCI6MCwic3RlcHMiOlt7Im5hbWUiOiJCYWNrbG9nIiwic3RhdHVzIjoiYmFja2xvZyIsImxpbWl0Ijo4LCJtb3ZpbmdMaW1pdCI6OCwiYXZBZ2UiOjAsImRldlVuaXRzIjowLCJmbHdUaW1lQXRTdGFydCI6MCwiYWN0dWFsRmx3VGltZSI6MCwibW92aW5nRGV2VW5pdHMiOjB9LHsibmFtZSI6IkluIFByb2dyZXNzIiwic3RhdHVzIjoidG91Y2giLCJsaW1pdCI6MCwibW92aW5nTGltaXQiOjAsImF2QWdlIjowLCJkZXZVbml0cyI6OCwibW92aW5nRGV2VW5pdHMiOjgsImZsd1RpbWVBdFN0YXJ0Ijo1LCJhY3R1YWxGbHdUaW1lIjo1fSx7Im5hbWUiOiJEb25lIiwic3RhdHVzIjoiZG9uZSIsImxpbWl0IjowLCJhdkFnZSI6MCwibW92aW5nTGltaXQiOjAsImRldlVuaXRzIjowLCJmbHdUaW1lQXRTdGFydCI6MCwiYWN0dWFsRmx3VGltZSI6MCwibW92aW5nRGV2VW5pdHMiOjB9XSwiZGV2UG93ZXJGaXhQYXJhbSI6ZmFsc2UsImRyYWdQYXJhbSI6ZmFsc2UsImRyYWdQb2ludFBhcmFtIjpmYWxzZSwicGFyZXRvUG9pbnRQYXJhbSI6ZmFsc2UsImFycml2YWxSYXRlUGFyYW0iOmZhbHNlLCJmbHdUaW1lTWluUGFyYW0iOnRydWUsInRpbWVCb3hQYXJhbSI6ZmFsc2UsImV4cGR0UXVldWVMZW5ndGhQYXJhbSI6ZmFsc2UsImV4cGR0RHZVbml0c0ZhY3RvclBhcmFtIjpmYWxzZSwiZmx3SXRtU2l6ZUxpbWl0UGFyYW0iOmZhbHNlLCJiYWNrbG9nRGVhdGhQYXJhbSI6ZmFsc2UsIm1vdmluZ1dpcExpbWl0c1BhcmFtIjp0cnVlLCJtb3ZpbmdEZXZVbml0c1BhcmFtIjpmYWxzZSwiZGV2VW5pdHNNb3ZlVG9Xb3JrUGFyYW0iOmZhbHNlLCJmcHNQYXJhbSI6dHJ1ZX0=",gde="/?sid=EXAMPLE_1___170230&share=eyJkZXZQb3dlckZpeCI6MSwiZHJhZyI6MCwiZHJhZ1BvaW50IjowLjUsInBhcmV0b1BvaW50IjowLjgsImFycml2YWxSYXRlIjoxMiwiZmx3VGltZU1pbiI6NiwidGltZUJveCI6MTAsImV4cGR0UXVldWVMZW5ndGgiOjAsImV4cGR0RHZVbml0c0ZhY3RvciI6MSwiZmx3SXRtU2l6ZUxpbWl0IjoxLCJudW1iZXJPZlN0ZXBzIjozLCJyYW5nZU1heCI6MTAsInJhbmdlSW5jcmVhc2VSYXRlIjowLjEsInJhbmdlTWlkcG9pbnQiOjAuMSwiZnBzIjoxLCJzaG93TWV0cmljcyI6dHJ1ZSwiY29sb3JHb2xkIjoiZjZiYTAwIiwiY29sb3JHcmV5IjoiODA4MDgwIiwiY29sb3JHcmVlbiI6IjAwZmYwMCIsImNvbG9yQmx1ZSI6IjFkMjU3MCIsInBhcmFtc01heFdpcCI6MTIsInNjYWxlQ20iOjcsInNjYWxlIjowLjA3LCJ4IjowLjA3LCJ5IjowLjA3LCJ6IjowLjA3LCJzdGVwIjowLjM1LCJ5T2Zmc2V0IjowLjcsImRldlVuaXRzVGVybSI6IkRldnMiLCJkaXNwbGF5TmFtZSI6IkV4YW1wbGUgMTogVGltZWJveCBhbmQgTGl0dGxlJ3MgTGF3IiwiZGVhdGgiOjAsImJhY2tsb2dEZWF0aCI6MCwic3RlcHMiOlt7Im5hbWUiOiJCYWNrbG9nIiwic3RhdHVzIjoiYmFja2xvZyIsImxpbWl0IjoxMiwibW92aW5nTGltaXQiOjEyLCJhdkFnZSI6MCwiZGV2VW5pdHMiOjAsImZsd1RpbWVBdFN0YXJ0IjowLCJhY3R1YWxGbHdUaW1lIjowLCJtb3ZpbmdEZXZVbml0cyI6MH0seyJuYW1lIjoiSW4gUHJvZ3Jlc3MiLCJzdGF0dXMiOiJ0b3VjaCIsImxpbWl0IjoxMiwibW92aW5nTGltaXQiOjEyLCJhdkFnZSI6MCwiZGV2VW5pdHMiOjYsIm1vdmluZ0RldlVuaXRzIjo2LCJmbHdUaW1lQXRTdGFydCI6NiwiYWN0dWFsRmx3VGltZSI6Nn0seyJuYW1lIjoiRG9uZSIsInN0YXR1cyI6ImRvbmUiLCJsaW1pdCI6MCwiYXZBZ2UiOjAsIm1vdmluZ0xpbWl0IjowLCJkZXZVbml0cyI6MCwiZmx3VGltZUF0U3RhcnQiOjAsImFjdHVhbEZsd1RpbWUiOjAsIm1vdmluZ0RldlVuaXRzIjowfV0sImRldlBvd2VyRml4UGFyYW0iOmZhbHNlLCJkcmFnUGFyYW0iOmZhbHNlLCJkcmFnUG9pbnRQYXJhbSI6ZmFsc2UsInBhcmV0b1BvaW50UGFyYW0iOmZhbHNlLCJhcnJpdmFsUmF0ZVBhcmFtIjpmYWxzZSwidGltZUJveFBhcmFtIjp0cnVlLCJleHBkdFF1ZXVlTGVuZ3RoUGFyYW0iOmZhbHNlLCJleHBkdER2VW5pdHNGYWN0b3JQYXJhbSI6ZmFsc2UsImZsd0l0bVNpemVMaW1pdFBhcmFtIjpmYWxzZSwiYmFja2xvZ0RlYXRoUGFyYW0iOmZhbHNlLCJtb3ZpbmdXaXBMaW1pdHNQYXJhbSI6dHJ1ZSwibW92aW5nRGV2VW5pdHNQYXJhbSI6dHJ1ZSwiZnBzUGFyYW0iOnRydWUsImNvbG9yR29zZCI6ImY2YmEwMCIsInNpZCI6IkV4YW1wbGUxIn0=",xde="/?sid=Example2___878225&share=eyJkZXZQb3dlckZpeCI6My4xLCJkcmFnIjowLjUsImRyYWdQb2ludCI6MC41LCJwYXJldG9Qb2ludCI6MC44LCJhcnJpdmFsUmF0ZSI6MjAsImZsd1RpbWVNaW4iOjMsInRpbWVCb3giOjEwLCJleHBkdFF1ZXVlTGVuZ3RoIjowLCJleHBkdER2VW5pdHNGYWN0b3IiOjEsImZsd0l0bVNpemVMaW1pdCI6MSwibnVtYmVyT2ZTdGVwcyI6NiwicmFuZ2VNYXgiOjEwLCJyYW5nZUluY3JlYXNlUmF0ZSI6MC4xLCJyYW5nZU1pZHBvaW50IjowLjEsImZwcyI6MSwic2hvd01ldHJpY3MiOnRydWUsImNvbG9yR29sZCI6ImY2YmEwMCIsImNvbG9yR3JleSI6IjgwODA4MCIsImNvbG9yR3JlZW4iOiIwMGZmMDAiLCJjb2xvckJsdWUiOiIxZDI1NzAiLCJwYXJhbXNNYXhXaXAiOjIwLCJzY2FsZUNtIjo3LCJzY2FsZSI6MC4wNywieCI6MC4wNywieSI6MC4wNywieiI6MC4wNywic3RlcCI6MC4zNSwieU9mZnNldCI6MC43LCJzaWQiOiJFeGFtcGxlMiIsImRldlVuaXRzVGVybSI6IkRldnMiLCJkaXNwbGF5TmFtZSI6IkV4YW1wbGUgMjogQm90dGxlbmVjayBJbiBUZXN0IiwiZGV2VW5pdHNNb3ZlVG9Xb3JrIjpmYWxzZSwiZGVhdGgiOjAsImJhY2tsb2dEZWF0aCI6MCwic3RlcHMiOlt7Im5hbWUiOiJUbyBEbyIsInN0YXR1cyI6ImJhY2tsb2ciLCJsaW1pdCI6MTAsIm1vdmluZ0xpbWl0IjoxMCwiYXZBZ2UiOjAsImRldlVuaXRzIjowLCJmbHdUaW1lQXRTdGFydCI6MCwiYWN0dWFsRmx3VGltZSI6MCwibW92aW5nRGV2VW5pdHMiOjB9LHsibmFtZSI6IlJlYWR5Iiwic3RhdHVzIjoid2FpdCIsImxpbWl0IjoxMCwibW92aW5nTGltaXQiOjEwLCJhdkFnZSI6MCwiZGV2VW5pdHMiOjAsImZsd1RpbWVBdFN0YXJ0IjowLCJhY3R1YWxGbHdUaW1lIjowLCJtb3ZpbmdEZXZVbml0cyI6MH0seyJuYW1lIjoiSW4gUHJvZ3Jlc3MiLCJzdGF0dXMiOiJ0b3VjaCIsImxpbWl0IjoxMCwibW92aW5nTGltaXQiOjEwLCJkZXZVbml0cyI6NSwibW92aW5nRGV2VW5pdHMiOjUsImZsd1RpbWVBdFN0YXJ0Ijo1LCJhY3R1YWxGbHdUaW1lIjo1LCJhdkFnZSI6MH0seyJuYW1lIjoiUmVhZHkgZm9yIFRlc3QiLCJzdGF0dXMiOiJ3YWl0IiwibGltaXQiOjAsIm1vdmluZ0xpbWl0IjowLCJhdkFnZSI6MCwiZGV2VW5pdHMiOjAsImZsd1RpbWVBdFN0YXJ0IjowLCJhY3R1YWxGbHdUaW1lIjowLCJtb3ZpbmdEZXZVbml0cyI6MH0seyJuYW1lIjoiSW4gVGVzdCIsInN0YXR1cyI6InRvdWNoIiwibGltaXQiOjEwLCJtb3ZpbmdMaW1pdCI6MTAsImRldlVuaXRzIjo1LCJtb3ZpbmdEZXZVbml0cyI6NSwiZmx3VGltZUF0U3RhcnQiOjUsImFjdHVhbEZsd1RpbWUiOjcsImF2QWdlIjowfSx7Im5hbWUiOiJEb25lIiwic3RhdHVzIjoiZG9uZSIsImxpbWl0IjowLCJhdkFnZSI6MCwibW92aW5nTGltaXQiOjAsImRldlVuaXRzIjowLCJmbHdUaW1lQXRTdGFydCI6MCwiYWN0dWFsRmx3VGltZSI6MCwibW92aW5nRGV2VW5pdHMiOjB9XSwiZGV2UG93ZXJGaXhQYXJhbSI6dHJ1ZSwiZHJhZ1BhcmFtIjpmYWxzZSwiZHJhZ1BvaW50UGFyYW0iOmZhbHNlLCJwYXJldG9Qb2ludFBhcmFtIjpmYWxzZSwiYXJyaXZhbFJhdGVQYXJhbSI6ZmFsc2UsImZsd1RpbWVNaW5QYXJhbSI6dHJ1ZSwidGltZUJveFBhcmFtIjpmYWxzZSwiZXhwZHRRdWV1ZUxlbmd0aFBhcmFtIjpmYWxzZSwiZXhwZHREdlVuaXRzRmFjdG9yUGFyYW0iOmZhbHNlLCJmbHdJdG1TaXplTGltaXRQYXJhbSI6ZmFsc2UsImJhY2tsb2dEZWF0aFBhcmFtIjpmYWxzZSwibW92aW5nV2lwTGltaXRzUGFyYW0iOnRydWUsIm1vdmluZ0RldlVuaXRzUGFyYW0iOnRydWUsImRldlVuaXRzTW92ZVRvV29ya1BhcmFtIjp0cnVlLCJmcHNQYXJhbSI6dHJ1ZSwiY29sb3JHb3NkIjoiZjZiYTAwIn0=",yde="/?sid=EXAMPLE_3___444681&share=eyJkZXZQb3dlckZpeCI6My4zLCJkcmFnIjowLjQsImRyYWdQb2ludCI6MC41LCJwYXJldG9Qb2ludCI6MC4yLCJhcnJpdmFsUmF0ZSI6MTAsImZsd1RpbWVNaW4iOjEwLCJ0aW1lQm94Ijo2MCwiZXhwZHRRdWV1ZUxlbmd0aCI6MCwiZXhwZHREdlVuaXRzRmFjdG9yIjoxLCJmbHdJdG1TaXplTGltaXQiOjEsIm51bWJlck9mU3RlcHMiOjQsInJhbmdlTWF4IjoxMCwicmFuZ2VJbmNyZWFzZVJhdGUiOjAuMSwicmFuZ2VNaWRwb2ludCI6MC4xLCJmcHMiOjEsInNob3dNZXRyaWNzIjp0cnVlLCJjb2xvckdvbGQiOiJmNmJhMDAiLCJjb2xvckdyZXkiOiI4MDgwODAiLCJjb2xvckdyZWVuIjoiMDBmZjAwIiwiY29sb3JCbHVlIjoiMWQyNTcwIiwicGFyYW1zTWF4V2lwIjoyMCwic2NhbGVDbSI6Nywic2NhbGUiOjAuMDcsIngiOjAuMDcsInkiOjAuMDcsInoiOjAuMDcsInN0ZXAiOjAuMzUsInlPZmZzZXQiOjAuNywic2lkIjoiRXhhbXBsZTMiLCJkZXZVbml0c1Rlcm0iOiJEZXZzIiwiZGlzcGxheU5hbWUiOiJFeGFtcGxlIDM6IEluaXRpYXRpdmUgV0lQIiwiZGVhdGgiOjAsImJhY2tsb2dEZWF0aCI6MCwic3RlcHMiOlt7Im5hbWUiOiJPcGVuIiwic3RhdHVzIjoiYmFja2xvZyIsImxpbWl0Ijo2OCwibW92aW5nTGltaXQiOjY4LCJhdkFnZSI6NDAuNTgsImRldlVuaXRzIjowLCJmbHdUaW1lQXRTdGFydCI6MCwiYWN0dWFsRmx3VGltZSI6MCwibW92aW5nRGV2VW5pdHMiOjB9LHsibmFtZSI6IlJlYWR5Iiwic3RhdHVzIjoid2FpdCIsImxpbWl0IjoxMCwibW92aW5nTGltaXQiOjEwLCJhdkFnZSI6NS43LCJkZXZVbml0cyI6MCwiZmx3VGltZUF0U3RhcnQiOjAsImFjdHVhbEZsd1RpbWUiOjAsIm1vdmluZ0RldlVuaXRzIjowfSx7Im5hbWUiOiJJbiBQcm9ncmVzcyIsInN0YXR1cyI6InRvdWNoIiwibGltaXQiOjEzMCwibW92aW5nTGltaXQiOjEzMCwiZGV2VW5pdHMiOjI1LCJtb3ZpbmdEZXZVbml0cyI6MjUsImZsd1RpbWVBdFN0YXJ0IjoxODAsImFjdHVhbEZsd1RpbWUiOjE4MCwiYXZBZ2UiOjEwMC42NX0seyJuYW1lIjoiRG9uZSIsInN0YXR1cyI6ImRvbmUiLCJsaW1pdCI6MCwiYXZBZ2UiOjAsIm1vdmluZ0xpbWl0IjowLCJkZXZVbml0cyI6MCwiZmx3VGltZUF0U3RhcnQiOjAsImFjdHVhbEZsd1RpbWUiOjAsIm1vdmluZ0RldlVuaXRzIjowfV0sImRldlBvd2VyRml4UGFyYW0iOmZhbHNlLCJkcmFnUGFyYW0iOmZhbHNlLCJkcmFnUG9pbnRQYXJhbSI6ZmFsc2UsInBhcmV0b1BvaW50UGFyYW0iOmZhbHNlLCJhcnJpdmFsUmF0ZVBhcmFtIjpmYWxzZSwidGltZUJveFBhcmFtIjpmYWxzZSwiZXhwZHRRdWV1ZUxlbmd0aFBhcmFtIjpmYWxzZSwiZXhwZHREdlVuaXRzRmFjdG9yUGFyYW0iOmZhbHNlLCJmbHdJdG1TaXplTGltaXRQYXJhbSI6dHJ1ZSwiYmFja2xvZ0RlYXRoUGFyYW0iOmZhbHNlLCJtb3ZpbmdXaXBMaW1pdHNQYXJhbSI6dHJ1ZSwibW92aW5nRGV2VW5pdHNQYXJhbSI6ZmFsc2UsImZwc1BhcmFtIjp0cnVlLCJjb2xvckdvc2QiOiJmNmJhMDAifQ==",bde=()=>{const n=window.location.protocol+"//"+window.location.hostname+(window.location.port?":"+window.location.port:"")+window.location.pathname;window.history.replaceState({},null,n)};typeof process>"u"&&window.addEventListener("load",()=>{bde()});const tR=(n,e)=>()=>{if(D().get("death")!==void 0){if(n!==void 0&&e!==void 0){D().setSid(n);const s=JSON.parse(atob(e));Object.keys(s).forEach(i=>{D().set(i,s[i])}),$p(),Qp()}}else setTimeout(tR(n,e),1e3)},vde=n=>()=>{const e=document.getElementById("shortcuts-container");e!==null&&(n===!0?e.style.display="flex":e.style.display="none")},wde=()=>{Er(kr("flw"));const[n]=Mr({flw:{width:"100%",height:"100%",backgroundImage:"url(/img/bg3.png)",backgroundClip:"border-box",backgroundSize:"cover",backgroundRepeat:"none",position:"absolute",backgroundPosition:"center"},logoDiv:{width:"100%",display:"flex",justifyContent:"center",alignItems:"flex-start",marginTop:"-20px",marginBottom:"-60px"},logo:{width:"100vw",maxWidth:"100vh",minWidth:"80vh",height:"auto",marginTop:"0vh"},shortcutsDiv:{width:"100%",display:"flex",justifyContent:"center",alignItems:"flex-start",height:"130px",zIndex:"2",paddingTop:"0px",paddingLeft:"20px",paddingRight:"20px",boxSizing:"border-box"},shortcutsSelect:{display:"block",maxWidth:"400px"}});return n},Sde=n=>(console.log("App rendered"),Fe`
    <${sw}>
      <${Ji}>
        <${pde} path="/" default />
        <${Wd} path="/config" />
        <${Wd} path="/config" />
        <${Wd} path="/config" />
      </${Ji}>
    </${sw}>
  `);xR().then(()=>{yR(),bR(),$_(),D().get("easyStorage")===!0&&setInterval(mR,1e3),TR(Fe` <${Sde} /> `,document.getElementById("goodthing"))});
